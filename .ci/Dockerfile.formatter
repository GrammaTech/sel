ARG FROM=docker.grammatech.com/synthesis/sel/arch-sbcl
FROM ${FROM}

RUN pacman --noconfirm -Sy archlinux-keyring && pacman -Sy --noconfirm base-devel git emacs
RUN sed -i "s/^\(OPT_LONG=(\)/\1'asroot' /;s/EUID == 0/1 == 0/" /usr/bin/makepkg
RUN git clone --depth 1 https://aur.archlinux.org/yay.git /yay-aur
RUN sed -i "s|^  make|  sed -i 's/os.Geteuid()/1/' main.go install.go\\n  make|" /yay-aur/PKGBUILD
RUN cd /yay-aur && makepkg --noconfirm -si
RUN yay --noconfirm -Sy aur/slime aur/emacs-paredit

RUN curl https://raw.githubusercontent.com/eschulte/lisp-format/master/lisp-format > /usr/bin/lisp-format
RUN chmod +x /usr/bin/lisp-format
RUN echo "(add-to-list 'load-path \"/usr/share/emacs/site-lisp/\")" > /root/.lisp-formatrc

RUN curl https://llvm.org/svn/llvm-project/cfe/trunk/tools/clang-format/git-clang-format > /usr/bin/git-lisp-format
RUN sed -i "s/clang-format/lisp-format/g;s/clangFormat/lispFormat/;s/default_extensions =.*\$/default_extensions = ','.join(['lisp','cl','asd','scm','el'])/;/# From clang\/lib\/Frontend\/FrontendOptions.cpp, all lower case/,/])/d" /usr/bin/git-lisp-format
RUN chmod +x /usr/bin/git-lisp-format

RUN rm -rf /root/quicklisp/local-projects/sel
COPY . /root/quicklisp/local-projects/sel
WORKDIR /root/quicklisp/local-projects/sel

## Run lisp-format on all commits since origin/master, error if any changes are required.
ARG RUN=yes
RUN [ $RUN == yes ] || exit 0;OUTPUT=$(git lisp-format --style file --diff origin/master);if [ "${OUTPUT}" == "no modified files to format" ] || [ "${OUTPUT}" == "lisp-format did not modify any files" ];then exit 0; else echo "Run git lisp-format, then retry." >&2; exit 2; fi
