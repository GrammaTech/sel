
@anchor{api-test-suites}
@subsection Test Suites
[
@ref{SEL API, API} |
@ref{api-supporting-objects, Supporting Objects} |
Test Suites
]


@itemize
@item @ref{api-test-suites-test-suite, Class @code{test-suite}}
@item @ref{api-test-suites-test-case, Class @code{test-case}}
@item @ref{api-test-suites-process, Class @code{process}}
@end itemize


@anchor{api-test-suites-test-suite}
@subsubsection Class @code{test-suite}

[
@ref{SEL API, API} |
@ref{api-supporting-objects, Supporting Objects} |
@ref{api-test-suites,Test Suites} |
Class @code{test-suite}
]

@itemize
@item Class @refapiclass{test-suite}

@item Methods
  @itemize
@c whitespace in this reference is important
  @item @refapimethod{collect-traces ((obj software) (test-suite test-suite) &key max
                  (bin (temp-file-name)) &aux (args (list bin bin))
                  (delete-bin-p t))}
@c whitespace in this reference is important
  @item @refapimethod{evaluate (phenome (test-suite test-suite) &rest extra-keys &key
                    &allow-other-keys)}
  @end itemize
@end itemize



@include include/class-sel-test-suite.texinfo


@c ----------------------------------------

@anchor{api-test-suites-test-case}
@subsubsection Class @code{test-case}

[
@ref{SEL API, API} |
@ref{api-supporting-objects, Supporting Objects} |
@ref{api-test-suites,Test Suites} |
Class @code{test-case}
]


@itemize
@item Class @refapiclass{test-case}
@item Generic Functions
  @itemize
  @item @refapigeneric{run-test}
  @item @refapigeneric{start-test}
  @end itemize

@item Methods
  @itemize
@c whitespace in this reference is important
  @item @refapimethod{collect-trace ((obj software) (test-case test-case) &key max
                 (bin (temp-file-name)) &aux (delete-bin-p t))}
  @item @refapimethod{evaluate (phenome (obj test-case) &rest extra-keys &key &allow-other-keys)}
  @item @refapimethod{run-test (phenome (test-case test-case) &rest extra-keys &key &allow-other-keys)}
  @item @refapimethod{start-test (phenome (test-case test-case) &rest extra-keys &key
                      &allow-other-keys)}
  @end itemize
@end itemize

@include include/class-sel-test-case.texinfo
@include include/fun-sel-finish-test.texinfo
@include include/fun-sel-run-test.texinfo
@include include/fun-sel-start-test.texinfo


@anchor{api-test-suites-process}
@subsubsection Class @code{process}

[
@ref{SEL API, API} |
@ref{api-supporting-objects, Supporting Objects} |
@ref{api-test-suites,Test Suites} |
Class @code{process}
]

@itemize
@item Class @refapiclass{process}
@item Generic Functions
  @itemize
  @item @refapigeneric{finish-test}
  @item @refapigeneric{process-error-stream}
  @item @refapigeneric{process-exit-code}
  @item @refapigeneric{process-id}
  @item @refapigeneric{process-input-stream}
  @item @refapigeneric{process-output-stream}
  @item @refapigeneric{process-status}
  @item @refapigeneric{signal-process}
  @end itemize

@item Methods
  @itemize
  @item @refapimethod{finish-test ((test-process process) &key kill-signal timeout)}
  @item @refapimethod{process-error-stream ((process process))}
  @item @refapimethod{process-exit-code ((process process))}
  @item @refapimethod{process-id ((process process))}
  @item @refapimethod{process-input-stream ((process process))}
  @item @refapimethod{process-output-stream ((process process))}
  @item @refapimethod{process-status ((process process))}
  @item @refapimethod{signal-process ((process process) (signal-number integer))}
  @end itemize
@end itemize


@include include/class-sel-process.texinfo
@include include/fun-sel-process-error-stream.texinfo
@include include/fun-sel-process-exit-code.texinfo
@include include/fun-sel-process-id.texinfo
@include include/fun-sel-process-input-stream.texinfo
@include include/fun-sel-process-output-stream.texinfo
@include include/fun-sel-process-status.texinfo
@include include/fun-sel-signal-process.texinfo
