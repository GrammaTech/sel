

@itemize
@item @ref{troubleshooting-build,Build Issues}
@item @ref{troubleshooting-test,Test Issues}
@end itemize


@anchor{troubleshooting-build}
@section Troubleshooting Build Issues

@itemize
@item @ref{troubleshoot-curry-compose-reader-macros,
           @code{CURRY-COMPOSE-READER-MACROS  LCURLY-BRACE-READER} is undefined}
@item @ref{troubleshoot-delete-cache-files,Deleting cache files}
@end itemize

@anchor{troubleshoot-curry-compose-reader-macros}
@subheading @code{CURRY-COMPOSE-READER-MACROS::LCURLY-BRACE-READER} is undefined

This usually indicates an issue with cache files created by ASDF.

To resolve this issue:
@itemize
@item select the @code{try-recompiling} restart at the repl, or
@item @ref{troubleshoot-delete-cache-files,delete cache files}.
@end itemize


@anchor{troubleshoot-delete-cache-files}
@subheading Deleting cache files

As part of the compilation process, ASDF saves compiled files to a
cache as described
@url{http://soc.if.usp.br/manual/cl-asdf/asdf/Controlling-where-ASDF-saves-compiled-files.html,in the ASDF manual}.
When dealing with some compilation issues
(see @ref{troubleshoot-curry-compose-reader-macros,
@code{CURRY-COMPOSE-READER-MACROS  LCURLY-BRACE-READER} is undefined}),
it may be necessary to delete the cache.

By default, the cache should be located in
@code{~/.cache/common-lisp/[lisp-implementation]/path/to/local/projects/software-evolution-library}.

To remove the cache, execute:

@example
    rm -rf ~/.cache/common-lisp/[lisp-implementation]/path/to/local/projects/software-evolution-library
@end example


@anchor{troubleshooting-test}
@section Troubleshooting Test Issues

@itemize
@item @ref{troubleshoot-unit-test-results,
           Did all unit tests pass?}
@item @ref{troubleshoot-large-number-test-failures,
           There are many test failures}
@end itemize

@anchor{troubleshoot-unit-test-results}
@subheading Did all unit tests pass?

If the @code{make check} build target shows a sequence of dots with no 'E'
or 'X' characters, all unit tests passed.  See the
@url{https://common-lisp.net/project/stefil/index-old.shtml,stefil}
project page for more information on our unit testing framework.



@anchor{troubleshoot-large-number-test-failures}
@subheading There are many test failures

A large number of test failures usually indicates a major prerequisite
is missing.  To debug, try the following.


@enumerate

@item
Ensure @code{clang} is on your @code{$PATH}.

@item
Execute
@example
clang -g -O0 test/etc/hello-world/hello_world.c
@end example

@end enumerate

If the above fails, the unit test failure is due to an external
tool failing.  Ensure clang and the compiler toolchain is
properly installed on your system.
