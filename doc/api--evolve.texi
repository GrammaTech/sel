

@anchor{api-evolve}
@subsection Evolutionary Search

[
@ref{SEL API, API} |
@ref{api-heuristic-search, Heuristic Search} |
Evolutionary Search
]


@itemize

@item Functions
  @itemize
  @item @refapifunction{crossed}
  @item @refapifunction{default-random-winner}
  @item @refapifunction{default-select-best}
  @item @refapifunction{fitness-better-p}
  @item @refapifunction{fitness-equal-p}
  @item @refapifunction{generational-evolve}
  @item @refapifunction{incorporate}
  @item @refapifunction{mutant}
  @item @refapifunction{simple-evaluate}
  @item @refapifunction{simple-reproduce}
  @item @refapifunction{tournament}
  @end itemize
@item Macros
  @itemize
  @item @refapimacro{evolve}
  @end itemize

@item Variables
  @itemize
  @item @refapivariable{*cross-chance*}
  @item @refapivariable{*crossover-stats*}
  @item @refapivariable{*fitness-evals*}
  @item @refapivariable{*fitness-predicate*}
  @item @refapivariable{*fitness-scalar-fn*}
  @item @refapivariable{*generations*}
  @item @refapivariable{*max-population-size*}
  @item @refapivariable{*mut-rate*}
  @item @refapivariable{*population*}
  @item @refapivariable{*running*}
  @item @refapivariable{*start-time*}
  @item @refapivariable{*target-fitness-p*}
  @item @refapivariable{*tournament-eviction-size*}
  @item @refapivariable{*tournament-selector*}
  @item @refapivariable{*tournament-size*}
  @item @refapivariable{*tournament-tie-breaker*}
  @item @refapivariable{*tie-breaker-predicate*}
  @item @refapivariable{*worst-fitness-p*}
  @end itemize
@end itemize
