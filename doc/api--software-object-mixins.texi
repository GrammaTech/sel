

@anchor{api-software-object-mixins}
@subsection Software Object ``Mixins''

[
@ref{SEL API,API} |
@ref{api-software-objects,Software Objects} |
Software Object ``Mixins''
]


@itemize
@item @ref{api-ancestry,Class @code{ancestral}}

@item @ref{api-software-objects-adaptive-mutation,Class @code{adaptive-mutation}}

@item @ref{api-style-features-class-styleable, Class @code{styleable}}
@item @ref{api-style-features-class-style-project, Class @code{style-project}}

@item @ref{api-software-objects-diff, Class @code{diff}}
@item @ref{api-software-objects-diff, Class @code{sw-range}}

@item See also
  @itemize
  @item @refapiclass{traceable} (@ref{api-tracing, Tracing})
  @end itemize

@end itemize




@include api--ancestry.texi

@c ----------------------------------------

@anchor{api-software-objects-adaptive-mutation}
@subsubsection Class @code{adaptive-mutation}


[
@ref{SEL API,API} |
@ref{api-software-objects,Software Objects} |
@ref{api-software-object-mixins,Software Object ``Mixins''} |
Class @code{adaptive-mutation}
]


@itemize
@item Class @refapiclass{adaptive-mutation}
@item Functions
  @itemize
  @item @refapifunction{adaptive-analyze-mutation}
  @item @refapifunction{update-mutation-types}
  @end itemize
@item Variables
  @itemize
  @item @refapivariable{*bias-toward-dynamic-mutation*}
  @item @refapivariable{*better-bias*}
  @item @refapivariable{*same-bias*}
  @item @refapivariable{*worse-bias*}
  @item @refapivariable{*dead-bias*}
  @end itemize

@end itemize


@c define-constant +initial-mutation-results-queue+
@c defvar *mutation-results-queue*
@c defvar *mutation-results-queue-next*
@c defvar *mutation-results-queue-lock*
@c defun queue-mutation

@include include/class-sel-adaptive-mutation.texinfo
@include include/fun-sel-adaptive-analyze-mutation.texinfo
@include include/fun-sel-update-mutation-types.texinfo

@include include/var-sel-star-bias-toward-dynamic-mutation-star.texinfo
@include include/var-sel-star-better-bias-star.texinfo
@include include/var-sel-star-same-bias-star.texinfo
@include include/var-sel-star-worse-bias-star.texinfo
@include include/var-sel-star-dead-bias-star.texinfo

@c ----------------------------------------

@include api--styleable.texi

@c ----------------------------------------

@anchor{api-software-objects-diff}
@subsubsection Class @code{diff}

[
@ref{SEL API, API} |
@ref{api-software-objects, Software Objects} |
@ref{api-software-object-mixins,Software Object Class ``Mixins''} |
Class @code{diff}
]

@itemize
@item Class @refapiclass{diff}
@item Methods
  @itemize
  @item @refapimethod{copy ((diff diff) &key)}
  @item @refapimethod{genome ((diff diff))}
  @item @refapimethod{reference ((diff diff))}
  @end itemize
@end itemize

@c defmethod original
@c defmethod (setf genome)

@include include/class-sel-diff.texinfo

@c ----------------------------------------

@anchor{api-software-objects-sw-range}
@subsubsection Class @code{sw-range}

[
@ref{SEL API, API} |
@ref{api-software-objects, Software Objects} |
@ref{api-software-object-mixins,Software Object Class ``Mixins''} |
Class @code{sw-range}
]

@itemize
@item Class @refapiclass{sw-range}
@item Generic Functions
  @itemize
  @item @refapigeneric{reference}
  @item @refapigeneric{(setf reference)}
  @end itemize

@item Methods
  @itemize
  @item @refapimethod{apply-mutation ((range sw-range) (mutation simple-cut))}
  @item @refapimethod{apply-mutation ((range sw-range) (mutation simple-insert))}
  @item @refapimethod{apply-mutation ((range sw-range) (mutation simple-swap))}
  @item @refapimethod{from-file ((range sw-range) path)}
  @item @refapimethod{lines ((range sw-range))}
  @item @refapimethod{one-point-crossover ((a sw-range) (b sw-range))}
  @item @refapimethod{reference ((range sw-range))}
  @item @refapimethod{(setf reference) (new (range sw-range))}
  @item @refapimethod{size ((range sw-range))}
  @item @refapimethod{two-point-crossover ((a sw-range) (b sw-range))}

  @end itemize
@end itemize

@c defun range-size
@c defmethod (setf lines)
@c defun range-nth
@c defun range-cut
@c defun range-insert
@c defun range-swap
@c defun range-subseq


@include include/class-sel-sw-range.texinfo

@include include/fun-sel-reference.texinfo
@include include/fun-sel-setf-reference.texinfo

