
#===================================
.text
#===================================


# BEGIN - Function Header
#-----------------------------------
.align 8
.globl _start_4014b0
.type _start_4014b0, @function
_start_4014b0:
#-----------------------------------
# END   - Function Header

.L_4014b0:
            xorl %ebp,%ebp
            movq %rdx,%r9
            popq %rsi
            movq %rsp,%rdx
            andq $-16,%rsp
            pushq %rax
            pushq %rsp
            movq $4287024,%r8
            movq $4286912,%rcx
            movq $.L_402403,%rdi
            callq __libc_start_main@PLT
.L_4014d9:
            hlt 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl error
.type error, @function
error:
#-----------------------------------
# END   - Function Header

error:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movl %esi,-12(%rbp)
            cmpl $0,-12(%rbp)
            je .L_4015f1
.L_4015bb:
            movl -12(%rbp),%eax
            movl %eax,%edi
            callq strerror@PLT
.L_4015c5:
            movq %rax,%rsi
            movq prog(%rip),%rdx
            movq stdout(%rip),%rax
            movq -8(%rbp),%rcx
            movq %rsi,%r8
            movl $.L_416a68,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq fprintf@PLT
.L_4015ef:
            jmp .L_401615
.L_4015f1:

            movq prog(%rip),%rdx
            movq stdout(%rip),%rax
            movq -8(%rbp),%rcx
            movl $.L_416a74,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq fprintf@PLT
.L_401615:

            movl $1,errseen(%rip)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl fatal
.type fatal, @function
fatal:
#-----------------------------------
# END   - Function Header

fatal:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movl %esi,-12(%rbp)
            movl -12(%rbp),%edx
            movq -8(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq error
.L_401647:
            movl $2,%edi
            callq exit@PLT

# BEGIN - Function Header
#-----------------------------------
.globl xmalloc
.type xmalloc, @function
xmalloc:
#-----------------------------------
# END   - Function Header

xmalloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_401669:
            movq %rax,-8(%rbp)
            cmpq $0,-24(%rbp)
            je .L_40168a
.L_401674:
            cmpq $0,-8(%rbp)
            jne .L_40168a
.L_40167b:
            movl $0,%esi
            movl $.L_416a7c,%edi
            callq fatal
.L_40168a:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl xrealloc
.type xrealloc, @function
xrealloc:
#-----------------------------------
# END   - Function Header

xrealloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            cmpq $0,-24(%rbp)
            je .L_4016c0
.L_4016a7:
            movq -32(%rbp),%rdx
            movq -24(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4016ba:
            movq %rax,-8(%rbp)
            jmp .L_4016d0
.L_4016c0:

            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_4016cc:
            movq %rax,-8(%rbp)
.L_4016d0:

            cmpq $0,-32(%rbp)
            je .L_4016ed
.L_4016d7:
            cmpq $0,-8(%rbp)
            jne .L_4016ed
.L_4016de:
            movl $0,%esi
            movl $.L_416a7c,%edi
            callq fatal
.L_4016ed:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl reset
.type reset, @function
reset:
#-----------------------------------
# END   - Function Header

reset:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            movl initialized.3808(%rip),%eax
            testl %eax,%eax
            jne .L_40179a
.L_40170c:
            movl $1,initialized.3808(%rip)
            callq getpagesize@PLT
.L_40171b:
            movl $8192,%edx
            cmpl $8192,%eax
            cmovll %edx,%eax
            cltq 
            movq %rax,bufsalloc(%rip)
            movq bufsalloc(%rip),%rdx
            movq %rdx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            movq %rax,bufalloc(%rip)
            movq bufalloc(%rip),%rax
            addq $1,%rax
            movq %rax,%rdi
            callq valloc@PLT
.L_40175c:
            movq %rax,buffer(%rip)
            movq buffer(%rip),%rax
            testq %rax,%rax
            jne .L_40177e
.L_40176f:
            movl $0,%esi
            movl $.L_416a7c,%edi
            callq fatal
.L_40177e:

            movq buffer(%rip),%rax
            movq %rax,bufbeg(%rip)
            movq buffer(%rip),%rax
            movq %rax,buflim(%rip)
.L_40179a:

            movl -4(%rbp),%eax
            movl %eax,bufdesc(%rip)
            movl -4(%rbp),%eax
            movl $bufstat,%esi
            movl %eax,%edi
            callq __fstat
.L_4017b2:
            testl %eax,%eax
            js .L_4017c8
.L_4017b6:
            movl bufstat+24(%rip),%eax
            andl $61440,%eax
            cmpl $32768,%eax
            je .L_4017d4
.L_4017c8:

            movl $0,bufmapped(%rip)
            jmp .L_4017f9
.L_4017d4:

            movl $1,bufmapped(%rip)
            movl -4(%rbp),%eax
            movl $1,%edx
            movl $0,%esi
            movl %eax,%edi
            callq lseek@PLT
.L_4017f2:
            movq %rax,bufoffset(%rip)
.L_4017f9:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl fillbuf
.type fillbuf, @function
fillbuf:
#-----------------------------------
# END   - Function Header

fillbuf:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-56(%rbp)
            movl pagesize.3817(%rip),%eax
            testl %eax,%eax
            jne .L_40182c
.L_401812:
            callq getpagesize@PLT
.L_401817:
            movl %eax,pagesize.3817(%rip)
            movl pagesize.3817(%rip),%eax
            testl %eax,%eax
            jne .L_40182c
.L_401827:
            callq abort@PLT
.L_40182c:

            movq bufsalloc(%rip),%rax
            cmpq %rax,-56(%rbp)
            jbe .L_4018a0
.L_401839:
            jmp .L_40184c
.L_40183b:

            movq bufsalloc(%rip),%rax
            addq %rax,%rax
            movq %rax,bufsalloc(%rip)
.L_40184c:

            movq bufsalloc(%rip),%rax
            cmpq %rax,-56(%rbp)
            ja .L_40183b
.L_401859:
            movq bufsalloc(%rip),%rdx
            movq %rdx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            movq %rax,bufalloc(%rip)
            movq bufalloc(%rip),%rax
            addq $1,%rax
            movq %rax,%rdi
            callq valloc@PLT
.L_401884:
            movq %rax,-32(%rbp)
            cmpq $0,-32(%rbp)
            jne .L_4018ab
.L_40188f:
            movl $0,%esi
            movl $.L_416a7c,%edi
            callq fatal
.L_40189e:
            jmp .L_4018ab
.L_4018a0:

            movq buffer(%rip),%rax
            movq %rax,-32(%rbp)
.L_4018ab:

            movq buflim(%rip),%rax
            movq -56(%rbp),%rdx
            negq %rdx
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            movq bufsalloc(%rip),%rax
            subq -56(%rbp),%rax
            movq %rax,%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,bufbeg(%rip)
            jmp .L_401903
.L_4018e6:

            movq -24(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-24(%rbp)
            movq -16(%rbp),%rdx
            leaq 1(%rdx),%rcx
            movq %rcx,-16(%rbp)
            movzbl (%rdx),%edx
            movb %dl,(%rax)
.L_401903:

            movq -56(%rbp),%rax
            leaq -1(%rax),%rdx
            movq %rdx,-56(%rbp)
            testq %rax,%rax
            jne .L_4018e6
.L_401914:
            movq -32(%rbp),%rax
            movq %rax,buffer(%rip)
            movl bufmapped(%rip),%eax
            testl %eax,%eax
            je .L_401a3f
.L_40192d:
            movq bufoffset(%rip),%rax
            movl pagesize.3817(%rip),%edx
            movslq %edx,%rcx
            cqto 
            idivq %rcx
            movq %rdx,%rax
            testq %rax,%rax
            jne .L_401a3f
.L_40194e:
            movq bufstat+48(%rip),%rdx
            movq bufoffset(%rip),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rcx
            movq bufalloc(%rip),%rdx
            movq bufsalloc(%rip),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            cmpq %rax,%rcx
            jb .L_401a3f
.L_401982:
            movq buffer(%rip),%rdx
            movq bufsalloc(%rip),%rax
            addq %rdx,%rax
            movq %rax,-8(%rbp)
            movq bufoffset(%rip),%rcx
            movl bufdesc(%rip),%edx
            movq bufalloc(%rip),%rsi
            movq bufsalloc(%rip),%rax
            subq %rax,%rsi
            movq -8(%rbp),%rax
            movq %rcx,%r9
            movl %edx,%r8d
            movl $18,%ecx
            movl $3,%edx
            movq %rax,%rdi
            callq mmap@PLT
.L_4019d1:
            movq %rax,-8(%rbp)
            cmpq $-1,-8(%rbp)
            jne .L_401a0f
.L_4019dc:
            callq __errno_location@PLT
.L_4019e1:
            movl (%rax),%eax
            movl %eax,%edi
            callq strerror@PLT
.L_4019ea:
            movq %rax,%rcx
            movq filename(%rip),%rdx
            movq stdout(%rip),%rax
            movl $.L_416a8d,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq fprintf@PLT
.L_401a0d:
            jmp .L_401a3f
.L_401a0f:

            movq bufalloc(%rip),%rax
            movl %eax,%edx
            movq bufsalloc(%rip),%rax
            subl %eax,%edx
            movl %edx,%eax
            movl %eax,-36(%rbp)
            movl -36(%rbp),%eax
            movslq %eax,%rdx
            movq bufoffset(%rip),%rax
            addq %rdx,%rax
            movq %rax,bufoffset(%rip)
            jmp .L_401aa4
.L_401a3f:

            movl bufmapped(%rip),%eax
            testl %eax,%eax
            je .L_401a6f
.L_401a49:
            movl $0,bufmapped(%rip)
            movq bufoffset(%rip),%rcx
            movl bufdesc(%rip),%eax
            movl $0,%edx
            movq %rcx,%rsi
            movl %eax,%edi
            callq lseek@PLT
.L_401a6f:

            movq bufalloc(%rip),%rdx
            movq bufsalloc(%rip),%rax
            subq %rax,%rdx
            movq buffer(%rip),%rcx
            movq bufsalloc(%rip),%rax
            addq %rax,%rcx
            movl bufdesc(%rip),%eax
            movq %rcx,%rsi
            movl %eax,%edi
            callq read@PLT
.L_401aa1:
            movl %eax,-36(%rbp)
.L_401aa4:

            cmpl $0,-36(%rbp)
            jle .L_401acd
.L_401aaa:
            movq buffer(%rip),%rax
            movl -36(%rbp),%edx
            movslq %edx,%rcx
            movq bufsalloc(%rip),%rdx
            addq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,buflim(%rip)
            jmp .L_401ae5
.L_401acd:

            movq buffer(%rip),%rdx
            movq bufsalloc(%rip),%rax
            addq %rdx,%rax
            movq %rax,buflim(%rip)
.L_401ae5:

            movl -36(%rbp),%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl nlscan
.type nlscan, @function
nlscan:
#-----------------------------------
# END   - Function Header

nlscan:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq lastnl(%rip),%rax
            movq %rax,-8(%rbp)
            jmp .L_401b21
.L_401aff:

            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_401b1c
.L_401b0a:
            movq totalnl(%rip),%rax
            addq $1,%rax
            movq %rax,totalnl(%rip)
.L_401b1c:

            addq $1,-8(%rbp)
.L_401b21:

            movq -8(%rbp),%rax
            cmpq -24(%rbp),%rax
            jb .L_401aff
.L_401b2b:
            movq -8(%rbp),%rax
            movq %rax,lastnl(%rip)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl prline
.type prline, @function
prline:
#-----------------------------------
# END   - Function Header

prline:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,%eax
            movb %al,-20(%rbp)
            movl out_file(%rip),%eax
            testl %eax,%eax
            je .L_401b75
.L_401b58:
            movsbl -20(%rbp),%edx
            movq filename(%rip),%rax
            movq %rax,%rsi
            movl $.L_416aa2,%edi
            movl $0,%eax
            callq printf@PLT
.L_401b75:

            movl out_line(%rip),%eax
            testl %eax,%eax
            je .L_401bca
.L_401b7f:
            movq -8(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq nlscan
.L_401b90:
            movsbl -20(%rbp),%edx
            movq totalnl(%rip),%rax
            addq $1,%rax
            movq %rax,totalnl(%rip)
            movq totalnl(%rip),%rax
            movq %rax,%rsi
            movl $.L_416aa7,%edi
            movl $0,%eax
            callq printf@PLT
.L_401bbf:
            movq -16(%rbp),%rax
            movq %rax,lastnl(%rip)
.L_401bca:

            movl out_byte(%rip),%eax
            testl %eax,%eax
            je .L_401c07
.L_401bd4:
            movsbl -20(%rbp),%eax
            movq -8(%rbp),%rdx
            movq bufbeg(%rip),%rcx
            subq %rcx,%rdx
            movq %rdx,%rcx
            movq totalcc(%rip),%rdx
            addq %rdx,%rcx
            movl %eax,%edx
            movq %rcx,%rsi
            movl $.L_416aac,%edi
            movl $0,%eax
            callq printf@PLT
.L_401c07:

            movq stdout(%rip),%rdx
            movq -16(%rbp),%rcx
            movq -8(%rbp),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movq %rax,%rsi
            movq -8(%rbp),%rax
            movq %rdx,%rcx
            movq %rsi,%rdx
            movl $1,%esi
            movq %rax,%rdi
            callq fwrite@PLT
.L_401c36:
            movq stdout(%rip),%rax
            movq %rax,%rdi
            callq ferror@PLT
.L_401c45:
            testl %eax,%eax
            je .L_401c61
.L_401c49:
            callq __errno_location@PLT
.L_401c4e:
            movl (%rax),%eax
            movl %eax,%esi
            movl $.L_416ab2,%edi
            movl $0,%eax
            callq error
.L_401c61:

            movq -16(%rbp),%rax
            movq %rax,lastout(%rip)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl prpending
.type prpending, @function
prpending:
#-----------------------------------
# END   - Function Header

prpending:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq lastout(%rip),%rax
            testq %rax,%rax
            jne .L_401d05
.L_401c87:
            movq bufbeg(%rip),%rax
            movq %rax,lastout(%rip)
            jmp .L_401d05
.L_401c97:

            movl pending(%rip),%eax
            subl $1,%eax
            movl %eax,pending(%rip)
            movq -24(%rbp),%rax
            movq lastout(%rip),%rdx
            subq %rdx,%rax
            movq %rax,%rdx
            movq lastout(%rip),%rax
            movl $10,%esi
            movq %rax,%rdi
            callq memchr@PLT
.L_401ccb:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_401cdd
.L_401cd6:
            addq $1,-8(%rbp)
            jmp .L_401ce5
.L_401cdd:

            movq -24(%rbp),%rax
            movq %rax,-8(%rbp)
.L_401ce5:

            movq lastout(%rip),%rax
            movq -8(%rbp),%rcx
            movl $45,%edx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq prline
.L_401d05:

            movl pending(%rip),%eax
            testl %eax,%eax
            jle .L_401d20
.L_401d0f:
            movq lastout(%rip),%rax
            cmpq -24(%rbp),%rax
            jb .L_401c97
.L_401d20:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl prtext
.type prtext, @function
prtext:
#-----------------------------------
# END   - Function Header

prtext:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movl out_quiet(%rip),%eax
            testl %eax,%eax
            jne .L_401d5c
.L_401d41:
            movl pending(%rip),%eax
            testl %eax,%eax
            jle .L_401d5c
.L_401d4b:
            movq -40(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq prpending
.L_401d5c:

            movq -40(%rbp),%rax
            movq %rax,-24(%rbp)
            movl out_quiet(%rip),%eax
            testl %eax,%eax
            jne .L_401e66
.L_401d72:
            movq lastout(%rip),%rax
            testq %rax,%rax
            je .L_401d87
.L_401d7e:
            movq lastout(%rip),%rax
            jmp .L_401d8e
.L_401d87:

            movq bufbeg(%rip),%rax
.L_401d8e:

            movq %rax,-8(%rbp)
            movl $0,-32(%rbp)
            jmp .L_401dc7
.L_401d9b:

            movq -24(%rbp),%rax
            cmpq -8(%rbp),%rax
            jbe .L_401dc3
.L_401da5:

            subq $1,-24(%rbp)
            movq -24(%rbp),%rax
            cmpq -8(%rbp),%rax
            jbe .L_401dc3
.L_401db4:
            movq -24(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_401da5
.L_401dc3:

            addl $1,-32(%rbp)
.L_401dc7:

            movl out_before(%rip),%eax
            cmpl %eax,-32(%rbp)
            jl .L_401d9b
.L_401dd2:
            movl out_before(%rip),%eax
            testl %eax,%eax
            jne .L_401de6
.L_401ddc:
            movl out_after(%rip),%eax
            testl %eax,%eax
            je .L_401e5c
.L_401de6:

            movl used.3861(%rip),%eax
            testl %eax,%eax
            je .L_401e5c
.L_401df0:
            movq lastout(%rip),%rax
            cmpq %rax,-24(%rbp)
            je .L_401e5c
.L_401dfd:
            movl $.L_416ac1,%edi
            callq puts@PLT
.L_401e07:
            jmp .L_401e5c
.L_401e09:

            movq -40(%rbp),%rdx
            movq -24(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movq -24(%rbp),%rax
            movl $10,%esi
            movq %rax,%rdi
            callq memchr@PLT
.L_401e2b:
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            leaq 1(%rax),%rcx
            movq -24(%rbp),%rax
            movl $45,%edx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq prline
.L_401e50:
            movq -16(%rbp),%rax
            addq $1,%rax
            movq %rax,-24(%rbp)
.L_401e5c:

            movq -24(%rbp),%rax
            cmpq -40(%rbp),%rax
            jb .L_401e09
.L_401e66:

            cmpq $0,-56(%rbp)
            je .L_401efe
.L_401e71:
            movl $0,-28(%rbp)
            jmp .L_401ee9
.L_401e7a:

            movq -48(%rbp),%rdx
            movq -24(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movq -24(%rbp),%rax
            movl $10,%esi
            movq %rax,%rdi
            callq memchr@PLT
.L_401e9c:
            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            je .L_401eae
.L_401ea7:
            addq $1,-16(%rbp)
            jmp .L_401eb6
.L_401eae:

            movq -48(%rbp),%rax
            movq %rax,-16(%rbp)
.L_401eb6:

            movl out_quiet(%rip),%eax
            testl %eax,%eax
            jne .L_401edd
.L_401ec0:
            movq -16(%rbp),%rcx
            movq -24(%rbp),%rax
            movl $58,%edx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq prline
.L_401edd:

            movq -16(%rbp),%rax
            movq %rax,-24(%rbp)
            addl $1,-28(%rbp)
.L_401ee9:

            movq -24(%rbp),%rax
            cmpq -48(%rbp),%rax
            jb .L_401e7a
.L_401ef3:
            movq -56(%rbp),%rax
            movl -28(%rbp),%edx
            movl %edx,(%rax)
            jmp .L_401f25
.L_401efe:

            movl out_quiet(%rip),%eax
            testl %eax,%eax
            jne .L_401f25
.L_401f08:
            movq -48(%rbp),%rcx
            movq -40(%rbp),%rax
            movl $58,%edx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq prline
.L_401f25:

            movl out_after(%rip),%eax
            movl %eax,pending(%rip)
            movl $1,used.3861(%rip)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl grepbuf
.type grepbuf, @function
grepbuf:
#-----------------------------------
# END   - Function Header

grepbuf:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $48,%rsp
            movq %rdi,-56(%rbp)
            movq %rsi,-64(%rbp)
            movq %fs:40,%rax
            movq %rax,-24(%rbp)
            xorl %eax,%eax
            movl $0,-36(%rbp)
            movq -56(%rbp),%r12
            jmp .L_401fe1
.L_401f6d:

            cmpq -64(%rbp),%rbx
            jne .L_401f92
.L_401f73:
            cmpq -56(%rbp),%rbx
            jbe .L_401f88
.L_401f79:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            je .L_402012
.L_401f88:

            cmpq -56(%rbp),%rbx
            je .L_402012
.L_401f92:

            movl out_invert(%rip),%eax
            testl %eax,%eax
            jne .L_401fbb
.L_401f9c:
            movq -32(%rbp),%rax
            movl $0,%edx
            movq %rax,%rsi
            movq %rbx,%rdi
            movl $0,%eax
            callq prtext
.L_401fb5:
            addl $1,-36(%rbp)
            jmp .L_401fdd
.L_401fbb:

            cmpq %rbx,%r12
            jae .L_401fdd
.L_401fc0:
            leaq -40(%rbp),%rax
            movq %rax,%rdx
            movq %rbx,%rsi
            movq %r12,%rdi
            movl $0,%eax
            callq prtext
.L_401fd7:
            movl -40(%rbp),%eax
            addl %eax,-36(%rbp)
.L_401fdd:

            movq -32(%rbp),%r12
.L_401fe1:

            movq execute(%rip),%rcx
            movq -64(%rbp),%rax
            movq %r12,%rdx
            subq %rdx,%rax
            movq %rax,%rsi
            leaq -32(%rbp),%rax
            movq %rax,%rdx
            movq %r12,%rdi
            movl $0,%eax
            callq *%rcx
.L_402006:
            movq %rax,%rbx
            testq %rbx,%rbx
            jne .L_401f6d
.L_402012:

            movl out_invert(%rip),%eax
            testl %eax,%eax
            je .L_402040
.L_40201c:
            cmpq -64(%rbp),%r12
            jae .L_402040
.L_402022:
            leaq -40(%rbp),%rdx
            movq -64(%rbp),%rax
            movq %rax,%rsi
            movq %r12,%rdi
            movl $0,%eax
            callq prtext
.L_40203a:
            movl -40(%rbp),%eax
            addl %eax,-36(%rbp)
.L_402040:

            movl -36(%rbp),%eax
            movq -24(%rbp),%rcx
            xorq %fs:40,%rcx
            je .L_402057
.L_402052:
            callq __stack_chk_fail@PLT
.L_402057:

            addq $48,%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl grep
.type grep, @function
grep:
#-----------------------------------
# END   - Function Header

grep:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movl %edi,-52(%rbp)
            movl -52(%rbp),%eax
            movl %eax,%edi
            movl $0,%eax
            callq reset
.L_40207a:
            movq $0,totalcc(%rip)
            movq $0,lastout(%rip)
            movq $0,totalnl(%rip)
            movl $0,pending(%rip)
            movl $0,-40(%rbp)
            movq $0,-32(%rbp)
            movq $0,-24(%rbp)
.L_4020bc:

            movq -24(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq fillbuf
.L_4020cd:
            testl %eax,%eax
            jns .L_4020f6
.L_4020d1:
            callq __errno_location@PLT
.L_4020d6:
            movl (%rax),%edx
            movq filename(%rip),%rax
            movl %edx,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq error
.L_4020ee:
            movl -40(%rbp),%eax
            jmp .L_40230f
.L_4020f6:

            movq bufbeg(%rip),%rax
            movq %rax,lastnl(%rip)
            movq lastout(%rip),%rax
            testq %rax,%rax
            je .L_40211e
.L_402110:
            movq bufbeg(%rip),%rax
            movq %rax,lastout(%rip)
.L_40211e:

            movq buflim(%rip),%rax
            movq %rax,%rdx
            movq bufbeg(%rip),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            cmpq -24(%rbp),%rax
            je .L_4022ba
.L_40213f:
            movq bufbeg(%rip),%rdx
            movq -24(%rbp),%rax
            subq -32(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            movq buflim(%rip),%rax
            movq %rax,-8(%rbp)
            jmp .L_402167
.L_402162:

            subq $1,-8(%rbp)
.L_402167:

            movq -8(%rbp),%rax
            cmpq -16(%rbp),%rax
            jbe .L_402180
.L_402171:
            movq -8(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_402162
.L_402180:

            movq buflim(%rip),%rax
            movq %rax,%rdx
            movq -8(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,-32(%rbp)
            movq -16(%rbp),%rax
            cmpq -8(%rbp),%rax
            jae .L_4021d8
.L_4021a2:
            movq -8(%rbp),%rdx
            movq -16(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq grepbuf
.L_4021ba:
            addl %eax,-40(%rbp)
            movl pending(%rip),%eax
            testl %eax,%eax
            je .L_4021d8
.L_4021c7:
            movq -8(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq prpending
.L_4021d8:

            movl $0,-36(%rbp)
            movq -8(%rbp),%rax
            movq %rax,-16(%rbp)
            jmp .L_40220e
.L_4021e9:

            addl $1,-36(%rbp)
.L_4021ed:

            subq $1,-16(%rbp)
            movq bufbeg(%rip),%rax
            cmpq %rax,-16(%rbp)
            jbe .L_40220e
.L_4021ff:
            movq -16(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_4021ed
.L_40220e:

            movl out_before(%rip),%eax
            cmpl %eax,-36(%rbp)
            jge .L_402233
.L_402219:
            movq bufbeg(%rip),%rax
            cmpq %rax,-16(%rbp)
            jbe .L_402233
.L_402226:
            movq lastout(%rip),%rax
            cmpq %rax,-16(%rbp)
            jne .L_4021e9
.L_402233:

            movq lastout(%rip),%rax
            cmpq %rax,-16(%rbp)
            je .L_40224b
.L_402240:
            movq $0,lastout(%rip)
.L_40224b:

            movq -8(%rbp),%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rdx
            movq -16(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,-24(%rbp)
            movq buflim(%rip),%rax
            movq %rax,%rdx
            movq bufbeg(%rip),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            subq -24(%rbp),%rax
            movq %rax,%rdx
            movq totalcc(%rip),%rax
            addq %rdx,%rax
            movq %rax,totalcc(%rip)
            movl out_line(%rip),%eax
            testl %eax,%eax
            je .L_4020bc
.L_4022a4:
            movq -16(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq nlscan
.L_4022b5:
            jmp .L_4020bc
.L_4022ba:

            nop
            cmpq $0,-32(%rbp)
            je .L_40230c
.L_4022c2:
            movq buflim(%rip),%rax
            movq bufbeg(%rip),%rcx
            movq -24(%rbp),%rdx
            subq -32(%rbp),%rdx
            addq %rcx,%rdx
            movq %rax,%rsi
            movq %rdx,%rdi
            movl $0,%eax
            callq grepbuf
.L_4022eb:
            addl %eax,-40(%rbp)
            movl pending(%rip),%eax
            testl %eax,%eax
            je .L_40230c
.L_4022f8:
            movq buflim(%rip),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq prpending
.L_40230c:

            movl -40(%rbp),%eax
.L_40230f:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl usage
.type usage, @function
usage:
#-----------------------------------
# END   - Function Header

usage:

            pushq %rbp
            movq %rsp,%rbp
            movq prog(%rip),%rdx
            movq stdout(%rip),%rax
            movl $.L_416ac8,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq fprintf@PLT
.L_402335:
            movl $2,%edi
            callq exit@PLT

# BEGIN - Function Header
#-----------------------------------
.globl setmatcher
.type setmatcher, @function
setmatcher:
#-----------------------------------
# END   - Function Header

setmatcher:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movl $0,-4(%rbp)
            jmp .L_4023d7
.L_402357:

            movl -4(%rbp),%eax
            movslq %eax,%rdx
            movq %rdx,%rax
            addq %rax,%rax
            addq %rdx,%rax
            shlq $3,%rax
            addq $matchers,%rax
            movq (%rax),%rdx
            movq -24(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq strcmp@PLT
.L_402382:
            testl %eax,%eax
            jne .L_4023d3
.L_402386:
            movl -4(%rbp),%eax
            movslq %eax,%rdx
            movq %rdx,%rax
            addq %rax,%rax
            addq %rdx,%rax
            shlq $3,%rax
            addq $matchers+8,%rax
            movq (%rax),%rax
            movq %rax,compile(%rip)
            movl -4(%rbp),%eax
            movslq %eax,%rdx
            movq %rdx,%rax
            addq %rax,%rax
            addq %rdx,%rax
            shlq $3,%rax
            addq $matchers+16,%rax
            movq (%rax),%rax
            movq %rax,execute(%rip)
            movl $1,%eax
            jmp .L_402401
.L_4023d3:

            addl $1,-4(%rbp)
.L_4023d7:

            movl -4(%rbp),%eax
            movslq %eax,%rdx
            movq %rdx,%rax
            addq %rax,%rax
            addq %rdx,%rax
            shlq $3,%rax
            addq $matchers,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_402357
.L_4023fc:
            movl $0,%eax
.L_402401:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl main_402403
.type main_402403, @function
main_402403:
#-----------------------------------
# END   - Function Header

.L_402403:
            pushq %rbp
            movq %rsp,%rbp
            subq $96,%rsp
            movl %edi,-84(%rbp)
            movq %rsi,-96(%rbp)
            movq -96(%rbp),%rax
            movq $.L_416b14,(%rax)
            movq -96(%rbp),%rax
            movq (%rax),%rax
            movq %rax,prog(%rip)
            movq prog(%rip),%rax
            testq %rax,%rax
            je .L_40246f
.L_402437:
            movq prog(%rip),%rax
            movl $47,%esi
            movq %rax,%rdi
            callq strrchr@PLT
.L_40244b:
            testq %rax,%rax
            je .L_40246f
.L_402450:
            movq prog(%rip),%rax
            movl $47,%esi
            movq %rax,%rdi
            callq strrchr@PLT
.L_402464:
            addq $1,%rax
            movq %rax,prog(%rip)
.L_40246f:

            movq $0,-40(%rbp)
            movq $0,-32(%rbp)
            movl $0,-80(%rbp)
            movl $0,-76(%rbp)
            movl $0,-72(%rbp)
            movl $0,-68(%rbp)
            movl $0,-64(%rbp)
            movq $0,matcher(%rip)
            jmp .L_402955
.L_4024b2:

            movl -56(%rbp),%eax
            subl $48,%eax
            cmpl $73,%eax
            ja .L_40294a
.L_4024c1:
            movl %eax,%eax
            movq .L_416bd8(,%rax,8),%rax
            jmpq %rax
.L_4024cd:

            movl out_before(%rip),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movl -56(%rbp),%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,out_before(%rip)
            movl out_after(%rip),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movl -56(%rbp),%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,out_after(%rip)
            jmp .L_402955
.L_402510:

            movq optarg(%rip),%rax
            movq %rax,%rdi
            callq atoi@PLT
.L_40251f:
            movl %eax,out_after(%rip)
            movl out_after(%rip),%eax
            testl %eax,%eax
            jns .L_402955
.L_402533:
            movl $0,%eax
            callq usage
.L_40253d:
            jmp .L_402955
.L_402542:

            movq optarg(%rip),%rax
            movq %rax,%rdi
            callq atoi@PLT
.L_402551:
            movl %eax,out_before(%rip)
            movl out_before(%rip),%eax
            testl %eax,%eax
            jns .L_402955
.L_402565:
            movl $0,%eax
            callq usage
.L_40256f:
            jmp .L_402955
.L_402574:

            movl $2,out_after(%rip)
            movl out_after(%rip),%eax
            movl %eax,out_before(%rip)
            jmp .L_402955
.L_40258f:

            movq matcher(%rip),%rax
            testq %rax,%rax
            je .L_4025c2
.L_40259b:
            movq matcher(%rip),%rax
            movl $.L_416b1b,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_4025af:
            testl %eax,%eax
            je .L_4025c2
.L_4025b3:
            movl $0,%esi
            movl $.L_416b28,%edi
            callq fatal
.L_4025c2:

            movq $.L_416b52,matcher(%rip)
            jmp .L_402955
.L_4025d2:

            movq matcher(%rip),%rax
            testq %rax,%rax
            je .L_402605
.L_4025de:
            movq matcher(%rip),%rax
            movl $.L_416b5e,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_4025f2:
            testl %eax,%eax
            je .L_402605
.L_4025f6:
            movl $0,%esi
            movl $.L_416b28,%edi
            callq fatal
.L_402605:

            movq $.L_416b5e,matcher(%rip)
            jmp .L_402955
.L_402615:

            movq matcher(%rip),%rax
            testq %rax,%rax
            je .L_402648
.L_402621:
            movq matcher(%rip),%rax
            movl $.L_416b64,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_402635:
            testl %eax,%eax
            je .L_402648
.L_402639:
            movl $0,%esi
            movl $.L_416b28,%edi
            callq fatal
.L_402648:

            movq $.L_416b64,matcher(%rip)
            jmp .L_402955
.L_402658:

            movq stdout(%rip),%rax
            movl $version,%edx
            movl $.L_416b69,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq fprintf@PLT
.L_402676:
            jmp .L_402955
.L_40267b:

            movq matcher(%rip),%rax
            testq %rax,%rax
            je .L_402696
.L_402687:
            movl $0,%esi
            movl $.L_416b6d,%edi
            callq fatal
.L_402696:

            movq optarg(%rip),%rax
            movq %rax,matcher(%rip)
            jmp .L_402955
.L_4026a9:

            movl $1,out_byte(%rip)
            jmp .L_402955
.L_4026b8:

            movl $1,out_quiet(%rip)
            movl $1,-76(%rbp)
            jmp .L_402955
.L_4026ce:

            movq optarg(%rip),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_4026dd:
            movl %eax,-52(%rbp)
            movl -52(%rbp),%eax
            movslq %eax,%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            leaq 1(%rax),%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc
.L_402705:
            movq %rax,-40(%rbp)
            cmpl $0,-80(%rbp)
            je .L_402725
.L_40270f:
            movq -32(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-32(%rbp)
            movq -40(%rbp),%rdx
            addq %rdx,%rax
            movb $10,(%rax)
.L_402725:

            movq optarg(%rip),%rax
            movq -40(%rbp),%rcx
            movq -32(%rbp),%rdx
            addq %rcx,%rdx
            movq %rax,%rsi
            movq %rdx,%rdi
            callq strcpy@PLT
.L_402742:
            movl -52(%rbp),%eax
            cltq 
            addq %rax,-32(%rbp)
            movl $1,-80(%rbp)
            jmp .L_402955
.L_402757:

            movq optarg(%rip),%rax
            movl $.L_416b87,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_40276b:
            testl %eax,%eax
            je .L_402785
.L_40276f:
            movq optarg(%rip),%rax
            movl $.L_416b89,%esi
            movq %rax,%rdi
            callq fopen@PLT
.L_402783:
            jmp .L_40278c
.L_402785:

            movq stdin(%rip),%rax
.L_40278c:

            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            jne .L_4027af
.L_402797:
            callq __errno_location@PLT
.L_40279c:
            movl (%rax),%edx
            movq optarg(%rip),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq fatal
.L_4027af:

            movq $1,-24(%rbp)
            jmp .L_4027bd
.L_4027b9:

            shlq $1,-24(%rbp)
.L_4027bd:

            movq -24(%rbp),%rax
            cmpq -32(%rbp),%rax
            jbe .L_4027b9
.L_4027c7:
            movq -24(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc
.L_4027df:
            movq %rax,-40(%rbp)
            movq -32(%rbp),%rax
            movq %rax,-8(%rbp)
            cmpl $0,-80(%rbp)
            je .L_40283c
.L_4027f1:
            movq -32(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-32(%rbp)
            movq -40(%rbp),%rdx
            addq %rdx,%rax
            movb $10,(%rax)
            jmp .L_40283c
.L_402809:

            movl -52(%rbp),%eax
            cltq 
            addq %rax,-32(%rbp)
            movq -32(%rbp),%rax
            cmpq -24(%rbp),%rax
            jne .L_40283c
.L_40281c:
            shlq $1,-24(%rbp)
            movq -24(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc
.L_402838:
            movq %rax,-40(%rbp)
.L_40283c:

            movq -16(%rbp),%rax
            movq %rax,%rdi
            callq feof@PLT
.L_402848:
            testl %eax,%eax
            jne .L_40287d
.L_40284c:
            movq -24(%rbp),%rax
            subq -32(%rbp),%rax
            movq -40(%rbp),%rcx
            movq -32(%rbp),%rdx
            leaq (%rcx,%rdx),%rdi
            movq -16(%rbp),%rdx
            movq %rdx,%rcx
            movq %rax,%rdx
            movl $1,%esi
            callq fread@PLT
.L_402874:
            movl %eax,-52(%rbp)
            cmpl $0,-52(%rbp)
            jg .L_402809
.L_40287d:

            movq stdin(%rip),%rax
            cmpq %rax,-16(%rbp)
            je .L_402896
.L_40288a:
            movq -16(%rbp),%rax
            movq %rax,%rdi
            callq fclose@PLT
.L_402896:

            movq -32(%rbp),%rax
            cmpq -8(%rbp),%rax
            je .L_4028bb
.L_4028a0:
            movq -32(%rbp),%rax
            leaq -1(%rax),%rdx
            movq -40(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_4028bb
.L_4028b6:
            subq $1,-32(%rbp)
.L_4028bb:

            movl $1,-80(%rbp)
            jmp .L_402955
.L_4028c7:

            movl $1,-72(%rbp)
            jmp .L_402955
.L_4028d3:

            movl $1,match_icase(%rip)
            jmp .L_402955
.L_4028df:

            movl $1,out_quiet(%rip)
            movl $4294967295,-68(%rbp)
            jmp .L_402955
.L_4028f2:

            movl $1,out_quiet(%rip)
            movl $1,-68(%rbp)
            jmp .L_402955
.L_402905:

            movl $1,out_line(%rip)
            jmp .L_402955
.L_402911:

            movl $1,out_quiet(%rip)
            jmp .L_402955
.L_40291d:

            movl $1,-64(%rbp)
            jmp .L_402955
.L_402926:

            movl $1,out_invert(%rip)
            jmp .L_402955
.L_402932:

            movl $1,match_words(%rip)
            jmp .L_402955
.L_40293e:

            movl $1,match_lines(%rip)
            jmp .L_402955
.L_40294a:

            movl $0,%eax
            callq usage
.L_402954:
            nop
.L_402955:

            movq -96(%rbp),%rcx
            movl -84(%rbp),%eax
            movl $.L_416b90,%edx
            movq %rcx,%rsi
            movl %eax,%edi
            callq getopt@PLT
.L_40296b:
            movl %eax,-56(%rbp)
            cmpl $-1,-56(%rbp)
            jne .L_4024b2
.L_402978:
            cmpl $0,-80(%rbp)
            jne .L_4029cc
.L_40297e:
            movl optind(%rip),%eax
            cmpl -84(%rbp),%eax
            jge .L_4029c2
.L_402989:
            movl optind(%rip),%eax
            leal 1(%rax),%edx
            movl %edx,optind(%rip)
            cltq 
            leaq (,%rax,8),%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-40(%rbp)
            movq -40(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_4029bc:
            movq %rax,-32(%rbp)
            jmp .L_4029cc
.L_4029c2:

            movl $0,%eax
            callq usage
.L_4029cc:

            movq matcher(%rip),%rax
            testq %rax,%rax
            jne .L_4029e6
.L_4029d8:
            movq prog(%rip),%rax
            movq %rax,matcher(%rip)
.L_4029e6:

            movq matcher(%rip),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq setmatcher
.L_4029fa:
            testl %eax,%eax
            jne .L_402a16
.L_4029fe:
            movl $.L_416bb7,%edi
            movl $0,%eax
            callq setmatcher
.L_402a0d:
            testl %eax,%eax
            jne .L_402a16
.L_402a11:
            callq abort@PLT
.L_402a16:

            movq compile(%rip),%rdx
            movq -32(%rbp),%rcx
            movq -40(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq *%rdx
.L_402a32:
            movl optind(%rip),%eax
            movl -84(%rbp),%edx
            subl %eax,%edx
            movl %edx,%eax
            cmpl $1,%eax
            jle .L_402a54
.L_402a44:
            cmpl $0,-72(%rbp)
            jne .L_402a54
.L_402a4a:
            movl $1,out_file(%rip)
.L_402a54:

            movl $1,-60(%rbp)
            movl optind(%rip),%eax
            cmpl -84(%rbp),%eax
            jge .L_402bfb
.L_402a6a:
            jmp .L_402bea
.L_402a6f:

            movl optind(%rip),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movl $.L_416b87,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_402a96:
            testl %eax,%eax
            je .L_402ac8
.L_402a9a:
            movl optind(%rip),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movl $0,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq open@PLT
.L_402ac6:
            jmp .L_402acd
.L_402ac8:

            movl $0,%eax
.L_402acd:

            movl %eax,-48(%rbp)
            cmpl $0,-48(%rbp)
            jns .L_402b15
.L_402ad6:
            cmpl $0,-64(%rbp)
            jne .L_402bcb
.L_402ae0:
            callq __errno_location@PLT
.L_402ae5:
            movl (%rax),%edx
            movl optind(%rip),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -96(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movl %edx,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq error
.L_402b10:
            jmp .L_402bcb
.L_402b15:

            cmpl $0,-48(%rbp)
            je .L_402b37
.L_402b1b:
            movl optind(%rip),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            jmp .L_402b3c
.L_402b37:

            movl $.L_416bbf,%eax
.L_402b3c:

            movq %rax,filename(%rip)
            movl -48(%rbp),%eax
            movl %eax,%edi
            movl $0,%eax
            callq grep
.L_402b52:
            movl %eax,-44(%rbp)
            cmpl $0,-76(%rbp)
            je .L_402b92
.L_402b5b:
            movl out_file(%rip),%eax
            testl %eax,%eax
            je .L_402b7e
.L_402b65:
            movq filename(%rip),%rax
            movq %rax,%rsi
            movl $.L_416bd0,%edi
            movl $0,%eax
            callq printf@PLT
.L_402b7e:

            movl -44(%rbp),%eax
            movl %eax,%esi
            movl $.L_416bd4,%edi
            movl $0,%eax
            callq printf@PLT
.L_402b92:

            cmpl $0,-44(%rbp)
            je .L_402bb6
.L_402b98:
            movl $0,-60(%rbp)
            cmpl $1,-68(%rbp)
            jne .L_402bcb
.L_402ba5:
            movq filename(%rip),%rax
            movq %rax,%rdi
            callq puts@PLT
.L_402bb4:
            jmp .L_402bcb
.L_402bb6:

            cmpl $-1,-68(%rbp)
            jne .L_402bcb
.L_402bbc:
            movq filename(%rip),%rax
            movq %rax,%rdi
            callq puts@PLT
.L_402bcb:

            cmpl $0,-48(%rbp)
            je .L_402bdb
.L_402bd1:
            movl -48(%rbp),%eax
            movl %eax,%edi
            callq close@PLT
.L_402bdb:

            movl optind(%rip),%eax
            addl $1,%eax
            movl %eax,optind(%rip)
.L_402bea:

            movl optind(%rip),%eax
            cmpl -84(%rbp),%eax
            jl .L_402a6f
.L_402bf9:
            jmp .L_402c61
.L_402bfb:

            movq $.L_416bbf,filename(%rip)
            movl $0,%edi
            movl $0,%eax
            callq grep
.L_402c15:
            movl %eax,-44(%rbp)
            cmpl $0,-76(%rbp)
            je .L_402c32
.L_402c1e:
            movl -44(%rbp),%eax
            movl %eax,%esi
            movl $.L_416bd4,%edi
            movl $0,%eax
            callq printf@PLT
.L_402c32:

            cmpl $0,-44(%rbp)
            je .L_402c51
.L_402c38:
            movl $0,-60(%rbp)
            cmpl $1,-68(%rbp)
            jne .L_402c61
.L_402c45:
            movl $.L_416bbf,%edi
            callq puts@PLT
.L_402c4f:
            jmp .L_402c61
.L_402c51:

            cmpl $-1,-68(%rbp)
            jne .L_402c61
.L_402c57:
            movl $.L_416bbf,%edi
            callq puts@PLT
.L_402c61:

            movl errseen(%rip),%eax
            testl %eax,%eax
            jne .L_402c70
.L_402c6b:
            movl -60(%rbp),%eax
            jmp .L_402c75
.L_402c70:

            movl $2,%eax
.L_402c75:

            movl %eax,%edi
            callq exit@PLT

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl init_syntax_once
.type init_syntax_once, @function
init_syntax_once:
#-----------------------------------
# END   - Function Header

init_syntax_once:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $8,%rsp
            movl done.3993(%rip),%eax
            testl %eax,%eax
            jne .L_402d01
.L_402c8f:
            movl $256,%edx
            movl $0,%esi
            movl $re_syntax_table,%edi
            callq memset@PLT
.L_402ca3:
            movl $97,%ebx
            jmp .L_402cb7
.L_402caa:

            movslq %ebx,%rax
            movb $1,re_syntax_table(%rax)
            addl $1,%ebx
.L_402cb7:

            cmpl $122,%ebx
            jle .L_402caa
.L_402cbc:
            movl $65,%ebx
            jmp .L_402cd0
.L_402cc3:

            movslq %ebx,%rax
            movb $1,re_syntax_table(%rax)
            addl $1,%ebx
.L_402cd0:

            cmpl $90,%ebx
            jle .L_402cc3
.L_402cd5:
            movl $48,%ebx
            jmp .L_402ce9
.L_402cdc:

            movslq %ebx,%rax
            movb $1,re_syntax_table(%rax)
            addl $1,%ebx
.L_402ce9:

            cmpl $57,%ebx
            jle .L_402cdc
.L_402cee:
            movb $1,re_syntax_table+95(%rip)
            movl $1,done.3993(%rip)
            jmp .L_402d02
.L_402d01:

            nop
.L_402d02:

            addq $8,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_set_syntax
.type re_set_syntax, @function
re_set_syntax:
#-----------------------------------
# END   - Function Header

re_set_syntax:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-20(%rbp)
            movl re_syntax_options(%rip),%eax
            movl %eax,-4(%rbp)
            movl -20(%rbp),%eax
            movl %eax,re_syntax_options(%rip)
            movl -4(%rbp),%eax
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl regex_compile
.type regex_compile, @function
regex_compile:
#-----------------------------------
# END   - Function Header

regex_compile:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $424,%rsp
            movq %rdi,-424(%rbp)
            movl %esi,-428(%rbp)
            movl %edx,-432(%rbp)
            movq %rcx,-440(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -424(%rbp),%rax
            movq %rax,-360(%rbp)
            movl -428(%rbp),%eax
            movslq %eax,%rdx
            movq -424(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-320(%rbp)
            movq -440(%rbp),%rax
            movq 40(%rax),%rax
            movq %rax,-312(%rbp)
            movq $0,-352(%rbp)
            movq $0,-344(%rbp)
            movq $0,-328(%rbp)
            movl $0,-392(%rbp)
            movl $640,%edi
            callq malloc@PLT
.L_402dcf:
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            jne .L_402de6
.L_402ddc:
            movl $12,%eax
            jmp .L_40805c
.L_402de6:

            movl $32,-56(%rbp)
            movl $0,-52(%rbp)
            movq -440(%rbp),%rax
            movl -432(%rbp),%edx
            movl %edx,24(%rax)
            movq -440(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967287,%edx
            movb %dl,56(%rax)
            movq -440(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967231,%edx
            movb %dl,56(%rax)
            movq -440(%rbp),%rax
            movzbl 56(%rax),%eax
            shrb $6,%al
            andl $1,%eax
            movq -440(%rbp),%rdx
            andl $1,%eax
            shll $5,%eax
            movl %eax,%ecx
            movzbl 56(%rdx),%eax
            andl $4294967263,%eax
            orl %ecx,%eax
            movb %al,56(%rdx)
            movq -440(%rbp),%rax
            movq $0,16(%rax)
            movq -440(%rbp),%rax
            movq $0,48(%rax)
            movl $0,%eax
            callq init_syntax_once
.L_402e7a:
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            testq %rax,%rax
            jne .L_402efe
.L_402e8a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_402ebf
.L_402e99:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movl $32,%esi
            movq %rax,%rdi
            callq realloc@PLT
.L_402eb0:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            jmp .L_402ed6
.L_402ebf:

            movl $32,%edi
            callq malloc@PLT
.L_402ec9:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
.L_402ed6:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_402eef
.L_402ee5:
            movl $12,%eax
            jmp .L_40805c
.L_402eef:

            movq -440(%rbp),%rax
            movq $32,8(%rax)
.L_402efe:

            movq -440(%rbp),%rax
            movq (%rax),%rbx
            movq %rbx,-336(%rbp)
            jmp .L_407fd1
.L_402f14:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_402f2e
.L_402f24:
            movl $14,%eax
            jmp .L_40805c
.L_402f2e:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_402f64
.L_402f50:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_402f64:

            movzbl %r12b,%eax
            subl $10,%eax
            cmpl $114,%eax
            ja .L_407aad
.L_402f74:
            movl %eax,%eax
            movq .L_416fe8(,%rax,8),%rax
            jmpq %rax
.L_402f80:

            movq -424(%rbp),%rax
            leaq 1(%rax),%rdx
            movq -360(%rbp),%rax
            cmpq %rax,%rdx
            je .L_403180
.L_402f9b:
            movl -432(%rbp),%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_403180
.L_402fac:
            movq -360(%rbp),%rcx
            movl -432(%rbp),%edx
            movq -424(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq at_begline_loc_p
.L_402fd0:
            testb %al,%al
            je .L_407aad
.L_402fd8:
            jmp .L_403180
.L_402fdd:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-304(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_40300b
.L_403001:
            movl $15,%eax
            jmp .L_40805c
.L_40300b:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_403047
.L_403038:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_403047:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_403067:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_40308d
.L_403083:
            movl $12,%eax
            jmp .L_40805c
.L_40308d:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -304(%rbp),%rax
            je .L_403180
.L_4030a4:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -304(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -304(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_40311c
.L_4030f4:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -304(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_40311c:

            cmpq $0,-344(%rbp)
            je .L_40314e
.L_403126:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -304(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_40314e:

            cmpq $0,-352(%rbp)
            je .L_403180
.L_403158:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -304(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_403180:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_402fdd
.L_4031ae:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $8,(%rax)
            jmp .L_407fd1
.L_4031bd:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_4033b6
.L_4031d1:
            movl -432(%rbp),%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_4033b6
.L_4031e2:
            movq -360(%rbp),%rax
            movl -432(%rbp),%edx
            movq -320(%rbp),%rcx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq at_endline_loc_p
.L_403206:
            testb %al,%al
            je .L_407aad
.L_40320e:
            jmp .L_4033b6
.L_403213:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-296(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_403241
.L_403237:
            movl $15,%eax
            jmp .L_40805c
.L_403241:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_40327d
.L_40326e:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_40327d:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_40329d:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4032c3
.L_4032b9:
            movl $12,%eax
            jmp .L_40805c
.L_4032c3:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -296(%rbp),%rax
            je .L_4033b6
.L_4032da:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -296(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -296(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_403352
.L_40332a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -296(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_403352:

            cmpq $0,-344(%rbp)
            je .L_403384
.L_40335c:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -296(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_403384:

            cmpq $0,-352(%rbp)
            je .L_4033b6
.L_40338e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -296(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4033b6:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_403213
.L_4033e4:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $9,(%rax)
            jmp .L_407fd1
.L_4033f3:

            movl -432(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            jne .L_407aad
.L_403404:
            movl -432(%rbp),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_407aad
.L_403417:
            jmp .L_40341a
.L_403419:

            nop
.L_40341a:

            cmpq $0,-344(%rbp)
            jne .L_40344c
.L_403424:
            movl -432(%rbp),%eax
            andl $32,%eax
            testl %eax,%eax
            je .L_40343b
.L_403431:
            movl $13,%eax
            jmp .L_40805c
.L_40343b:

            movl -432(%rbp),%eax
            andl $16,%eax
            testl %eax,%eax
            je .L_407a91
.L_40344c:

            movb $0,-408(%rbp)
            movb $0,-407(%rbp)
            movb $0,-406(%rbp)
.L_403461:

            cmpb $43,%r12b
            setne %al
            orb %al,-407(%rbp)
            cmpb $63,%r12b
            setne %al
            orb %al,-406(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_4035e0
.L_40348f:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4034a9
.L_40349f:
            movl $14,%eax
            jmp .L_40805c
.L_4034a9:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4034df
.L_4034cb:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4034df:

            cmpb $42,%r12b
            je .L_403461
.L_4034e9:
            movl -432(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            jne .L_40350a
.L_4034f6:
            cmpb $43,%r12b
            je .L_4035da
.L_403500:
            cmpb $63,%r12b
            je .L_4035da
.L_40350a:

            movl -432(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            je .L_4035c6
.L_40351b:
            cmpb $92,%r12b
            jne .L_4035c6
.L_403525:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_40353f
.L_403535:
            movl $5,%eax
            jmp .L_40805c
.L_40353f:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_403559
.L_40354f:
            movl $14,%eax
            jmp .L_40805c
.L_403559:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r13d
            cmpq $0,-312(%rbp)
            je .L_40358f
.L_40357b:
            movzbl %r13b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r13d
.L_40358f:

            cmpb $43,%r13b
            je .L_4035c1
.L_403595:
            cmpb $63,%r13b
            je .L_4035c1
.L_40359b:
            movq -360(%rbp),%rax
            subq $1,%rax
            movq %rax,-360(%rbp)
            movq -360(%rbp),%rax
            subq $1,%rax
            movq %rax,-360(%rbp)
            jmp .L_4035e1
.L_4035c1:

            movl %r13d,%r12d
            jmp .L_4035db
.L_4035c6:

            movq -360(%rbp),%rax
            subq $1,%rax
            movq %rax,-360(%rbp)
            jmp .L_4035e1
.L_4035da:

            nop
.L_4035db:

            jmp .L_403461
.L_4035e0:

            nop
.L_4035e1:

            cmpq $0,-344(%rbp)
            jne .L_4035f0
.L_4035eb:
            jmp .L_407fd1
.L_4035f0:

            cmpb $0,-406(%rbp)
            je .L_403ad0
.L_4035fd:
            jmp .L_4037a5
.L_403602:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-216(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_403630
.L_403626:
            movl $15,%eax
            jmp .L_40805c
.L_403630:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_40366c
.L_40365d:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_40366c:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_40368c:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4036b2
.L_4036a8:
            movl $12,%eax
            jmp .L_40805c
.L_4036b2:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -216(%rbp),%rax
            je .L_4037a5
.L_4036c9:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -216(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -216(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_403741
.L_403719:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -216(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_403741:

            cmpq $0,-344(%rbp)
            je .L_403773
.L_40374b:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -216(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_403773:

            cmpq $0,-352(%rbp)
            je .L_4037a5
.L_40377d:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -216(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4037a5:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_403602
.L_4037d3:
            cmpq $0,-312(%rbp)
            je .L_403800
.L_4037dd:
            movq -360(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_403811
.L_403800:

            movq -360(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_403811:

            cmpq $0,-312(%rbp)
            je .L_40382e
.L_40381b:
            movq -312(%rbp),%rdx
            addq $46,%rdx
            movzbl (%rdx),%edx
            movsbl %dl,%edx
            jmp .L_403833
.L_40382e:

            movl $46,%edx
.L_403833:

            cmpl %edx,%eax
            jne .L_4038f4
.L_40383b:
            cmpb $0,-407(%rbp)
            je .L_4038f4
.L_403848:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jae .L_4038f4
.L_40385c:
            cmpq $0,-312(%rbp)
            je .L_403885
.L_403866:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_403892
.L_403885:

            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_403892:

            cmpq $0,-312(%rbp)
            je .L_4038af
.L_40389c:
            movq -312(%rbp),%rdx
            addq $10,%rdx
            movzbl (%rdx),%edx
            movsbl %dl,%edx
            jmp .L_4038b4
.L_4038af:

            movl $10,%edx
.L_4038b4:

            cmpl %edx,%eax
            jne .L_4038f4
.L_4038b8:
            movl -432(%rbp),%eax
            andl $64,%eax
            testl %eax,%eax
            jne .L_4038f4
.L_4038c5:
            movq -344(%rbp),%rax
            movq %rbx,%rdx
            subq %rdx,%rax
            subq $3,%rax
            movq %rax,%rdx
            movq %rbx,%rsi
            movl $12,%edi
            movl $0,%eax
            callq store_op1
.L_4038eb:
            movb $1,-408(%rbp)
            jmp .L_403924
.L_4038f4:

            movq -344(%rbp),%rax
            subq $3,%rax
            movq %rax,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            subq $3,%rax
            movq %rax,%rdx
            movq %rbx,%rsi
            movl $17,%edi
            movl $0,%eax
            callq store_op1
.L_403924:

            addq $3,%rbx
            jmp .L_403ad0
.L_40392d:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-208(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_40395b
.L_403951:
            movl $15,%eax
            jmp .L_40805c
.L_40395b:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_403997
.L_403988:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_403997:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4039b7:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4039dd
.L_4039d3:
            movl $12,%eax
            jmp .L_40805c
.L_4039dd:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -208(%rbp),%rax
            je .L_403ad0
.L_4039f4:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -208(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -208(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_403a6c
.L_403a44:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -208(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_403a6c:

            cmpq $0,-344(%rbp)
            je .L_403a9e
.L_403a76:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -208(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_403a9e:

            cmpq $0,-352(%rbp)
            je .L_403ad0
.L_403aa8:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -208(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_403ad0:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_40392d
.L_403afe:
            leaq 3(%rbx),%rax
            movq %rax,%rdx
            movq -344(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            cmpb $0,-408(%rbp)
            je .L_403b26
.L_403b1f:
            movl $15,%edi
            jmp .L_403b2b
.L_403b26:

            movl $14,%edi
.L_403b2b:

            movq -344(%rbp),%rax
            movq %rbx,%rcx
            movq %rax,%rsi
            movl $0,%eax
            callq insert_op1
.L_403b42:
            movq $0,-352(%rbp)
            addq $3,%rbx
            cmpb $0,-407(%rbp)
            jne .L_407fd1
.L_403b5e:
            jmp .L_403d06
.L_403b63:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-200(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_403b91
.L_403b87:
            movl $15,%eax
            jmp .L_40805c
.L_403b91:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_403bcd
.L_403bbe:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_403bcd:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_403bed:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_403c13
.L_403c09:
            movl $12,%eax
            jmp .L_40805c
.L_403c13:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -200(%rbp),%rax
            je .L_403d06
.L_403c2a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -200(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -200(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_403ca2
.L_403c7a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -200(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_403ca2:

            cmpq $0,-344(%rbp)
            je .L_403cd4
.L_403cac:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -200(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_403cd4:

            cmpq $0,-352(%rbp)
            je .L_403d06
.L_403cde:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -200(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_403d06:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_403b63
.L_403d34:
            movq -344(%rbp),%rax
            movq %rbx,%rcx
            movl $3,%edx
            movq %rax,%rsi
            movl $18,%edi
            movl $0,%eax
            callq insert_op1
.L_403d55:
            addq $3,%rbx
            jmp .L_407fd1
.L_403d5e:

            movq %rbx,-344(%rbp)
            jmp .L_403f0d
.L_403d6a:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-192(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_403d98
.L_403d8e:
            movl $15,%eax
            jmp .L_40805c
.L_403d98:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_403dd4
.L_403dc5:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_403dd4:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_403df4:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_403e1a
.L_403e10:
            movl $12,%eax
            jmp .L_40805c
.L_403e1a:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -192(%rbp),%rax
            je .L_403f0d
.L_403e31:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -192(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -192(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_403ea9
.L_403e81:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -192(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_403ea9:

            cmpq $0,-344(%rbp)
            je .L_403edb
.L_403eb3:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -192(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_403edb:

            cmpq $0,-352(%rbp)
            je .L_403f0d
.L_403ee5:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -192(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_403f0d:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_403d6a
.L_403f3b:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $2,(%rax)
            jmp .L_407fd1
.L_403f4a:

            movb $0,-405(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_404112
.L_403f65:
            movl $7,%eax
            jmp .L_40805c
.L_403f6f:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-184(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_403f9d
.L_403f93:
            movl $15,%eax
            jmp .L_40805c
.L_403f9d:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_403fd9
.L_403fca:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_403fd9:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_403ff9:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_40401f
.L_404015:
            movl $12,%eax
            jmp .L_40805c
.L_40401f:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -184(%rbp),%rax
            je .L_404112
.L_404036:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -184(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -184(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4040ae
.L_404086:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -184(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4040ae:

            cmpq $0,-344(%rbp)
            je .L_4040e0
.L_4040b8:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -184(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4040e0:

            cmpq $0,-352(%rbp)
            je .L_404112
.L_4040ea:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -184(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_404112:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $34,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_403f6f
.L_404140:
            movq %rbx,-344(%rbp)
            jmp .L_4042ef
.L_40414c:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-176(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_40417a
.L_404170:
            movl $15,%eax
            jmp .L_40805c
.L_40417a:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4041b6
.L_4041a7:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4041b6:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4041d6:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4041fc
.L_4041f2:
            movl $12,%eax
            jmp .L_40805c
.L_4041fc:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -176(%rbp),%rax
            je .L_4042ef
.L_404213:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -176(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -176(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_40428b
.L_404263:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -176(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_40428b:

            cmpq $0,-344(%rbp)
            je .L_4042bd
.L_404295:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -176(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4042bd:

            cmpq $0,-352(%rbp)
            je .L_4042ef
.L_4042c7:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -176(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4042ef:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_40414c
.L_40431d:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movq -360(%rbp),%rdx
            movzbl (%rdx),%edx
            cmpb $94,%dl
            jne .L_40433a
.L_404333:
            movl $4,%edx
            jmp .L_40433f
.L_40433a:

            movl $3,%edx
.L_40433f:

            movb %dl,(%rax)
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $94,%al
            jne .L_404361
.L_40434f:
            movq -360(%rbp),%rax
            addq $1,%rax
            movq %rax,-360(%rbp)
.L_404361:

            movq -360(%rbp),%rax
            movq %rax,-168(%rbp)
            jmp .L_404517
.L_404374:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-160(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_4043a2
.L_404398:
            movl $15,%eax
            jmp .L_40805c
.L_4043a2:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4043de
.L_4043cf:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4043de:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4043fe:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_404424
.L_40441a:
            movl $12,%eax
            jmp .L_40805c
.L_404424:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -160(%rbp),%rax
            je .L_404517
.L_40443b:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -160(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -160(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4044b3
.L_40448b:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -160(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4044b3:

            cmpq $0,-344(%rbp)
            je .L_4044e5
.L_4044bd:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -160(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4044e5:

            cmpq $0,-352(%rbp)
            je .L_404517
.L_4044ef:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -160(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_404517:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_404374
.L_404545:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $32,(%rax)
            movl $32,%edx
            movl $0,%esi
            movq %rbx,%rdi
            callq memset@PLT
.L_404561:
            leaq -2(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $4,%al
            jne .L_40458b
.L_40456c:
            movl -432(%rbp),%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_40458b
.L_40457b:
            leaq 1(%rbx),%rax
            leaq 1(%rbx),%rdx
            movzbl (%rdx),%edx
            orl $4,%edx
            movb %dl,(%rax)
.L_40458b:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4045a5
.L_40459b:
            movl $7,%eax
            jmp .L_40805c
.L_4045a5:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4045bf
.L_4045b5:
            movl $14,%eax
            jmp .L_40805c
.L_4045bf:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4045f5
.L_4045e1:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4045f5:

            movl -432(%rbp),%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_4046ac
.L_404606:
            cmpb $92,%r12b
            jne .L_4046ac
.L_404610:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_40462a
.L_404620:
            movl $5,%eax
            jmp .L_40805c
.L_40462a:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_404644
.L_40463a:
            movl $14,%eax
            jmp .L_40805c
.L_404644:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r13d
            cmpq $0,-312(%rbp)
            je .L_40467a
.L_404666:
            movzbl %r13b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r13d
.L_40467a:

            movl %r13d,%eax
            shrb $3,%al
            movzbl %al,%edx
            addq %rbx,%rdx
            movzbl %al,%eax
            addq %rbx,%rax
            movzbl (%rax),%eax
            movl %eax,%edi
            movzbl %r13b,%eax
            andl $7,%eax
            movl $1,%esi
            movl %eax,%ecx
            shll %cl,%esi
            movl %esi,%eax
            orl %edi,%eax
            movb %al,(%rdx)
            jmp .L_404fe8
.L_4046ac:

            cmpb $93,%r12b
            jne .L_4046cd
.L_4046b2:
            movq -168(%rbp),%rax
            leaq 1(%rax),%rdx
            movq -360(%rbp),%rax
            cmpq %rax,%rdx
            jne .L_404fed
.L_4046cd:

            cmpb $0,-405(%rbp)
            je .L_4046f4
.L_4046d6:
            cmpb $45,%r12b
            jne .L_4046f4
.L_4046dc:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $93,%al
            je .L_4046f4
.L_4046ea:
            movl $11,%eax
            jmp .L_40805c
.L_4046f4:

            cmpb $45,%r12b
            jne .L_4047b7
.L_4046fe:
            movq -360(%rbp),%rax
            subq $2,%rax
            cmpq -424(%rbp),%rax
            jb .L_404728
.L_404712:
            movq -360(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            cmpb $91,%al
            je .L_4047b7
.L_404728:

            movq -360(%rbp),%rax
            subq $3,%rax
            cmpq -424(%rbp),%rax
            jb .L_404760
.L_40473c:
            movq -360(%rbp),%rax
            subq $3,%rax
            movzbl (%rax),%eax
            cmpb $91,%al
            jne .L_404760
.L_40474e:
            movq -360(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            cmpb $94,%al
            je .L_4047b7
.L_404760:

            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $93,%al
            je .L_4047b7
.L_40476e:
            movl -432(%rbp),%ecx
            movq -312(%rbp),%rdx
            movq -320(%rbp),%rsi
            leaq -360(%rbp),%rax
            movq %rbx,%r8
            movq %rax,%rdi
            movl $0,%eax
            callq compile_range
.L_404799:
            movl %eax,-376(%rbp)
            cmpl $0,-376(%rbp)
            je .L_404fe1
.L_4047ac:
            movl -376(%rbp),%eax
            jmp .L_40805c
.L_4047b7:

            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $45,%al
            jne .L_404878
.L_4047c9:
            movq -360(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $93,%al
            je .L_404878
.L_4047df:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4047f9
.L_4047ef:
            movl $14,%eax
            jmp .L_40805c
.L_4047f9:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r13d
            cmpq $0,-312(%rbp)
            je .L_40482f
.L_40481b:
            movzbl %r13b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r13d
.L_40482f:

            movl -432(%rbp),%ecx
            movq -312(%rbp),%rdx
            movq -320(%rbp),%rsi
            leaq -360(%rbp),%rax
            movq %rbx,%r8
            movq %rax,%rdi
            movl $0,%eax
            callq compile_range
.L_40485a:
            movl %eax,-372(%rbp)
            cmpl $0,-372(%rbp)
            je .L_404fe7
.L_40486d:
            movl -372(%rbp),%eax
            jmp .L_40805c
.L_404878:

            movl -432(%rbp),%eax
            andl $4,%eax
            testl %eax,%eax
            je .L_404fa8
.L_404889:
            cmpb $91,%r12b
            jne .L_404fa8
.L_404893:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $58,%al
            jne .L_404fa8
.L_4048a5:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4048bf
.L_4048b5:
            movl $14,%eax
            jmp .L_40805c
.L_4048bf:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4048f5
.L_4048e1:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4048f5:

            movl $0,%r13d
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_404915
.L_40490b:
            movl $7,%eax
            jmp .L_40805c
.L_404915:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_40492f
.L_404925:
            movl $14,%eax
            jmp .L_40805c
.L_40492f:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_404965
.L_404951:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_404965:

            cmpb $58,%r12b
            je .L_40499f
.L_40496b:
            cmpb $93,%r12b
            je .L_40499f
.L_404971:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_40499f
.L_404981:
            cmpb $6,%r13b
            je .L_40499f
.L_404987:
            movl %r13d,%eax
            leal 1(%rax),%r13d
            movzbl %al,%eax
            movl %r12d,%edx
            cltq 
            movb %dl,-48(%rbp,%rax)
            jmp .L_404915
.L_40499f:

            movzbl %r13b,%eax
            cltq 
            movb $0,-48(%rbp,%rax)
            cmpb $58,%r12b
            jne .L_404f59
.L_4049b4:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $93,%al
            jne .L_404f59
.L_4049c6:
            leaq -48(%rbp),%rax
            movl $.L_416f99,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_4049d7:
            testl %eax,%eax
            sete %al
            movb %al,-404(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416f9f,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_4049f3:
            testl %eax,%eax
            sete %al
            movb %al,-403(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fa5,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a0f:
            testl %eax,%eax
            sete %al
            movb %al,-402(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fab,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a2b:
            testl %eax,%eax
            sete %al
            movb %al,-401(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fb1,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a47:
            testl %eax,%eax
            sete %al
            movb %al,-400(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fb7,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a63:
            testl %eax,%eax
            sete %al
            movb %al,-399(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fbd,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a7f:
            testl %eax,%eax
            sete %al
            movb %al,-398(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fc3,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404a9b:
            testl %eax,%eax
            sete %al
            movb %al,-397(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fc9,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404ab7:
            testl %eax,%eax
            sete %al
            movb %al,-396(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fcf,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404ad3:
            testl %eax,%eax
            sete %al
            movb %al,-395(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fd5,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404aef:
            testl %eax,%eax
            sete %al
            movb %al,-394(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416fdb,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b0b:
            testl %eax,%eax
            sete %al
            movb %al,-393(%rbp)
            leaq -48(%rbp),%rax
            movl $.L_416f9f,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b27:
            testl %eax,%eax
            je .L_404c34
.L_404b2f:
            leaq -48(%rbp),%rax
            movl $.L_416fd5,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b40:
            testl %eax,%eax
            je .L_404c34
.L_404b48:
            leaq -48(%rbp),%rax
            movl $.L_416fbd,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b59:
            testl %eax,%eax
            je .L_404c34
.L_404b61:
            leaq -48(%rbp),%rax
            movl $.L_416fb1,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b72:
            testl %eax,%eax
            je .L_404c34
.L_404b7a:
            leaq -48(%rbp),%rax
            movl $.L_416f99,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404b8b:
            testl %eax,%eax
            je .L_404c34
.L_404b93:
            leaq -48(%rbp),%rax
            movl $.L_416fdb,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404ba4:
            testl %eax,%eax
            je .L_404c34
.L_404bac:
            leaq -48(%rbp),%rax
            movl $.L_416fcf,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404bbd:
            testl %eax,%eax
            je .L_404c34
.L_404bc1:
            leaq -48(%rbp),%rax
            movl $.L_416fc3,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404bd2:
            testl %eax,%eax
            je .L_404c34
.L_404bd6:
            leaq -48(%rbp),%rax
            movl $.L_416fc9,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404be7:
            testl %eax,%eax
            je .L_404c34
.L_404beb:
            leaq -48(%rbp),%rax
            movl $.L_416fb7,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404bfc:
            testl %eax,%eax
            je .L_404c34
.L_404c00:
            leaq -48(%rbp),%rax
            movl $.L_416fab,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404c11:
            testl %eax,%eax
            je .L_404c34
.L_404c15:
            leaq -48(%rbp),%rax
            movl $.L_416fa5,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_404c26:
            testl %eax,%eax
            je .L_404c34
.L_404c2a:
            movl $4,%eax
            jmp .L_40805c
.L_404c34:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_404c4e
.L_404c44:
            movl $14,%eax
            jmp .L_40805c
.L_404c4e:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_404c84
.L_404c70:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_404c84:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_404c9e
.L_404c94:
            movl $7,%eax
            jmp .L_40805c
.L_404c9e:

            movl $0,-388(%rbp)
            jmp .L_404f3c
.L_404cad:

            cmpb $0,-404(%rbp)
            je .L_404cde
.L_404cb6:
            callq __ctype_b_loc@PLT
.L_404cbb:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404cde:

            cmpb $0,-403(%rbp)
            je .L_404d11
.L_404ce7:
            callq __ctype_b_loc@PLT
.L_404cec:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404d11:

            cmpb $0,-402(%rbp)
            je .L_404d42
.L_404d1a:
            callq __ctype_b_loc@PLT
.L_404d1f:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $1,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404d42:

            cmpb $0,-401(%rbp)
            je .L_404d73
.L_404d4b:
            callq __ctype_b_loc@PLT
.L_404d50:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404d73:

            cmpb $0,-400(%rbp)
            je .L_404da6
.L_404d7c:
            callq __ctype_b_loc@PLT
.L_404d81:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404da6:

            cmpb $0,-399(%rbp)
            je .L_404dd2
.L_404daf:
            callq __ctype_b_loc@PLT
.L_404db4:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            testw %ax,%ax
            js .L_404ef6
.L_404dd2:

            cmpb $0,-398(%rbp)
            je .L_404e05
.L_404ddb:
            callq __ctype_b_loc@PLT
.L_404de0:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $512,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404e05:

            cmpb $0,-397(%rbp)
            je .L_404e38
.L_404e0e:
            callq __ctype_b_loc@PLT
.L_404e13:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $16384,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404e38:

            cmpb $0,-396(%rbp)
            je .L_404e69
.L_404e41:
            callq __ctype_b_loc@PLT
.L_404e46:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $4,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404e69:

            cmpb $0,-395(%rbp)
            je .L_404e98
.L_404e72:
            callq __ctype_b_loc@PLT
.L_404e77:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8192,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404e98:

            cmpb $0,-394(%rbp)
            je .L_404ec7
.L_404ea1:
            callq __ctype_b_loc@PLT
.L_404ea6:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            jne .L_404ef6
.L_404ec7:

            cmpb $0,-393(%rbp)
            je .L_404f35
.L_404ed0:
            callq __ctype_b_loc@PLT
.L_404ed5:
            movq (%rax),%rax
            movl -388(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $4096,%eax
            testl %eax,%eax
            je .L_404f35
.L_404ef6:

            movl -388(%rbp),%eax
            movzbl %al,%eax
            leal 7(%rax),%edx
            testl %eax,%eax
            cmovsl %edx,%eax
            sarl $3,%eax
            movl %eax,%edx
            movslq %edx,%rax
            addq %rbx,%rax
            movslq %edx,%rdx
            addq %rbx,%rdx
            movzbl (%rdx),%edx
            movl %edx,%edi
            movl -388(%rbp),%edx
            andl $7,%edx
            movl $1,%esi
            movl %edx,%ecx
            shll %cl,%esi
            movl %esi,%edx
            orl %edi,%edx
            movb %dl,(%rax)
.L_404f35:

            addl $1,-388(%rbp)
.L_404f3c:

            cmpl $255,-388(%rbp)
            jle .L_404cad
.L_404f4c:
            movb $1,-405(%rbp)
            nop
            jmp .L_404fe8
.L_404f59:

            movl %r13d,%eax
            leal 1(%rax),%r13d
            jmp .L_404f74
.L_404f62:

            movq -360(%rbp),%rax
            subq $1,%rax
            movq %rax,-360(%rbp)
.L_404f74:

            movl %r13d,%eax
            leal -1(%rax),%r13d
            testb %al,%al
            jne .L_404f62
.L_404f7f:
            leaq 11(%rbx),%rax
            leaq 11(%rbx),%rdx
            movzbl (%rdx),%edx
            orl $8,%edx
            movb %dl,(%rax)
            leaq 7(%rbx),%rax
            leaq 7(%rbx),%rdx
            movzbl (%rdx),%edx
            orl $4,%edx
            movb %dl,(%rax)
            movb $0,-405(%rbp)
            jmp .L_404fe8
.L_404fa8:

            movb $0,-405(%rbp)
            movl %r12d,%eax
            shrb $3,%al
            movzbl %al,%edx
            addq %rbx,%rdx
            movzbl %al,%eax
            addq %rbx,%rax
            movzbl (%rax),%eax
            movl %eax,%edi
            movzbl %r12b,%eax
            andl $7,%eax
            movl $1,%esi
            movl %eax,%ecx
            shll %cl,%esi
            movl %esi,%eax
            orl %edi,%eax
            movb %al,(%rdx)
            jmp .L_40458b
.L_404fe1:

            nop
            jmp .L_40458b
.L_404fe7:

            nop
.L_404fe8:

            jmp .L_40458b
.L_404fed:

            nop
            jmp .L_404ffc
.L_404ff0:

            leaq -1(%rbx),%rax
            movzbl (%rax),%edx
            subl $1,%edx
            movb %dl,(%rax)
.L_404ffc:

            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_40501f
.L_405007:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            subq $1,%rax
            addq %rbx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_404ff0
.L_40501f:

            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rax,%rbx
            jmp .L_407fd1
.L_405031:

            movl -432(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            je .L_407a94
.L_405044:
            jmp .L_405137
.L_405049:

            movl -432(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            je .L_407a97
.L_40505c:
            jmp .L_40551f
.L_405061:

            movl -432(%rbp),%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_407a9a
.L_405074:
            jmp .L_405ad9
.L_405079:

            movl -432(%rbp),%eax
            andl $32768,%eax
            testl %eax,%eax
            je .L_407a9d
.L_40508c:
            jmp .L_405ad9
.L_405091:

            movl -432(%rbp),%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_407aad
.L_4050a4:
            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_405f67
.L_4050b7:
            jmp .L_407aad
.L_4050bc:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4050d6
.L_4050cc:
            movl $5,%eax
            jmp .L_40805c
.L_4050d6:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4050f0
.L_4050e6:
            movl $14,%eax
            jmp .L_40805c
.L_4050f0:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            movzbl %r12b,%eax
            subl $39,%eax
            cmpl $85,%eax
            ja .L_407a66
.L_405118:
            movl %eax,%eax
            movq .L_417380(,%rax,8),%rax
            jmpq %rax
.L_405124:

            movl -432(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            jne .L_407a5f
.L_405137:

            movq -440(%rbp),%rax
            movq 48(%rax),%rax
            leaq 1(%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,48(%rax)
            addl $1,-392(%rbp)
            movl -52(%rbp),%edx
            movl -56(%rbp),%eax
            cmpl %eax,%edx
            jne .L_4051a8
.L_405162:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%edx
            movq %rdx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            shlq $2,%rax
            movq %rax,%rdx
            movq -64(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_405189:
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            jne .L_4051a0
.L_405196:
            movl $12,%eax
            jmp .L_40805c
.L_4051a0:

            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
.L_4051a8:

            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rax,%rdx
            movq -336(%rbp),%rcx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movl %eax,(%rdx)
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rax,%rdx
            cmpq $0,-328(%rbp)
            je .L_40521b
.L_4051ff:
            movq -328(%rbp),%rcx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            addl $1,%eax
            jmp .L_405220
.L_40521b:

            movl $0,%eax
.L_405220:

            movl %eax,4(%rdx)
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rax,%rdx
            movq %rbx,%rcx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movl %eax,12(%rdx)
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rax,%rdx
            movl -392(%rbp),%eax
            movl %eax,16(%rdx)
            cmpl $255,-392(%rbp)
            ja .L_4054b2
.L_405286:
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rax,%rdx
            movq %rbx,%rcx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            addl $2,%eax
            movl %eax,8(%rdx)
            jmp .L_405461
.L_4052be:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-152(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_4052ec
.L_4052e2:
            movl $15,%eax
            jmp .L_40805c
.L_4052ec:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_405328
.L_405319:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_405328:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_405348:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_40536e
.L_405364:
            movl $12,%eax
            jmp .L_40805c
.L_40536e:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -152(%rbp),%rax
            je .L_405461
.L_405385:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -152(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -152(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4053fd
.L_4053d5:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -152(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4053fd:

            cmpq $0,-344(%rbp)
            je .L_40542f
.L_405407:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -152(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_40542f:

            cmpq $0,-352(%rbp)
            je .L_405461
.L_405439:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -152(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_405461:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_4052be
.L_40548f:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $5,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movl -392(%rbp),%edx
            movb %dl,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $0,(%rax)
.L_4054b2:

            movl -52(%rbp),%eax
            addl $1,%eax
            movl %eax,-52(%rbp)
            movq $0,-328(%rbp)
            movq $0,-344(%rbp)
            movq %rbx,-336(%rbp)
            movq $0,-352(%rbp)
            jmp .L_407a8c
.L_4054e8:

            movl -432(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            jne .L_407a62
.L_4054fb:
            movl -52(%rbp),%eax
            testl %eax,%eax
            jne .L_40551f
.L_405502:
            movl -432(%rbp),%eax
            andl $131072,%eax
            testl %eax,%eax
            jne .L_407a65
.L_405515:
            movl $16,%eax
            jmp .L_40805c
.L_40551f:

            cmpq $0,-328(%rbp)
            je .L_40573e
.L_40552d:
            jmp .L_4056d5
.L_405532:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-144(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_405560
.L_405556:
            movl $15,%eax
            jmp .L_40805c
.L_405560:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_40559c
.L_40558d:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_40559c:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4055bc:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4055e2
.L_4055d8:
            movl $12,%eax
            jmp .L_40805c
.L_4055e2:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -144(%rbp),%rax
            je .L_4056d5
.L_4055f9:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -144(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -144(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_405671
.L_405649:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -144(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_405671:

            cmpq $0,-344(%rbp)
            je .L_4056a3
.L_40567b:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -144(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4056a3:

            cmpq $0,-352(%rbp)
            je .L_4056d5
.L_4056ad:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -144(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4056d5:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_405532
.L_405703:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $19,(%rax)
            leaq -1(%rbx),%rax
            movq %rax,%rdx
            movq -328(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            movq -328(%rbp),%rax
            movq %rax,%rsi
            movl $13,%edi
            movl $0,%eax
            callq store_op1
.L_40573e:

            movl -52(%rbp),%eax
            testl %eax,%eax
            jne .L_405762
.L_405745:
            movl -432(%rbp),%eax
            andl $131072,%eax
            testl %eax,%eax
            jne .L_407aa0
.L_405758:
            movl $16,%eax
            jmp .L_40805c
.L_405762:

            movl -52(%rbp),%eax
            subl $1,%eax
            movl %eax,-52(%rbp)
            movq -440(%rbp),%rax
            movq (%rax),%rdx
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            movl %eax,%esi
            movq %rsi,%rax
            shlq $2,%rax
            addq %rsi,%rax
            shlq $2,%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            movl 4(%rax),%eax
            testl %eax,%eax
            je .L_4057f0
.L_4057be:
            movq -440(%rbp),%rax
            movq (%rax),%rdx
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            movl %eax,%esi
            movq %rsi,%rax
            shlq $2,%rax
            addq %rsi,%rax
            shlq $2,%rax
            addq %rcx,%rax
            movl 4(%rax),%eax
            cltq 
            subq $1,%rax
            addq %rdx,%rax
            jmp .L_4057f5
.L_4057f0:

            movl $0,%eax
.L_4057f5:

            movq %rax,-328(%rbp)
            movq -440(%rbp),%rax
            movq (%rax),%rdx
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            movl %eax,%esi
            movq %rsi,%rax
            shlq $2,%rax
            addq %rsi,%rax
            shlq $2,%rax
            addq %rcx,%rax
            movl 12(%rax),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-344(%rbp)
            movq -64(%rbp),%rdx
            movl -52(%rbp),%eax
            movl %eax,%ecx
            movq %rcx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            movl 16(%rax),%eax
            movl %eax,-368(%rbp)
            movq $0,-352(%rbp)
            cmpl $255,-368(%rbp)
            ja .L_407a8b
.L_40586d:
            movq -440(%rbp),%rax
            movq (%rax),%rdx
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            movl %eax,%esi
            movq %rsi,%rax
            shlq $2,%rax
            addq %rsi,%rax
            shlq $2,%rax
            addq %rcx,%rax
            movl 8(%rax),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-136(%rbp)
            movl -392(%rbp),%eax
            movl %eax,%edx
            movl -368(%rbp),%eax
            subl %eax,%edx
            movq -136(%rbp),%rax
            movb %dl,(%rax)
            jmp .L_405a4c
.L_4058be:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-128(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_4058e9
.L_4058df:
            movl $15,%eax
            jmp .L_40805c
.L_4058e9:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_405925
.L_405916:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_405925:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_405945:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_40596b
.L_405961:
            movl $12,%eax
            jmp .L_40805c
.L_40596b:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -128(%rbp),%rax
            je .L_405a4c
.L_40597f:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -128(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -128(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4059ee
.L_4059c9:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -128(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4059ee:

            cmpq $0,-344(%rbp)
            je .L_405a1d
.L_4059f8:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -128(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_405a1d:

            cmpq $0,-352(%rbp)
            je .L_405a4c
.L_405a27:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -128(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_405a4c:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_4058be
.L_405a7a:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $6,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movl -368(%rbp),%edx
            movb %dl,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movl -392(%rbp),%edx
            movl %edx,%ecx
            movl -368(%rbp),%edx
            subl %edx,%ecx
            movl %ecx,%edx
            movb %dl,(%rax)
            jmp .L_407a8b
.L_405ab3:

            movl -432(%rbp),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_407a66
.L_405ac6:
            movl -432(%rbp),%eax
            andl $32768,%eax
            testl %eax,%eax
            jne .L_407a66
.L_405ad9:

            movl -432(%rbp),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_407aa3
.L_405aec:
            jmp .L_405c7f
.L_405af1:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-120(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_405b1c
.L_405b12:
            movl $15,%eax
            jmp .L_40805c
.L_405b1c:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_405b58
.L_405b49:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_405b58:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_405b78:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_405b9e
.L_405b94:
            movl $12,%eax
            jmp .L_40805c
.L_405b9e:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -120(%rbp),%rax
            je .L_405c7f
.L_405bb2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -120(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -120(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_405c21
.L_405bfc:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -120(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_405c21:

            cmpq $0,-344(%rbp)
            je .L_405c50
.L_405c2b:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -120(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_405c50:

            cmpq $0,-352(%rbp)
            je .L_405c7f
.L_405c5a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -120(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_405c7f:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_405af1
.L_405cad:
            leaq 6(%rbx),%rax
            movq %rax,%rdx
            movq -336(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            movq -336(%rbp),%rax
            movq %rbx,%rcx
            movq %rax,%rsi
            movl $14,%edi
            movl $0,%eax
            callq insert_op1
.L_405ce1:
            movq $0,-352(%rbp)
            addq $3,%rbx
            cmpq $0,-328(%rbp)
            je .L_405d27
.L_405cfa:
            movq %rbx,%rdx
            movq -328(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            movq -328(%rbp),%rax
            movq %rax,%rsi
            movl $13,%edi
            movl $0,%eax
            callq store_op1
.L_405d27:

            movq %rbx,-328(%rbp)
            jmp .L_405ec1
.L_405d33:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-112(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_405d5e
.L_405d54:
            movl $15,%eax
            jmp .L_40805c
.L_405d5e:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_405d9a
.L_405d8b:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_405d9a:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_405dba:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_405de0
.L_405dd6:
            movl $12,%eax
            jmp .L_40805c
.L_405de0:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -112(%rbp),%rax
            je .L_405ec1
.L_405df4:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -112(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -112(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_405e63
.L_405e3e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -112(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_405e63:

            cmpq $0,-344(%rbp)
            je .L_405e92
.L_405e6d:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -112(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_405e92:

            cmpq $0,-352(%rbp)
            je .L_405ec1
.L_405e9c:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -112(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_405ec1:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_405d33
.L_405eef:
            addq $3,%rbx
            movq $0,-344(%rbp)
            movq %rbx,-336(%rbp)
            jmp .L_407a8c
.L_405f0a:

            movl -432(%rbp),%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_407a66
.L_405f1d:
            movl -432(%rbp),%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_405f3f
.L_405f2c:
            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_407a66
.L_405f3f:

            movq -360(%rbp),%rax
            subq $2,%rax
            cmpq -424(%rbp),%rax
            jne .L_405f67
.L_405f53:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_407a66
.L_405f67:

            movl $4294967295,-384(%rbp)
            movl $4294967295,-380(%rbp)
            movq -360(%rbp),%rax
            subq $1,%rax
            movq %rax,-104(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_405fb7
.L_405f9a:
            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_406840
.L_405fad:
            movl $9,%eax
            jmp .L_40805c
.L_405fb7:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_4060df
.L_405fcb:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_405fe5
.L_405fdb:
            movl $14,%eax
            jmp .L_40805c
.L_405fe5:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4060b7
.L_40600b:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
            jmp .L_4060b7
.L_406024:

            cmpl $0,-384(%rbp)
            jns .L_406037
.L_40602d:
            movl $0,-384(%rbp)
.L_406037:

            movl -384(%rbp),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movzbl %r12b,%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,-384(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_4060de
.L_406067:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_406081
.L_406077:
            movl $14,%eax
            jmp .L_40805c
.L_406081:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4060b7
.L_4060a3:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4060b7:

            callq __ctype_b_loc@PLT
.L_4060bc:
            movq (%rax),%rax
            movzbl %r12b,%edx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            jne .L_406024
.L_4060dc:
            jmp .L_4060df
.L_4060de:

            nop
.L_4060df:

            cmpb $44,%r12b
            jne .L_406226
.L_4060e9:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_406211
.L_4060fd:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_406117
.L_40610d:
            movl $14,%eax
            jmp .L_40805c
.L_406117:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4061e9
.L_40613d:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
            jmp .L_4061e9
.L_406156:

            cmpl $0,-380(%rbp)
            jns .L_406169
.L_40615f:
            movl $0,-380(%rbp)
.L_406169:

            movl -380(%rbp),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movzbl %r12b,%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,-380(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            je .L_406210
.L_406199:
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4061b3
.L_4061a9:
            movl $14,%eax
            jmp .L_40805c
.L_4061b3:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4061e9
.L_4061d5:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4061e9:

            callq __ctype_b_loc@PLT
.L_4061ee:
            movq (%rax),%rax
            movzbl %r12b,%edx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            jne .L_406156
.L_40620e:
            jmp .L_406211
.L_406210:

            nop
.L_406211:

            cmpl $0,-380(%rbp)
            jns .L_406232
.L_40621a:
            movl $32767,-380(%rbp)
            jmp .L_406232
.L_406226:

            movl -384(%rbp),%eax
            movl %eax,-380(%rbp)
.L_406232:

            cmpl $0,-384(%rbp)
            js .L_406255
.L_40623b:
            cmpl $32767,-380(%rbp)
            jg .L_406255
.L_406247:
            movl -384(%rbp),%eax
            cmpl -380(%rbp),%eax
            jle .L_406272
.L_406255:

            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_406843
.L_406268:
            movl $10,%eax
            jmp .L_40805c
.L_406272:

            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_4062e1
.L_406281:
            cmpb $92,%r12b
            je .L_406291
.L_406287:
            movl $9,%eax
            jmp .L_40805c
.L_406291:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_4062ab
.L_4062a1:
            movl $14,%eax
            jmp .L_40805c
.L_4062ab:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4062e1
.L_4062cd:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4062e1:

            cmpb $125,%r12b
            je .L_406304
.L_4062e7:
            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_406846
.L_4062fa:
            movl $10,%eax
            jmp .L_40805c
.L_406304:

            cmpq $0,-344(%rbp)
            jne .L_40633d
.L_40630e:
            movl -432(%rbp),%eax
            andl $32,%eax
            testl %eax,%eax
            je .L_406325
.L_40631b:
            movl $13,%eax
            jmp .L_40805c
.L_406325:

            movl -432(%rbp),%eax
            andl $16,%eax
            testl %eax,%eax
            je .L_406849
.L_406336:
            movq %rbx,-344(%rbp)
.L_40633d:

            cmpl $0,-380(%rbp)
            jne .L_406548
.L_40634a:
            jmp .L_4064dd
.L_40634f:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-96(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_40637a
.L_406370:
            movl $15,%eax
            jmp .L_40805c
.L_40637a:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4063b6
.L_4063a7:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4063b6:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4063d6:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4063fc
.L_4063f2:
            movl $12,%eax
            jmp .L_40805c
.L_4063fc:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -96(%rbp),%rax
            je .L_4064dd
.L_406410:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -96(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -96(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_40647f
.L_40645a:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -96(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_40647f:

            cmpq $0,-344(%rbp)
            je .L_4064ae
.L_406489:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -96(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4064ae:

            cmpq $0,-352(%rbp)
            je .L_4064dd
.L_4064b8:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -96(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4064dd:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $3,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_40634f
.L_40650b:
            leaq 3(%rbx),%rax
            movq %rax,%rdx
            movq -344(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            movq -344(%rbp),%rax
            movq %rbx,%rcx
            movq %rax,%rsi
            movl $12,%edi
            movl $0,%eax
            callq insert_op1
.L_40653f:
            addq $3,%rbx
            jmp .L_406828
.L_406548:

            cmpl $1,-380(%rbp)
            jle .L_406558
.L_406551:
            movl $20,%eax
            jmp .L_40655d
.L_406558:

            movl $10,%eax
.L_40655d:

            movl %eax,-364(%rbp)
            jmp .L_4066f6
.L_406568:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-88(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_406593
.L_406589:
            movl $15,%eax
            jmp .L_40805c
.L_406593:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4065cf
.L_4065c0:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4065cf:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4065ef:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_406615
.L_40660b:
            movl $12,%eax
            jmp .L_40805c
.L_406615:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -88(%rbp),%rax
            je .L_4066f6
.L_406629:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -88(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -88(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_406698
.L_406673:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -88(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_406698:

            cmpq $0,-344(%rbp)
            je .L_4066c7
.L_4066a2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -88(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4066c7:

            cmpq $0,-352(%rbp)
            je .L_4066f6
.L_4066d1:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -88(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4066f6:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movl -364(%rbp),%eax
            addq %rdx,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_406568
.L_406726:
            cmpl $1,-380(%rbp)
            jle .L_406736
.L_40672f:
            movl $10,%eax
            jmp .L_40673b
.L_406736:

            movl $5,%eax
.L_40673b:

            addq %rbx,%rax
            movq %rax,%rdx
            movq -344(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rsi
            movl -384(%rbp),%edx
            movq -344(%rbp),%rax
            movq %rbx,%r8
            movl %edx,%ecx
            movq %rsi,%rdx
            movq %rax,%rsi
            movl $20,%edi
            movl $0,%eax
            callq insert_op2
.L_406779:
            addq $5,%rbx
            movl -384(%rbp),%edx
            movq -344(%rbp),%rax
            movq %rbx,%r8
            movl %edx,%ecx
            movl $5,%edx
            movq %rax,%rsi
            movl $22,%edi
            movl $0,%eax
            callq insert_op2
.L_4067a6:
            addq $5,%rbx
            cmpl $1,-380(%rbp)
            jle .L_406828
.L_4067b3:
            movl -380(%rbp),%eax
            leal -1(%rax),%edx
            movq -344(%rbp),%rax
            addq $5,%rax
            movq %rax,%rcx
            movq %rbx,%rax
            subq %rax,%rcx
            movq %rcx,%rax
            subq $3,%rax
            movl %edx,%ecx
            movq %rax,%rdx
            movq %rbx,%rsi
            movl $21,%edi
            movl $0,%eax
            callq store_op2
.L_4067ee:
            addq $5,%rbx
            movl -380(%rbp),%eax
            leal -1(%rax),%ecx
            movq %rbx,%rdx
            movq -344(%rbp),%rax
            subq %rax,%rdx
            movq -344(%rbp),%rax
            movq %rbx,%r8
            movq %rax,%rsi
            movl $22,%edi
            movl $0,%eax
            callq insert_op2
.L_406824:
            addq $5,%rbx
.L_406828:

            movq $0,-352(%rbp)
            movq $0,-104(%rbp)
            jmp .L_407a8c
.L_406840:

            nop
            jmp .L_40684a
.L_406843:

            nop
            jmp .L_40684a
.L_406846:

            nop
            jmp .L_40684a
.L_406849:

            nop
.L_40684a:

            movq -104(%rbp),%rax
            movq %rax,-360(%rbp)
            movq $0,-104(%rbp)
            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_406877
.L_40686d:
            movl $14,%eax
            jmp .L_40805c
.L_406877:

            movq -360(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-360(%rbp)
            movzbl (%rax),%eax
            movl %eax,%r12d
            cmpq $0,-312(%rbp)
            je .L_4068ad
.L_406899:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movl %eax,%r12d
.L_4068ad:

            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_407aa6
.L_4068c0:
            movq -360(%rbp),%rax
            cmpq -424(%rbp),%rax
            jbe .L_407aa6
.L_4068d4:
            movq -360(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_407aa6
.L_4068ea:
            jmp .L_407a66
.L_4068ef:

            movq %rbx,-344(%rbp)
            jmp .L_406a9e
.L_4068fb:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-288(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_406929
.L_40691f:
            movl $15,%eax
            jmp .L_40805c
.L_406929:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_406965
.L_406956:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_406965:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_406985:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4069ab
.L_4069a1:
            movl $12,%eax
            jmp .L_40805c
.L_4069ab:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -288(%rbp),%rax
            je .L_406a9e
.L_4069c2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -288(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -288(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_406a3a
.L_406a12:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -288(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_406a3a:

            cmpq $0,-344(%rbp)
            je .L_406a6c
.L_406a44:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -288(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_406a6c:

            cmpq $0,-352(%rbp)
            je .L_406a9e
.L_406a76:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -288(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_406a9e:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_4068fb
.L_406acc:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $23,(%rax)
            jmp .L_407a8c
.L_406adb:

            movq %rbx,-344(%rbp)
            jmp .L_406c8a
.L_406ae7:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-280(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_406b15
.L_406b0b:
            movl $15,%eax
            jmp .L_40805c
.L_406b15:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_406b51
.L_406b42:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_406b51:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_406b71:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_406b97
.L_406b8d:
            movl $12,%eax
            jmp .L_40805c
.L_406b97:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -280(%rbp),%rax
            je .L_406c8a
.L_406bae:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -280(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -280(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_406c26
.L_406bfe:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -280(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_406c26:

            cmpq $0,-344(%rbp)
            je .L_406c58
.L_406c30:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -280(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_406c58:

            cmpq $0,-352(%rbp)
            je .L_406c8a
.L_406c62:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -280(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_406c8a:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_406ae7
.L_406cb8:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $24,(%rax)
            jmp .L_407a8c
.L_406cc7:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-272(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_406cf5
.L_406ceb:
            movl $15,%eax
            jmp .L_40805c
.L_406cf5:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_406d31
.L_406d22:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_406d31:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_406d51:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_406d77
.L_406d6d:
            movl $12,%eax
            jmp .L_40805c
.L_406d77:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -272(%rbp),%rax
            je .L_406e6a
.L_406d8e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -272(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -272(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_406e06
.L_406dde:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -272(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_406e06:

            cmpq $0,-344(%rbp)
            je .L_406e38
.L_406e10:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -272(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_406e38:

            cmpq $0,-352(%rbp)
            je .L_406e6a
.L_406e42:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -272(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_406e6a:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_406cc7
.L_406e98:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $25,(%rax)
            jmp .L_407a8c
.L_406ea7:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-264(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_406ed5
.L_406ecb:
            movl $15,%eax
            jmp .L_40805c
.L_406ed5:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_406f11
.L_406f02:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_406f11:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_406f31:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_406f57
.L_406f4d:
            movl $12,%eax
            jmp .L_40805c
.L_406f57:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -264(%rbp),%rax
            je .L_40704a
.L_406f6e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -264(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -264(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_406fe6
.L_406fbe:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -264(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_406fe6:

            cmpq $0,-344(%rbp)
            je .L_407018
.L_406ff0:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -264(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_407018:

            cmpq $0,-352(%rbp)
            je .L_40704a
.L_407022:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -264(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_40704a:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_406ea7
.L_407078:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $26,(%rax)
            jmp .L_407a8c
.L_407087:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-256(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_4070b5
.L_4070ab:
            movl $15,%eax
            jmp .L_40805c
.L_4070b5:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4070f1
.L_4070e2:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4070f1:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_407111:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_407137
.L_40712d:
            movl $12,%eax
            jmp .L_40805c
.L_407137:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -256(%rbp),%rax
            je .L_40722a
.L_40714e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -256(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -256(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4071c6
.L_40719e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -256(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4071c6:

            cmpq $0,-344(%rbp)
            je .L_4071f8
.L_4071d0:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -256(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4071f8:

            cmpq $0,-352(%rbp)
            je .L_40722a
.L_407202:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -256(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_40722a:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407087
.L_407258:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $27,(%rax)
            jmp .L_407a8c
.L_407267:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-248(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407295
.L_40728b:
            movl $15,%eax
            jmp .L_40805c
.L_407295:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4072d1
.L_4072c2:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4072d1:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4072f1:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_407317
.L_40730d:
            movl $12,%eax
            jmp .L_40805c
.L_407317:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -248(%rbp),%rax
            je .L_40740a
.L_40732e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -248(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -248(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4073a6
.L_40737e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -248(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4073a6:

            cmpq $0,-344(%rbp)
            je .L_4073d8
.L_4073b0:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -248(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4073d8:

            cmpq $0,-352(%rbp)
            je .L_40740a
.L_4073e2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -248(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_40740a:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407267
.L_407438:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $28,(%rax)
            jmp .L_407a8c
.L_407447:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-240(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407475
.L_40746b:
            movl $15,%eax
            jmp .L_40805c
.L_407475:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4074b1
.L_4074a2:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4074b1:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4074d1:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4074f7
.L_4074ed:
            movl $12,%eax
            jmp .L_40805c
.L_4074f7:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -240(%rbp),%rax
            je .L_4075ea
.L_40750e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -240(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -240(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_407586
.L_40755e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -240(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_407586:

            cmpq $0,-344(%rbp)
            je .L_4075b8
.L_407590:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -240(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4075b8:

            cmpq $0,-352(%rbp)
            je .L_4075ea
.L_4075c2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -240(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4075ea:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407447
.L_407618:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $10,(%rax)
            jmp .L_407a8c
.L_407627:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-232(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407655
.L_40764b:
            movl $15,%eax
            jmp .L_40805c
.L_407655:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_407691
.L_407682:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_407691:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4076b1:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4076d7
.L_4076cd:
            movl $12,%eax
            jmp .L_40805c
.L_4076d7:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -232(%rbp),%rax
            je .L_4077ca
.L_4076ee:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -232(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -232(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_407766
.L_40773e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -232(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_407766:

            cmpq $0,-344(%rbp)
            je .L_407798
.L_407770:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -232(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_407798:

            cmpq $0,-352(%rbp)
            je .L_4077ca
.L_4077a2:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -232(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_4077ca:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407627
.L_4077f8:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $11,(%rax)
            jmp .L_407a8c
.L_407807:

            movl -432(%rbp),%eax
            andl $16384,%eax
            testl %eax,%eax
            jne .L_407aa9
.L_40781a:
            leal -48(%r12),%r13d
            movzbl %r13b,%eax
            cmpl -392(%rbp),%eax
            jbe .L_407835
.L_40782b:
            movl $6,%eax
            jmp .L_40805c
.L_407835:

            movzbl %r13b,%edx
            movq -64(%rbp),%rcx
            movq -56(%rbp),%rax
            movq %rcx,%rdi
            movq %rax,%rsi
            movl $0,%eax
            callq group_in_compile_stack
.L_407851:
            testb %al,%al
            jne .L_407aac
.L_407859:
            movq %rbx,-344(%rbp)
            jmp .L_407a08
.L_407865:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-224(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407893
.L_407889:
            movl $15,%eax
            jmp .L_40805c
.L_407893:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_4078cf
.L_4078c0:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_4078cf:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4078ef:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_407915
.L_40790b:
            movl $12,%eax
            jmp .L_40805c
.L_407915:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -224(%rbp),%rax
            je .L_407a08
.L_40792c:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -224(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -224(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_4079a4
.L_40797c:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -224(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_4079a4:

            cmpq $0,-344(%rbp)
            je .L_4079d6
.L_4079ae:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -224(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_4079d6:

            cmpq $0,-352(%rbp)
            je .L_407a08
.L_4079e0:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -224(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_407a08:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $2,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407865
.L_407a36:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $7,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb %r13b,(%rax)
            jmp .L_407a8c
.L_407a4c:

            movl -432(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            jne .L_403419
.L_407a5d:
            jmp .L_407a66
.L_407a5f:

            nop
            jmp .L_407a66
.L_407a62:

            nop
            jmp .L_407a66
.L_407a65:

            nop
.L_407a66:

            cmpq $0,-312(%rbp)
            je .L_407a83
.L_407a70:
            movzbl %r12b,%edx
            movq -312(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            jmp .L_407a86
.L_407a83:

            movl %r12d,%eax
.L_407a86:

            movl %eax,%r12d
            jmp .L_407aad
.L_407a8b:

            nop
.L_407a8c:

            jmp .L_407fd1
.L_407a91:

            nop
            jmp .L_407aad
.L_407a94:

            nop
            jmp .L_407aad
.L_407a97:

            nop
            jmp .L_407aad
.L_407a9a:

            nop
            jmp .L_407aad
.L_407a9d:

            nop
            jmp .L_407aad
.L_407aa0:

            nop
            jmp .L_407aad
.L_407aa3:

            nop
            jmp .L_407aad
.L_407aa6:

            nop
            jmp .L_407aad
.L_407aa9:

            nop
            jmp .L_407aad
.L_407aac:

            nop
.L_407aad:

            cmpq $0,-352(%rbp)
            je .L_407c08
.L_407abb:
            movq -352(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq 1(%rax),%rdx
            movq -352(%rbp),%rax
            addq %rdx,%rax
            cmpq %rbx,%rax
            jne .L_407c08
.L_407adf:
            movq -352(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $255,%al
            je .L_407c08
.L_407af1:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $42,%al
            je .L_407c08
.L_407b03:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $94,%al
            je .L_407c08
.L_407b15:
            movl -432(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            je .L_407b6d
.L_407b22:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_407b5b
.L_407b30:
            movq -360(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $43,%al
            je .L_407b54
.L_407b42:
            movq -360(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $63,%al
            jne .L_407b5b
.L_407b54:

            movl $1,%eax
            jmp .L_407b60
.L_407b5b:

            movl $0,%eax
.L_407b60:

            andl $1,%eax
            testb %al,%al
            jne .L_407c08
.L_407b6b:
            jmp .L_407b9c
.L_407b6d:

            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $43,%al
            je .L_407b89
.L_407b7b:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $63,%al
            jne .L_407b90
.L_407b89:

            movl $1,%eax
            jmp .L_407b95
.L_407b90:

            movl $0,%eax
.L_407b95:

            andl $1,%eax
            testb %al,%al
            jne .L_407c08
.L_407b9c:

            movl -432(%rbp),%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_407f82
.L_407baf:
            movl -432(%rbp),%eax
            andl $4096,%eax
            testl %eax,%eax
            je .L_407bd1
.L_407bbe:
            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $123,%al
            je .L_407c08
.L_407bcc:
            jmp .L_407f82
.L_407bd1:

            movq -360(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_407bf8
.L_407bdf:
            movq -360(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $123,%al
            jne .L_407bf8
.L_407bf1:
            movl $1,%eax
            jmp .L_407bfd
.L_407bf8:

            movl $0,%eax
.L_407bfd:

            andl $1,%eax
            testb %al,%al
            je .L_407f82
.L_407c08:

            movq %rbx,-344(%rbp)
            jmp .L_407da2
.L_407c14:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-80(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407c3f
.L_407c35:
            movl $15,%eax
            jmp .L_40805c
.L_407c3f:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_407c7b
.L_407c6c:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_407c7b:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_407c9b:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_407cc1
.L_407cb7:
            movl $12,%eax
            jmp .L_40805c
.L_407cc1:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -80(%rbp),%rax
            je .L_407da2
.L_407cd5:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -80(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -80(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_407d44
.L_407d1f:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -80(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_407d44:

            cmpq $0,-344(%rbp)
            je .L_407d73
.L_407d4e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -80(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_407d73:

            cmpq $0,-352(%rbp)
            je .L_407da2
.L_407d7d:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -80(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_407da2:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $2,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407c14
.L_407dd0:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $1,(%rax)
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb $0,(%rax)
            leaq -1(%rbx),%rax
            movq %rax,-352(%rbp)
            jmp .L_407f82
.L_407df4:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-72(%rbp)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jne .L_407e1f
.L_407e15:
            movl $15,%eax
            jmp .L_40805c
.L_407e1f:

            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            leaq (%rax,%rax),%rdx
            movq -440(%rbp),%rax
            movq %rdx,8(%rax)
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq $65536,%rax
            jbe .L_407e5b
.L_407e4c:
            movq -440(%rbp),%rax
            movq $65536,8(%rax)
.L_407e5b:

            movq -440(%rbp),%rax
            movq 8(%rax),%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_407e7b:
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,(%rax)
            movq -440(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_407ea1
.L_407e97:
            movl $12,%eax
            jmp .L_40805c
.L_407ea1:

            movq -440(%rbp),%rax
            movq (%rax),%rax
            cmpq -72(%rbp),%rax
            je .L_407f82
.L_407eb5:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq %rbx,%rcx
            movq -72(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            leaq (%rax,%rdx),%rbx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -336(%rbp),%rcx
            movq -72(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-336(%rbp)
            cmpq $0,-328(%rbp)
            je .L_407f24
.L_407eff:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -328(%rbp),%rcx
            movq -72(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-328(%rbp)
.L_407f24:

            cmpq $0,-344(%rbp)
            je .L_407f53
.L_407f2e:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -344(%rbp),%rcx
            movq -72(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-344(%rbp)
.L_407f53:

            cmpq $0,-352(%rbp)
            je .L_407f82
.L_407f5d:
            movq -440(%rbp),%rax
            movq (%rax),%rax
            movq -352(%rbp),%rcx
            movq -72(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            addq %rdx,%rax
            movq %rax,-352(%rbp)
.L_407f82:

            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            addq $1,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq 8(%rax),%rax
            cmpq %rax,%rdx
            ja .L_407df4
.L_407fb0:
            movq %rbx,%rax
            leaq 1(%rax),%rbx
            movb %r12b,(%rax)
            movq -352(%rbp),%rax
            movzbl (%rax),%eax
            leal 1(%rax),%edx
            movq -352(%rbp),%rax
            movb %dl,(%rax)
            nop
.L_407fd1:

            movq -360(%rbp),%rax
            cmpq -320(%rbp),%rax
            jne .L_402f14
.L_407fe5:
            cmpq $0,-328(%rbp)
            je .L_40801c
.L_407fef:
            movq %rbx,%rdx
            movq -328(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            leaq -3(%rax),%rdx
            movq -328(%rbp),%rax
            movq %rax,%rsi
            movl $13,%edi
            movl $0,%eax
            callq store_op1
.L_40801c:

            movl -52(%rbp),%eax
            testl %eax,%eax
            je .L_40802a
.L_408023:
            movl $8,%eax
            jmp .L_40805c
.L_40802a:

            movq -64(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_408036:
            movq %rbx,%rdx
            movq -440(%rbp),%rax
            movq (%rax),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movq -440(%rbp),%rax
            movq %rdx,16(%rax)
            movl $0,%eax
.L_40805c:

            movq -40(%rbp),%rdi
            xorq %fs:40,%rdi
            je .L_408070
.L_40806b:
            callq __stack_chk_fail@PLT
.L_408070:

            addq $424,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl store_op1
.type store_op1, @function
store_op1:
#-----------------------------------
# END   - Function Header

store_op1:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,-8(%rbp)
            movl -4(%rbp),%eax
            movl %eax,%edx
            movq -16(%rbp),%rax
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $1,%rax
            movl -8(%rbp),%edx
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $2,%rax
            movl -8(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl store_op2
.type store_op2, @function
store_op2:
#-----------------------------------
# END   - Function Header

store_op2:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,-8(%rbp)
            movl %ecx,-20(%rbp)
            movl -4(%rbp),%eax
            movl %eax,%edx
            movq -16(%rbp),%rax
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $1,%rax
            movl -8(%rbp),%edx
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $2,%rax
            movl -8(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $3,%rax
            movl -20(%rbp),%edx
            movb %dl,(%rax)
            movq -16(%rbp),%rax
            addq $4,%rax
            movl -20(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl insert_op1
.type insert_op1, @function
insert_op1:
#-----------------------------------
# END   - Function Header

insert_op1:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $24,%rsp
            movl %edi,-20(%rbp)
            movq %rsi,-32(%rbp)
            movl %edx,-24(%rbp)
            movq %rcx,-40(%rbp)
            movq -40(%rbp),%rbx
            movq -40(%rbp),%rax
            leaq 3(%rax),%r12
            jmp .L_408146
.L_408137:

            subq $1,%r12
            subq $1,%rbx
            movzbl (%rbx),%eax
            movb %al,(%r12)
.L_408146:

            cmpq -32(%rbp),%rbx
            jne .L_408137
.L_40814c:
            movl -24(%rbp),%edx
            movq -32(%rbp),%rcx
            movl -20(%rbp),%eax
            movq %rcx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq store_op1
.L_408165:
            nop
            addq $24,%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl insert_op2
.type insert_op2, @function
insert_op2:
#-----------------------------------
# END   - Function Header

insert_op2:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $32,%rsp
            movl %edi,-20(%rbp)
            movq %rsi,-32(%rbp)
            movl %edx,-24(%rbp)
            movl %ecx,-36(%rbp)
            movq %r8,-48(%rbp)
            movq -48(%rbp),%rbx
            movq -48(%rbp),%rax
            leaq 5(%rax),%r12
            jmp .L_4081a8
.L_408199:

            subq $1,%r12
            subq $1,%rbx
            movzbl (%rbx),%eax
            movb %al,(%r12)
.L_4081a8:

            cmpq -32(%rbp),%rbx
            jne .L_408199
.L_4081ae:
            movl -36(%rbp),%ecx
            movl -24(%rbp),%edx
            movq -32(%rbp),%rsi
            movl -20(%rbp),%eax
            movl %eax,%edi
            movl $0,%eax
            callq store_op2
.L_4081c7:
            nop
            addq $32,%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl at_begline_loc_p
.type at_begline_loc_p, @function
at_begline_loc_p:
#-----------------------------------
# END   - Function Header

at_begline_loc_p:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl %edx,-36(%rbp)
            movq -32(%rbp),%rax
            subq $2,%rax
            movq %rax,-8(%rbp)
            movq -8(%rbp),%rax
            cmpq -24(%rbp),%rax
            jbe .L_40820c
.L_4081f6:
            movq -8(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_40820c
.L_408205:
            movl $1,%eax
            jmp .L_408211
.L_40820c:

            movl $0,%eax
.L_408211:

            movb %al,-9(%rbp)
            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $40,%al
            jne .L_408231
.L_40821f:
            movl -36(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            jne .L_40824e
.L_40822b:
            cmpb $0,-9(%rbp)
            jne .L_40824e
.L_408231:

            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $124,%al
            jne .L_408255
.L_40823c:
            movl -36(%rbp),%eax
            andl $32768,%eax
            testl %eax,%eax
            jne .L_40824e
.L_408248:
            cmpb $0,-9(%rbp)
            je .L_408255
.L_40824e:

            movl $1,%eax
            jmp .L_40825a
.L_408255:

            movl $0,%eax
.L_40825a:

            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl at_endline_loc_p
.type at_endline_loc_p, @function
at_endline_loc_p:
#-----------------------------------
# END   - Function Header

at_endline_loc_p:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movl %edx,-52(%rbp)
            movq -40(%rbp),%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            sete %al
            movb %al,-17(%rbp)
            movq -40(%rbp),%rax
            addq $1,%rax
            cmpq -48(%rbp),%rax
            jae .L_40829a
.L_408290:
            movq -40(%rbp),%rax
            addq $1,%rax
            jmp .L_40829f
.L_40829a:

            movl $0,%eax
.L_40829f:

            movq %rax,-8(%rbp)
            movl -52(%rbp),%eax
            andl $8192,%eax
            testl %eax,%eax
            je .L_4082bc
.L_4082af:
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $41,%al
            je .L_40832b
.L_4082ba:
            jmp .L_4082e7
.L_4082bc:

            cmpb $0,-17(%rbp)
            je .L_4082db
.L_4082c2:
            cmpq $0,-8(%rbp)
            je .L_4082db
.L_4082c9:
            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $41,%al
            jne .L_4082db
.L_4082d4:
            movl $1,%eax
            jmp .L_4082e0
.L_4082db:

            movl $0,%eax
.L_4082e0:

            andl $1,%eax
            testb %al,%al
            jne .L_40832b
.L_4082e7:

            movl -52(%rbp),%eax
            andl $32768,%eax
            testl %eax,%eax
            je .L_408300
.L_4082f3:
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $124,%al
            je .L_40832b
.L_4082fe:
            jmp .L_408332
.L_408300:

            cmpb $0,-17(%rbp)
            je .L_40831f
.L_408306:
            cmpq $0,-8(%rbp)
            je .L_40831f
.L_40830d:
            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $124,%al
            jne .L_40831f
.L_408318:
            movl $1,%eax
            jmp .L_408324
.L_40831f:

            movl $0,%eax
.L_408324:

            andl $1,%eax
            testb %al,%al
            je .L_408332
.L_40832b:

            movl $1,%eax
            jmp .L_408337
.L_408332:

            movl $0,%eax
.L_408337:

            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl group_in_compile_stack
.type group_in_compile_stack, @function
group_in_compile_stack:
#-----------------------------------
# END   - Function Header

group_in_compile_stack:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            movq %rdi,%rax
            movq %rax,%rcx
            movq %rdx,%rbx
            movq %rsi,%rbx
            movq %rcx,-48(%rbp)
            movq %rbx,-40(%rbp)
            movl %edx,-52(%rbp)
            movl -36(%rbp),%eax
            subl $1,%eax
            movl %eax,-20(%rbp)
            jmp .L_40838e
.L_408360:

            movq -48(%rbp),%rcx
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq %rdx,%rax
            shlq $2,%rax
            addq %rdx,%rax
            shlq $2,%rax
            addq %rcx,%rax
            movl 16(%rax),%eax
            cmpl -52(%rbp),%eax
            jne .L_40838a
.L_408383:
            movl $1,%eax
            jmp .L_408399
.L_40838a:

            subl $1,-20(%rbp)
.L_40838e:

            cmpl $0,-20(%rbp)
            jns .L_408360
.L_408394:
            movl $0,%eax
.L_408399:

            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl compile_range
.type compile_range, @function
compile_range:
#-----------------------------------
# END   - Function Header

compile_range:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movl %ecx,-60(%rbp)
            movq %r8,-72(%rbp)
            movq -40(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-8(%rbp)
            movq -8(%rbp),%rax
            cmpq -48(%rbp),%rax
            jne .L_4083d2
.L_4083c8:
            movl $11,%eax
            jmp .L_408520
.L_4083d2:

            movq -8(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-16(%rbp)
            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-12(%rbp)
            movq -40(%rbp),%rax
            movq (%rax),%rax
            leaq 1(%rax),%rdx
            movq -40(%rbp),%rax
            movq %rdx,(%rax)
            movl -16(%rbp),%eax
            cmpl -12(%rbp),%eax
            jle .L_40842a
.L_40840a:
            movl -60(%rbp),%eax
            andl $65536,%eax
            testl %eax,%eax
            je .L_408420
.L_408416:
            movl $11,%eax
            jmp .L_408520
.L_408420:

            movl $0,%eax
            jmp .L_408520
.L_40842a:

            movl -16(%rbp),%eax
            movl %eax,-20(%rbp)
            jmp .L_40850f
.L_408435:

            cmpq $0,-56(%rbp)
            je .L_408463
.L_40843c:
            movl -20(%rbp),%eax
            cltq 
            movzbl %al,%edx
            movq -56(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            movzbl %al,%eax
            leal 7(%rax),%edx
            testl %eax,%eax
            cmovsl %edx,%eax
            sarl $3,%eax
            cltq 
            jmp .L_408476
.L_408463:

            movl -20(%rbp),%eax
            movzbl %al,%eax
            leal 7(%rax),%edx
            testl %eax,%eax
            cmovsl %edx,%eax
            sarl $3,%eax
            cltq 
.L_408476:

            movq -72(%rbp),%rdx
            addq %rax,%rdx
            cmpq $0,-56(%rbp)
            je .L_4084ab
.L_408484:
            movl -20(%rbp),%eax
            cltq 
            movzbl %al,%ecx
            movq -56(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            movzbl %al,%eax
            leal 7(%rax),%ecx
            testl %eax,%eax
            cmovsl %ecx,%eax
            sarl $3,%eax
            cltq 
            jmp .L_4084be
.L_4084ab:

            movl -20(%rbp),%eax
            movzbl %al,%eax
            leal 7(%rax),%ecx
            testl %eax,%eax
            cmovsl %ecx,%eax
            sarl $3,%eax
            cltq 
.L_4084be:

            movq -72(%rbp),%rcx
            addq %rcx,%rax
            movzbl (%rax),%eax
            movl %eax,%edi
            cmpq $0,-56(%rbp)
            je .L_4084f6
.L_4084d1:
            movl -20(%rbp),%eax
            cltq 
            movzbl %al,%ecx
            movq -56(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            andl $7,%eax
            movl $1,%esi
            movl %eax,%ecx
            shll %cl,%esi
            movl %esi,%eax
            jmp .L_408507
.L_4084f6:

            movl -20(%rbp),%eax
            andl $7,%eax
            movl $1,%esi
            movl %eax,%ecx
            shll %cl,%esi
            movl %esi,%eax
.L_408507:

            orl %edi,%eax
            movb %al,(%rdx)
            addl $1,-20(%rbp)
.L_40850f:

            movl -12(%rbp),%eax
            cmpl %eax,-20(%rbp)
            jbe .L_408435
.L_40851b:
            movl $0,%eax
.L_408520:

            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl re_compile_fastmap
.type re_compile_fastmap, @function
re_compile_fastmap:
#-----------------------------------
# END   - Function Header

re_compile_fastmap:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $96,%rsp
            movq %rdi,-104(%rbp)
            movq %fs:40,%rax
            movq %rax,-24(%rbp)
            xorl %eax,%eax
            movl $0,-88(%rbp)
            movq -104(%rbp),%rax
            movq 32(%rax),%rbx
            movq -104(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-72(%rbp)
            movq -104(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-64(%rbp)
            movq -72(%rbp),%rax
            movq %rax,-80(%rbp)
            movq -72(%rbp),%rdx
            movq -64(%rbp),%rax
            leaq (%rdx,%rax),%r12
            movb $1,-94(%rbp)
            movb $0,-93(%rbp)
            movl $16,%eax
            subq $1,%rax
            addq $55,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-48(%rbp)
            movq -48(%rbp),%rax
            testq %rax,%rax
            jne .L_4085c9
.L_4085bf:
            movl $4294967294,%eax
            jmp .L_408b5a
.L_4085c9:

            movl $5,-40(%rbp)
            movl $0,-36(%rbp)
            movl $256,%edx
            movl $0,%esi
            movq %rbx,%rdi
            callq memset@PLT
.L_4085e9:
            movq -104(%rbp),%rax
            movzbl 56(%rax),%edx
            orl $8,%edx
            movb %dl,56(%rax)
            movq -104(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967294,%edx
            movb %dl,56(%rax)
            jmp .L_408b18
.L_40860a:

            cmpq %r12,-80(%rbp)
            jne .L_40865c
.L_408610:
            movq -104(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $1,%eax
            orb -94(%rbp),%al
            andl $1,%eax
            movl %eax,%edx
            movq -104(%rbp),%rax
            movl %edx,%ecx
            andl $1,%ecx
            movzbl 56(%rax),%edx
            andl $4294967294,%edx
            orl %ecx,%edx
            movb %dl,56(%rax)
            movb $1,-94(%rbp)
            movq -48(%rbp),%rax
            movl -36(%rbp),%edx
            subl $1,%edx
            movl %edx,-36(%rbp)
            movl -36(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-80(%rbp)
.L_40865c:

            movq -80(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-80(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $28,%eax
            ja .L_408b0a
.L_408677:
            movl %eax,%eax
            movq .L_417630(,%rax,8),%rax
            jmpq %rax
.L_408683:

            movq -104(%rbp),%rax
            movzbl 56(%rax),%edx
            orl $1,%edx
            movb %dl,56(%rax)
            movl $0,%eax
            jmp .L_408b5a
.L_40869b:

            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rbx,%rax
            movb $1,(%rax)
            jmp .L_408b10
.L_4086b4:

            movq -80(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-80(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            shll $3,%eax
            subl $1,%eax
            movl %eax,-92(%rbp)
            jmp .L_408719
.L_4086d1:

            movl -92(%rbp),%eax
            leal 7(%rax),%edx
            testl %eax,%eax
            cmovsl %edx,%eax
            sarl $3,%eax
            movslq %eax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%esi
            movl -92(%rbp),%eax
            cltd 
            shrl $29,%edx
            addl %edx,%eax
            andl $7,%eax
            subl %edx,%eax
            movl %eax,%ecx
            sarl %cl,%esi
            movl %esi,%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_408715
.L_40870a:
            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
.L_408715:

            subl $1,-92(%rbp)
.L_408719:

            cmpl $0,-92(%rbp)
            jns .L_4086d1
.L_40871f:
            jmp .L_408b10
.L_408724:

            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            shll $3,%eax
            movl %eax,-92(%rbp)
            jmp .L_408745
.L_408736:

            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
            addl $1,-92(%rbp)
.L_408745:

            cmpl $255,-92(%rbp)
            jle .L_408736
.L_40874e:
            movq -80(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-80(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            shll $3,%eax
            subl $1,%eax
            movl %eax,-92(%rbp)
            jmp .L_4087b3
.L_40876b:

            movl -92(%rbp),%eax
            leal 7(%rax),%edx
            testl %eax,%eax
            cmovsl %edx,%eax
            sarl $3,%eax
            movslq %eax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%esi
            movl -92(%rbp),%eax
            cltd 
            shrl $29,%edx
            addl %edx,%eax
            andl $7,%eax
            subl %edx,%eax
            movl %eax,%ecx
            sarl %cl,%esi
            movl %esi,%eax
            andl $1,%eax
            testl %eax,%eax
            jne .L_4087af
.L_4087a4:
            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
.L_4087af:

            subl $1,-92(%rbp)
.L_4087b3:

            cmpl $0,-92(%rbp)
            jns .L_40876b
.L_4087b9:
            jmp .L_408b10
.L_4087be:

            movl $0,-92(%rbp)
            jmp .L_4087e6
.L_4087c7:

            movl -92(%rbp),%eax
            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_4087e2
.L_4087d7:
            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
.L_4087e2:

            addl $1,-92(%rbp)
.L_4087e6:

            cmpl $255,-92(%rbp)
            jle .L_4087c7
.L_4087ef:
            jmp .L_408b10
.L_4087f4:

            movl $0,-92(%rbp)
            jmp .L_40881c
.L_4087fd:

            movl -92(%rbp),%eax
            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            je .L_408818
.L_40880d:
            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
.L_408818:

            addl $1,-92(%rbp)
.L_40881c:

            cmpl $255,-92(%rbp)
            jle .L_4087fd
.L_408825:
            jmp .L_408b10
.L_40882a:

            movl $0,-92(%rbp)
            jmp .L_408842
.L_408833:

            movl -92(%rbp),%eax
            cltq 
            addq %rbx,%rax
            movb $1,(%rax)
            addl $1,-92(%rbp)
.L_408842:

            cmpl $255,-92(%rbp)
            jle .L_408833
.L_40884b:
            movq -104(%rbp),%rax
            movl 24(%rax),%eax
            andl $64,%eax
            testl %eax,%eax
            jne .L_408865
.L_408859:
            leaq 10(%rbx),%rax
            movb $0,(%rax)
            jmp .L_408b0f
.L_408865:

            movq -104(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $1,%eax
            testb %al,%al
            je .L_408b0f
.L_408878:
            movl $0,%eax
            jmp .L_408b5a
.L_408882:

            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-92(%rbp)
            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-92(%rbp)
            addq $2,-80(%rbp)
            movl -92(%rbp),%eax
            cltq 
            addq %rax,-80(%rbp)
            cmpl $0,-92(%rbp)
            jle .L_4088bc
.L_4088b7:
            jmp .L_408b18
.L_4088bc:

            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $14,%al
            je .L_4088d7
.L_4088c7:
            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $20,%al
            je .L_4088d7
.L_4088d2:
            jmp .L_408b18
.L_4088d7:

            addq $1,-80(%rbp)
            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-92(%rbp)
            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-92(%rbp)
            addq $2,-80(%rbp)
            movl -92(%rbp),%eax
            cltq 
            addq %rax,-80(%rbp)
            movl -36(%rbp),%eax
            testl %eax,%eax
            je .L_408b18
.L_408916:
            movq -48(%rbp),%rax
            movl -36(%rbp),%edx
            subl $1,%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq -80(%rbp),%rax
            jne .L_408b18
.L_408936:
            movl -36(%rbp),%eax
            subl $1,%eax
            movl %eax,-36(%rbp)
            jmp .L_408b18
.L_408944:

            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-92(%rbp)
            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-92(%rbp)
            addq $2,-80(%rbp)
            movl -92(%rbp),%eax
            movslq %eax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            cmpq %r12,%rax
            jae .L_408a79
.L_408980:
            movl -36(%rbp),%edx
            movl -40(%rbp),%eax
            cmpl %eax,%edx
            jne .L_408a39
.L_40898e:
            movl -40(%rbp),%ecx
            movl -88(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_408a66
.L_4089ae:
            movl -40(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-56(%rbp)
            movl -40(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -48(%rbp),%rcx
            movq -56(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_408a10:
            movq -56(%rbp),%rax
            movq %rax,-48(%rbp)
            movq -48(%rbp),%rax
            testq %rax,%rax
            je .L_408a30
.L_408a21:
            movl -40(%rbp),%eax
            addl %eax,%eax
            movl %eax,-40(%rbp)
            movl $1,%eax
            jmp .L_408a35
.L_408a30:

            movl $0,%eax
.L_408a35:

            testb %al,%al
            je .L_408a66
.L_408a39:

            movq -48(%rbp),%rcx
            movl -36(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-36(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -92(%rbp),%edx
            movslq %edx,%rcx
            movq -80(%rbp),%rdx
            addq %rcx,%rdx
            movq %rdx,(%rax)
            movl $0,%eax
            jmp .L_408a6b
.L_408a66:

            movl $1,%eax
.L_408a6b:

            testb %al,%al
            je .L_408a87
.L_408a6f:
            movl $4294967294,%eax
            jmp .L_408b5a
.L_408a79:

            movq -104(%rbp),%rax
            movzbl 56(%rax),%edx
            orl $1,%edx
            movb %dl,56(%rax)
.L_408a87:

            cmpb $0,-93(%rbp)
            je .L_408b18
.L_408a91:
            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-84(%rbp)
            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-84(%rbp)
            addq $2,-80(%rbp)
            movb $0,-93(%rbp)
            jmp .L_408b18
.L_408abd:

            addq $2,-80(%rbp)
            movq -80(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-84(%rbp)
            movq -80(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-84(%rbp)
            addq $2,-80(%rbp)
            cmpl $0,-84(%rbp)
            jne .L_408b18
.L_408aee:
            subq $4,-80(%rbp)
            movb $1,-93(%rbp)
            jmp .L_408944
.L_408afc:

            addq $4,-80(%rbp)
            jmp .L_408b18
.L_408b03:

            addq $2,-80(%rbp)
            jmp .L_408b18
.L_408b0a:

            callq abort@PLT
.L_408b0f:

            nop
.L_408b10:

            movb $0,-94(%rbp)
            movq %r12,-80(%rbp)
.L_408b18:

            cmpq %r12,-80(%rbp)
            jne .L_40860a
.L_408b22:
            movl -36(%rbp),%eax
            testl %eax,%eax
            jne .L_40860a
.L_408b2d:
            movq -104(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $1,%eax
            orb -94(%rbp),%al
            andl $1,%eax
            movl %eax,%edx
            movq -104(%rbp),%rax
            movl %edx,%ecx
            andl $1,%ecx
            movzbl 56(%rax),%edx
            andl $4294967294,%edx
            orl %ecx,%edx
            movb %dl,56(%rax)
            movl $0,%eax
.L_408b5a:

            movq -24(%rbp),%rdi
            xorq %fs:40,%rdi
            je .L_408b6e
.L_408b69:
            callq __stack_chk_fail@PLT
.L_408b6e:

            leaq -16(%rbp),%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_set_registers
.type re_set_registers, @function
re_set_registers:
#-----------------------------------
# END   - Function Header

re_set_registers:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,-20(%rbp)
            movq %rcx,-32(%rbp)
            movq %r8,-40(%rbp)
            cmpl $0,-20(%rbp)
            je .L_408bc8
.L_408b94:
            movq -8(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967289,%edx
            orl $2,%edx
            movb %dl,56(%rax)
            movq -16(%rbp),%rax
            movl -20(%rbp),%edx
            movl %edx,(%rax)
            movq -16(%rbp),%rax
            movq -32(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -16(%rbp),%rax
            movq -40(%rbp),%rdx
            movq %rdx,16(%rax)
            jmp .L_408bfc
.L_408bc8:

            movq -8(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967289,%edx
            movb %dl,56(%rax)
            movq -16(%rbp),%rax
            movl $0,(%rax)
            movq -16(%rbp),%rax
            movq $0,16(%rax)
            movq -16(%rbp),%rax
            movq 16(%rax),%rdx
            movq -16(%rbp),%rax
            movq %rdx,8(%rax)
.L_408bfc:

            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_search
.type re_search, @function
re_search:
#-----------------------------------
# END   - Function Header

re_search:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,-20(%rbp)
            movl %ecx,-24(%rbp)
            movl %r8d,-28(%rbp)
            movq %r9,-40(%rbp)
            movl -24(%rbp),%edi
            movl -20(%rbp),%esi
            movq -16(%rbp),%rdx
            movq -8(%rbp),%rax
            subq $8,%rsp
            movl -20(%rbp),%ecx
            pushq %rcx
            pushq -40(%rbp)
            movl -28(%rbp),%ecx
            pushq %rcx
            movl %edi,%r9d
            movl %esi,%r8d
            movq %rdx,%rcx
            movl $0,%edx
            movl $0,%esi
            movq %rax,%rdi
            callq re_search_2
.L_408c55:
            addq $32,%rsp
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_search_2
.type re_search_2, @function
re_search_2:
#-----------------------------------
# END   - Function Header

re_search_2:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $64,%rsp
            movq %rdi,-56(%rbp)
            movq %rsi,-64(%rbp)
            movl %edx,-68(%rbp)
            movq %rcx,-80(%rbp)
            movl %r8d,-72(%rbp)
            movl %r9d,-84(%rbp)
            movq -56(%rbp),%rax
            movq 32(%rax),%rbx
            movq -56(%rbp),%rax
            movq 40(%rax),%r12
            movl -68(%rbp),%edx
            movl -72(%rbp),%eax
            addl %edx,%eax
            movl %eax,-48(%rbp)
            movl -84(%rbp),%edx
            movl 16(%rbp),%eax
            addl %edx,%eax
            movl %eax,-44(%rbp)
            cmpl $0,-84(%rbp)
            js .L_408cb5
.L_408cad:
            movl -84(%rbp),%eax
            cmpl -48(%rbp),%eax
            jle .L_408cbf
.L_408cb5:

            movl $4294967295,%eax
            jmp .L_408f28
.L_408cbf:

            cmpl $-1,-44(%rbp)
            jge .L_408ccf
.L_408cc5:
            movl -84(%rbp),%eax
            notl %eax
            movl %eax,16(%rbp)
            jmp .L_408ce0
.L_408ccf:

            movl -44(%rbp),%eax
            cmpl -48(%rbp),%eax
            jle .L_408ce0
.L_408cd7:
            movl -48(%rbp),%eax
            subl -84(%rbp),%eax
            movl %eax,16(%rbp)
.L_408ce0:

            movq -56(%rbp),%rax
            movq 16(%rax),%rax
            testq %rax,%rax
            je .L_408d18
.L_408ced:
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_408d18
.L_408cfb:
            cmpl $0,16(%rbp)
            jle .L_408d18
.L_408d01:
            cmpl $0,-84(%rbp)
            jle .L_408d11
.L_408d07:
            movl $4294967295,%eax
            jmp .L_408f28
.L_408d11:

            movl $1,16(%rbp)
.L_408d18:

            testq %rbx,%rbx
            je .L_408d47
.L_408d1d:
            movq -56(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $8,%eax
            testb %al,%al
            jne .L_408d47
.L_408d2c:
            movq -56(%rbp),%rax
            movq %rax,%rdi
            callq re_compile_fastmap
.L_408d38:
            cmpl $-2,%eax
            jne .L_408d47
.L_408d3d:
            movl $4294967294,%eax
            jmp .L_408f28
.L_408d47:

            testq %rbx,%rbx
            je .L_408e8d
.L_408d50:
            movl -84(%rbp),%eax
            cmpl -48(%rbp),%eax
            jge .L_408e8d
.L_408d5c:
            movq -56(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $1,%eax
            testb %al,%al
            jne .L_408e8d
.L_408d6f:
            cmpl $0,16(%rbp)
            jle .L_408e31
.L_408d79:
            movl $0,%r14d
            movl 16(%rbp),%eax
            movl %eax,-40(%rbp)
            movl -84(%rbp),%eax
            cmpl -68(%rbp),%eax
            jge .L_408da8
.L_408d8d:
            movl -84(%rbp),%edx
            movl 16(%rbp),%eax
            addl %edx,%eax
            cmpl -68(%rbp),%eax
            jl .L_408da8
.L_408d9a:
            movl -68(%rbp),%eax
            subl -84(%rbp),%eax
            movl 16(%rbp),%edx
            subl %eax,%edx
            movl %edx,%r14d
.L_408da8:

            movl -84(%rbp),%eax
            cmpl -68(%rbp),%eax
            jl .L_408dc4
.L_408db0:
            movl -68(%rbp),%eax
            cltq 
            negq %rax
            movq %rax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            jmp .L_408dc8
.L_408dc4:

            movq -64(%rbp),%rax
.L_408dc8:

            movl -84(%rbp),%edx
            movslq %edx,%rdx
            leaq (%rax,%rdx),%r13
            testq %r12,%r12
            je .L_408e09
.L_408dd7:
            jmp .L_408ddd
.L_408dd9:

            subl $1,16(%rbp)
.L_408ddd:

            cmpl %r14d,16(%rbp)
            jle .L_408e26
.L_408de3:
            movq %r13,%rax
            leaq 1(%rax),%r13
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r12,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rbx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_408dd9
.L_408e03:
            jmp .L_408e26
.L_408e05:

            subl $1,16(%rbp)
.L_408e09:

            cmpl %r14d,16(%rbp)
            jle .L_408e26
.L_408e0f:
            movq %r13,%rax
            leaq 1(%rax),%r13
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rbx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_408e05
.L_408e26:

            movl -40(%rbp),%eax
            subl 16(%rbp),%eax
            addl %eax,-84(%rbp)
            jmp .L_408e8d
.L_408e31:

            cmpl $0,-68(%rbp)
            je .L_408e3f
.L_408e37:
            movl -84(%rbp),%eax
            cmpl -68(%rbp),%eax
            jl .L_408e54
.L_408e3f:

            movl -84(%rbp),%eax
            subl -68(%rbp),%eax
            movslq %eax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            jmp .L_408e64
.L_408e54:

            movl -84(%rbp),%eax
            movslq %eax,%rdx
            movq -64(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
.L_408e64:

            movl %eax,%r13d
            testq %r12,%r12
            je .L_408e7d
.L_408e6c:
            movl %r13d,%eax
            movzbl %al,%eax
            addq %r12,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            jmp .L_408e83
.L_408e7d:

            movl %r13d,%eax
            movzbl %al,%eax
.L_408e83:

            addq %rbx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_408efb
.L_408e8d:

            cmpl $0,16(%rbp)
            js .L_408eb6
.L_408e93:
            movl -84(%rbp),%eax
            cmpl -48(%rbp),%eax
            jne .L_408eb6
.L_408e9b:
            testq %rbx,%rbx
            je .L_408eb6
.L_408ea0:
            movq -56(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $1,%eax
            testb %al,%al
            jne .L_408eb6
.L_408eaf:
            movl $4294967295,%eax
            jmp .L_408f28
.L_408eb6:

            movl -84(%rbp),%r9d
            movl -72(%rbp),%r8d
            movq -80(%rbp),%rcx
            movl -68(%rbp),%edx
            movq -64(%rbp),%rsi
            movq -56(%rbp),%rax
            movl 32(%rbp),%edi
            pushq %rdi
            pushq 24(%rbp)
            movq %rax,%rdi
            callq re_match_2
.L_408edc:
            addq $16,%rsp
            movl %eax,-36(%rbp)
            cmpl $0,-36(%rbp)
            js .L_408eee
.L_408ee9:
            movl -84(%rbp),%eax
            jmp .L_408f28
.L_408eee:

            cmpl $-2,-36(%rbp)
            jne .L_408efc
.L_408ef4:
            movl $4294967294,%eax
            jmp .L_408f28
.L_408efb:

            nop
.L_408efc:

            cmpl $0,16(%rbp)
            je .L_408f22
.L_408f02:
            cmpl $0,16(%rbp)
            jle .L_408f15
.L_408f08:
            subl $1,16(%rbp)
            addl $1,-84(%rbp)
            jmp .L_408d47
.L_408f15:

            addl $1,16(%rbp)
            subl $1,-84(%rbp)
            jmp .L_408d47
.L_408f22:

            nop
            movl $4294967295,%eax
.L_408f28:

            leaq -32(%rbp),%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_match
.type re_match, @function
re_match:
#-----------------------------------
# END   - Function Header

re_match:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            movl %edx,-20(%rbp)
            movl %ecx,-24(%rbp)
            movq %r8,-32(%rbp)
            movl -24(%rbp),%edi
            movl -20(%rbp),%esi
            movq -16(%rbp),%rdx
            movq -8(%rbp),%rax
            movl -20(%rbp),%ecx
            pushq %rcx
            pushq -32(%rbp)
            movl %edi,%r9d
            movl %esi,%r8d
            movq %rdx,%rcx
            movl $0,%edx
            movl $0,%esi
            movq %rax,%rdi
            callq re_match_2
.L_408f7f:
            addq $16,%rsp
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_match_2
.type re_match_2, @function
re_match_2:
#-----------------------------------
# END   - Function Header

re_match_2:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $408,%rsp
            movq %rdi,-392(%rbp)
            movq %rsi,-400(%rbp)
            movl %edx,-404(%rbp)
            movq %rcx,-416(%rbp)
            movl %r8d,-408(%rbp)
            movl %r9d,-420(%rbp)
            movq 16(%rbp),%rax
            movq %rax,-432(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -392(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-248(%rbp)
            movq -392(%rbp),%rax
            movq 16(%rax),%rdx
            movq -248(%rbp),%rax
            leaq (%rdx,%rax),%r12
            movq -392(%rbp),%rax
            movq 40(%rax),%rax
            movq %rax,-160(%rbp)
            movq -392(%rbp),%rax
            movq 48(%rax),%rax
            addl $1,%eax
            movl %eax,-304(%rbp)
            movl $257,-372(%rbp)
            movl $256,-368(%rbp)
            movl $0,-364(%rbp)
            movq $0,-184(%rbp)
            movl $16,%eax
            subq $1,%rax
            addq $55,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            jne .L_409095
.L_40908b:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_409095:

            movl $5,-56(%rbp)
            movl $0,-52(%rbp)
            movq -392(%rbp),%rax
            movq 48(%rax),%rax
            testq %rax,%rax
            je .L_40937f
.L_4090b7:
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-240(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-232(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-224(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-216(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-200(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-192(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-208(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-176(%rbp)
            movl -304(%rbp),%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-168(%rbp)
            cmpq $0,-240(%rbp)
            je .L_409375
.L_409325:
            cmpq $0,-232(%rbp)
            je .L_409375
.L_40932f:
            cmpq $0,-224(%rbp)
            je .L_409375
.L_409339:
            cmpq $0,-216(%rbp)
            je .L_409375
.L_409343:
            cmpq $0,-208(%rbp)
            je .L_409375
.L_40934d:
            cmpq $0,-200(%rbp)
            je .L_409375
.L_409357:
            cmpq $0,-192(%rbp)
            je .L_409375
.L_409361:
            cmpq $0,-176(%rbp)
            je .L_409375
.L_40936b:
            cmpq $0,-168(%rbp)
            jne .L_40937f
.L_409375:

            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40937f:

            cmpl $0,-420(%rbp)
            js .L_40939e
.L_409388:
            movl -404(%rbp),%edx
            movl -408(%rbp),%eax
            addl %edx,%eax
            cmpl -420(%rbp),%eax
            jge .L_4093a8
.L_40939e:

            movl $4294967295,%eax
            jmp .L_40c9a0
.L_4093a8:

            movl $1,-376(%rbp)
            jmp .L_4094ca
.L_4093b7:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            leaq (%rdx,%rax),%rsi
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -224(%rbp),%rdx
            addq %rcx,%rdx
            movl -376(%rbp),%ecx
            movslq %ecx,%rcx
            leaq (,%rcx,8),%rdi
            movq -216(%rbp),%rcx
            addq %rdi,%rcx
            movq $-1,(%rcx)
            movq (%rcx),%rcx
            movq %rcx,(%rdx)
            movq (%rdx),%rdx
            movq %rdx,(%rax)
            movq (%rax),%rax
            movq %rax,(%rsi)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            orl $3,%edx
            movb %dl,(%rax)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967291,%edx
            movb %dl,(%rax)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967287,%edx
            movb %dl,(%rax)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967279,%edx
            movb %dl,(%rax)
            addl $1,-376(%rbp)
.L_4094ca:

            movl -376(%rbp),%eax
            cmpl -304(%rbp),%eax
            jb .L_4093b7
.L_4094dc:
            cmpl $0,-408(%rbp)
            jne .L_40951e
.L_4094e5:
            cmpq $0,-400(%rbp)
            je .L_40951e
.L_4094ef:
            movq -400(%rbp),%rax
            movq %rax,-416(%rbp)
            movl -404(%rbp),%eax
            movl %eax,-408(%rbp)
            movq $0,-400(%rbp)
            movl $0,-404(%rbp)
.L_40951e:

            movl -404(%rbp),%eax
            movslq %eax,%rdx
            movq -400(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-152(%rbp)
            movl -408(%rbp),%eax
            movslq %eax,%rdx
            movq -416(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-144(%rbp)
            movl 24(%rbp),%eax
            cmpl -404(%rbp),%eax
            jg .L_409584
.L_40955d:
            movl 24(%rbp),%eax
            movslq %eax,%rdx
            movq -400(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-280(%rbp)
            movq -416(%rbp),%rax
            movq %rax,-272(%rbp)
            jmp .L_4095b4
.L_409584:

            movq -152(%rbp),%rax
            movq %rax,-280(%rbp)
            movl 24(%rbp),%eax
            movslq %eax,%rdx
            movl -404(%rbp),%eax
            cltq 
            subq %rax,%rdx
            movq -416(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-272(%rbp)
.L_4095b4:

            cmpl $0,-404(%rbp)
            jle .L_4095f5
.L_4095bd:
            movl -420(%rbp),%eax
            cmpl -404(%rbp),%eax
            jg .L_4095f5
.L_4095cb:
            movl -420(%rbp),%eax
            movslq %eax,%rdx
            movq -400(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-264(%rbp)
            movq -280(%rbp),%rax
            movq %rax,-256(%rbp)
            jmp .L_409628
.L_4095f5:

            movl -420(%rbp),%eax
            movslq %eax,%rdx
            movl -404(%rbp),%eax
            cltq 
            subq %rax,%rdx
            movq -416(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_409628:

            cmpq %r12,-248(%rbp)
            jne .L_409e30
.L_409635:
            movq -264(%rbp),%rax
            cmpq -272(%rbp),%rax
            je .L_40989d
.L_409649:
            movl -52(%rbp),%eax
            testl %eax,%eax
            je .L_4097af
.L_409654:
            cmpl $0,-404(%rbp)
            je .L_409690
.L_40965d:
            movq -400(%rbp),%rax
            cmpq -184(%rbp),%rax
            ja .L_409690
.L_40966d:
            movl -404(%rbp),%eax
            movslq %eax,%rdx
            movq -400(%rbp),%rax
            addq %rdx,%rax
            cmpq -184(%rbp),%rax
            jb .L_409690
.L_409689:
            movl $1,%eax
            jmp .L_409695
.L_409690:

            movl $0,%eax
.L_409695:

            andl $1,%eax
            xorl $1,%eax
            movl %eax,%edx
            movq -256(%rbp),%rax
            cmpq -280(%rbp),%rax
            sete %al
            xorl %edx,%eax
            movb %al,-377(%rbp)
            cmpl $0,-364(%rbp)
            je .L_4096f9
.L_4096bf:
            cmpb $0,-377(%rbp)
            je .L_4096d8
.L_4096c8:
            movq -264(%rbp),%rax
            cmpq -184(%rbp),%rax
            ja .L_4096f9
.L_4096d8:

            cmpb $0,-377(%rbp)
            jne .L_40c6de
.L_4096e5:
            movq -256(%rbp),%rax
            cmpq -280(%rbp),%rax
            je .L_40c6de
.L_4096f9:

            movl $1,-364(%rbp)
            movq -264(%rbp),%rax
            movq %rax,-184(%rbp)
            movl $1,-376(%rbp)
            jmp .L_409798
.L_40971d:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -200(%rbp),%rax
            addq %rax,%rdx
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -192(%rbp),%rax
            addq %rax,%rdx
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-376(%rbp)
.L_409798:

            movl -376(%rbp),%eax
            cmpl -304(%rbp),%eax
            jb .L_40971d
.L_4097aa:
            jmp .L_40c6de
.L_4097af:

            cmpl $0,-364(%rbp)
            je .L_40989d
.L_4097bc:
            jmp .L_4097bf
.L_4097be:

            nop
.L_4097bf:

            movq -184(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -264(%rbp),%rax
            cmpq -400(%rbp),%rax
            jb .L_4097f6
.L_4097dd:
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            ja .L_4097f6
.L_4097ed:
            movq -280(%rbp),%rax
            jmp .L_4097fd
.L_4097f6:

            movq -272(%rbp),%rax
.L_4097fd:

            movq %rax,-256(%rbp)
            movl $1,-376(%rbp)
            jmp .L_40988b
.L_409810:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rax,%rdx
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -200(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rax,%rdx
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -192(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-376(%rbp)
.L_40988b:

            movl -376(%rbp),%eax
            cmpl -304(%rbp),%eax
            jb .L_409810
.L_40989d:

            cmpq $0,-432(%rbp)
            je .L_409dcd
.L_4098ab:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $16,%eax
            testb %al,%al
            jne .L_409dcd
.L_4098c1:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $6,%eax
            testb %al,%al
            jne .L_409981
.L_4098d7:
            movl -304(%rbp),%eax
            addl $1,%eax
            movl $30,%edx
            cmpl $30,%eax
            cmovael %eax,%edx
            movq -432(%rbp),%rax
            movl %edx,(%rax)
            movq -432(%rbp),%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_40990b:
            movq %rax,%rdx
            movq -432(%rbp),%rax
            movq %rdx,8(%rax)
            movq -432(%rbp),%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_409930:
            movq %rax,%rdx
            movq -432(%rbp),%rax
            movq %rdx,16(%rax)
            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            testq %rax,%rax
            je .L_40995e
.L_40994e:
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            testq %rax,%rax
            jne .L_409968
.L_40995e:

            movl $4294967294,%eax
            jmp .L_40c9a0
.L_409968:

            movq -392(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967289,%edx
            orl $2,%edx
            movb %dl,56(%rax)
            jmp .L_409a5b
.L_409981:

            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $6,%eax
            cmpb $2,%al
            jne .L_409a5b
.L_409997:
            movq -432(%rbp),%rax
            movl (%rax),%eax
            movl -304(%rbp),%edx
            addl $1,%edx
            cmpl %edx,%eax
            jae .L_409a5b
.L_4099b1:
            movl -304(%rbp),%eax
            leal 1(%rax),%edx
            movq -432(%rbp),%rax
            movl %edx,(%rax)
            movq -432(%rbp),%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_4099ec:
            movq %rax,%rdx
            movq -432(%rbp),%rax
            movq %rdx,8(%rax)
            movq -432(%rbp),%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_409a23:
            movq %rax,%rdx
            movq -432(%rbp),%rax
            movq %rdx,16(%rax)
            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            testq %rax,%rax
            je .L_409a51
.L_409a41:
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            testq %rax,%rax
            jne .L_409a5b
.L_409a51:

            movl $4294967294,%eax
            jmp .L_40c9a0
.L_409a5b:

            movq -432(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_409acc
.L_409a68:
            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            movl -420(%rbp),%edx
            movl %edx,(%rax)
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            movq -256(%rbp),%rdx
            cmpq -280(%rbp),%rdx
            jne .L_409aac
.L_409a96:
            movq -264(%rbp),%rcx
            movq -400(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            jmp .L_409aca
.L_409aac:

            movq -264(%rbp),%rcx
            movq -416(%rbp),%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            movl %edx,%ecx
            movl -404(%rbp),%edx
            addl %ecx,%edx
.L_409aca:

            movl %edx,(%rax)
.L_409acc:

            movl $1,-376(%rbp)
            jmp .L_409d43
.L_409adb:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            je .L_409b21
.L_409afe:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            jne .L_409b66
.L_409b21:

            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            movl -376(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rax
            movl $4294967295,(%rax)
            movl (%rax),%eax
            movl %eax,(%rdx)
            jmp .L_409d3c
.L_409b66:

            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            cmpl $0,-404(%rbp)
            je .L_409c18
.L_409b8e:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            cmpq -400(%rbp),%rax
            jb .L_409c18
.L_409bb4:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movl -404(%rbp),%ecx
            movslq %ecx,%rsi
            movq -400(%rbp),%rcx
            addq %rsi,%rcx
            cmpq %rcx,%rax
            ja .L_409c18
.L_409be9:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,%rcx
            movq -400(%rbp),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            jmp .L_409c4f
.L_409c18:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,%rcx
            movq -416(%rbp),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movl %eax,%ecx
            movl -404(%rbp),%eax
            addl %ecx,%eax
.L_409c4f:

            movl %eax,(%rdx)
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            cmpl $0,-404(%rbp)
            je .L_409d03
.L_409c79:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            cmpq -400(%rbp),%rax
            jb .L_409d03
.L_409c9f:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movl -404(%rbp),%ecx
            movslq %ecx,%rsi
            movq -400(%rbp),%rcx
            addq %rsi,%rcx
            cmpq %rcx,%rax
            ja .L_409d03
.L_409cd4:
            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,%rcx
            movq -400(%rbp),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            jmp .L_409d3a
.L_409d03:

            movl -376(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,%rcx
            movq -416(%rbp),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movl %eax,%ecx
            movl -404(%rbp),%eax
            addl %ecx,%eax
.L_409d3a:

            movl %eax,(%rdx)
.L_409d3c:

            addl $1,-376(%rbp)
.L_409d43:

            movq -432(%rbp),%rax
            movl (%rax),%edx
            movl -304(%rbp),%eax
            cmpl %eax,%edx
            cmoval %eax,%edx
            movl -376(%rbp),%eax
            cmpl %eax,%edx
            ja .L_409adb
.L_409d65:
            movl -304(%rbp),%eax
            movl %eax,-376(%rbp)
            jmp .L_409dba
.L_409d73:

            movq -432(%rbp),%rax
            movq 8(%rax),%rax
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -432(%rbp),%rax
            movq 16(%rax),%rax
            movl -376(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rax
            movl $4294967295,(%rax)
            movl (%rax),%eax
            movl %eax,(%rdx)
            addl $1,-376(%rbp)
.L_409dba:

            movq -432(%rbp),%rax
            movl (%rax),%edx
            movl -376(%rbp),%eax
            cmpl %eax,%edx
            ja .L_409d73
.L_409dcd:

            movl -420(%rbp),%eax
            cltq 
            negq %rax
            movq %rax,%rdx
            movq -264(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rcx
            movq -256(%rbp),%rax
            cmpq -280(%rbp),%rax
            je .L_409e12
.L_409df8:
            movl -404(%rbp),%eax
            cltq 
            negq %rax
            movq %rax,%rdx
            movq -416(%rbp),%rax
            addq %rdx,%rax
            jmp .L_409e19
.L_409e12:

            movq -400(%rbp),%rax
.L_409e19:

            subq %rax,%rcx
            movq %rcx,%rax
            movl %eax,-376(%rbp)
            movl -376(%rbp),%eax
            jmp .L_40c9a0
.L_409e30:

            movq -248(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-248(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $28,%eax
            ja .L_40c6bb
.L_409e51:
            movl %eax,%eax
            movq .L_417718(,%rax,8),%rax
            jmpq %rax
.L_409e5d:

            movq -248(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-248(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            cmpq $0,-160(%rbp)
            je .L_409f55
.L_409e89:
            jmp .L_409ebc
.L_409e8b:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_409ea0
.L_409e9b:
            jmp .L_40c6de
.L_409ea0:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_409ebc:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_409e8b
.L_409ecc:
            movq -264(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-264(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -160(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%ecx
            movq -248(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-248(%rbp)
            movzbl (%rax),%eax
            cmpb %al,%cl
            je .L_409f0f
.L_409f0a:
            jmp .L_40c6de
.L_409f0f:

            subl $1,-376(%rbp)
            cmpl $0,-376(%rbp)
            jne .L_409ebc
.L_409f1f:
            jmp .L_409fa8
.L_409f24:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_409f39
.L_409f34:
            jmp .L_40c6de
.L_409f39:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_409f55:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_409f24
.L_409f65:
            movq -264(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-264(%rbp)
            movzbl (%rax),%ecx
            movq -248(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-248(%rbp)
            movzbl (%rax),%eax
            cmpb %al,%cl
            je .L_409f98
.L_409f93:
            jmp .L_40c6de
.L_409f98:

            subl $1,-376(%rbp)
            cmpl $0,-376(%rbp)
            jne .L_409f55
.L_409fa8:

            movl -372(%rbp),%eax
            movl %eax,-360(%rbp)
            jmp .L_40a012
.L_409fb6:

            movl -360(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movl -360(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%ecx
            orl $16,%ecx
            movb %cl,(%rax)
            movzbl (%rax),%eax
            shrb $4,%al
            andl $1,%eax
            andl $1,%eax
            leal (,%rax,8),%ecx
            movzbl (%rdx),%eax
            andl $4294967287,%eax
            orl %ecx,%eax
            movb %al,(%rdx)
            addl $1,-360(%rbp)
.L_40a012:

            movl -360(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_409fb6
.L_40a020:
            jmp .L_40c6d9
.L_40a025:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_40a03a
.L_40a035:
            jmp .L_40c6de
.L_40a03a:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_40a056:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_40a025
.L_40a066:
            movq -392(%rbp),%rax
            movl 24(%rax),%eax
            andl $64,%eax
            testl %eax,%eax
            jne .L_40a0b7
.L_40a077:
            cmpq $0,-160(%rbp)
            je .L_40a0a5
.L_40a081:
            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -160(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            je .L_40c6de
.L_40a0a3:
            jmp .L_40a0b7
.L_40a0a5:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            je .L_40c6de
.L_40a0b7:

            movq -392(%rbp),%rax
            movl 24(%rax),%eax
            andl $128,%eax
            testl %eax,%eax
            je .L_40a10a
.L_40a0ca:
            cmpq $0,-160(%rbp)
            je .L_40a0f8
.L_40a0d4:
            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -160(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_40c6de
.L_40a0f6:
            jmp .L_40a10a
.L_40a0f8:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_40c6de
.L_40a10a:

            movl -372(%rbp),%eax
            movl %eax,-356(%rbp)
            jmp .L_40a174
.L_40a118:

            movl -356(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movl -356(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%ecx
            orl $16,%ecx
            movb %cl,(%rax)
            movzbl (%rax),%eax
            shrb $4,%al
            andl $1,%eax
            andl $1,%eax
            leal (,%rax,8),%ecx
            movzbl (%rdx),%eax
            andl $4294967287,%eax
            orl %ecx,%eax
            movb %al,(%rdx)
            addl $1,-356(%rbp)
.L_40a174:

            movl -356(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40a118
.L_40a182:
            addq $1,-264(%rbp)
            jmp .L_40c6d9
.L_40a18f:

            movq -248(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $4,%al
            sete %al
            movb %al,-381(%rbp)
            jmp .L_40a1db
.L_40a1aa:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_40a1bf
.L_40a1ba:
            jmp .L_40c6de
.L_40a1bf:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_40a1db:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_40a1aa
.L_40a1eb:
            cmpq $0,-160(%rbp)
            je .L_40a211
.L_40a1f5:
            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -160(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            jmp .L_40a21b
.L_40a211:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
.L_40a21b:

            movl %eax,%ebx
            movzbl %bl,%edx
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            shll $3,%eax
            cmpl %eax,%edx
            jae .L_40a275
.L_40a234:
            movl %ebx,%eax
            shrb $3,%al
            movzbl %al,%eax
            addl $1,%eax
            movslq %eax,%rdx
            movq -248(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movzbl %bl,%eax
            andl $7,%eax
            movl %eax,%ecx
            sarl %cl,%edx
            movl %edx,%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_40a275
.L_40a265:
            cmpb $0,-381(%rbp)
            sete %al
            movb %al,-381(%rbp)
.L_40a275:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addl $1,%eax
            cltq 
            addq %rax,-248(%rbp)
            cmpb $0,-381(%rbp)
            jne .L_40a29c
.L_40a297:
            jmp .L_40c6de
.L_40a29c:

            movl -372(%rbp),%eax
            movl %eax,-352(%rbp)
            jmp .L_40a306
.L_40a2aa:

            movl -352(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movl -352(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%ecx
            orl $16,%ecx
            movb %cl,(%rax)
            movzbl (%rax),%eax
            shrb $4,%al
            andl $1,%eax
            andl $1,%eax
            leal (,%rax,8),%ecx
            movzbl (%rdx),%eax
            andl $4294967287,%eax
            orl %ecx,%eax
            movb %al,(%rdx)
            addl $1,-352(%rbp)
.L_40a306:

            movl -352(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40a2aa
.L_40a314:
            addq $1,-264(%rbp)
            jmp .L_40c6d9
.L_40a321:

            movq -248(%rbp),%rax
            movq %rax,-288(%rbp)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $3,%eax
            cmpb $3,%al
            jne .L_40a3a8
.L_40a358:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movq -208(%rbp),%rdx
            leaq -288(%rbp),%rax
            movq %r12,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq group_match_null_string_p
.L_40a396:
            andl $3,%eax
            andl $3,%eax
            movl %eax,%edx
            movzbl (%rbx),%eax
            andl $4294967292,%eax
            orl %edx,%eax
            movb %al,(%rbx)
.L_40a3a8:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -224(%rbp),%rax
            addq %rax,%rdx
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            andl $3,%eax
            testb %al,%al
            je .L_40a445
.L_40a3f0:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            je .L_40a43c
.L_40a418:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            jmp .L_40a467
.L_40a43c:

            movq -264(%rbp),%rax
            jmp .L_40a467
.L_40a445:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
.L_40a467:

            movq %rax,(%rdx)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rax,%rdx
            movq -264(%rbp),%rax
            movq %rax,(%rdx)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            orl $4,%edx
            movb %dl,(%rax)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967287,%edx
            movb %dl,(%rax)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-368(%rbp)
            cmpl $257,-372(%rbp)
            jne .L_40a513
.L_40a500:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-372(%rbp)
.L_40a513:

            addq $2,-248(%rbp)
            jmp .L_40c6d9
.L_40a520:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -216(%rbp),%rax
            addq %rax,%rdx
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            andl $3,%eax
            testb %al,%al
            je .L_40a5bd
.L_40a568:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            je .L_40a5b4
.L_40a590:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            jmp .L_40a5df
.L_40a5b4:

            movq -264(%rbp),%rax
            jmp .L_40a5df
.L_40a5bd:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
.L_40a5df:

            movq %rax,(%rdx)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rax,%rdx
            movq -264(%rbp),%rax
            movq %rax,(%rdx)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967291,%edx
            movb %dl,(%rax)
            movl -372(%rbp),%eax
            cmpl -368(%rbp),%eax
            jne .L_40a656
.L_40a640:
            movl $257,-372(%rbp)
            movl $256,-368(%rbp)
            jmp .L_40a6d3
.L_40a656:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            subl $1,%eax
            movb %al,-380(%rbp)
            jmp .L_40a67b
.L_40a66b:

            movzbl -380(%rbp),%eax
            subl $1,%eax
            movb %al,-380(%rbp)
.L_40a67b:

            cmpb $0,-380(%rbp)
            je .L_40a6a7
.L_40a684:
            movzbl -380(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $4,%eax
            testb %al,%al
            je .L_40a66b
.L_40a6a7:

            cmpb $0,-380(%rbp)
            jne .L_40a6c6
.L_40a6b0:
            movl $257,-372(%rbp)
            movl $256,-368(%rbp)
            jmp .L_40a6d3
.L_40a6c6:

            movzbl -380(%rbp),%eax
            movl %eax,-368(%rbp)
.L_40a6d3:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $8,%eax
            testb %al,%al
            je .L_40a712
.L_40a6fc:
            movq -248(%rbp),%rax
            subq $3,%rax
            movzbl (%rax),%eax
            cmpb $5,%al
            jne .L_40ac35
.L_40a712:

            movq -248(%rbp),%rax
            addq $2,%rax
            cmpq %r12,%rax
            jae .L_40ac35
.L_40a726:
            movb $0,-379(%rbp)
            movq -248(%rbp),%rax
            addq $2,%rax
            movq %rax,-288(%rbp)
            movl $0,-376(%rbp)
            movq -288(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-288(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $18,%eax
            ja .L_40a772
.L_40a766:
            cmpl $16,%eax
            jae .L_40a77e
.L_40a76b:
            cmpl $12,%eax
            je .L_40a77e
.L_40a770:
            jmp .L_40a7d9
.L_40a772:

            cmpl $21,%eax
            jne .L_40a7d9
.L_40a777:
            movb $1,-379(%rbp)
.L_40a77e:

            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $2,%rax
            movq %rax,-288(%rbp)
            cmpb $0,-379(%rbp)
            je .L_40a7d8
.L_40a7c6:
            movq -288(%rbp),%rax
            addq $2,%rax
            movq %rax,-288(%rbp)
.L_40a7d8:

            nop
.L_40a7d9:

            movq -288(%rbp),%rdx
            movl -376(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-288(%rbp)
            cmpl $0,-376(%rbp)
            jns .L_40ac35
.L_40a7ff:
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $14,%al
            jne .L_40ac35
.L_40a811:
            movq -288(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            cmpb $5,%al
            jne .L_40ac35
.L_40a827:
            movq -288(%rbp),%rax
            addq $4,%rax
            movzbl (%rax),%edx
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            jne .L_40ac35
.L_40a847:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $16,%eax
            testb %al,%al
            je .L_40a98e
.L_40a874:
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            andl $4294967279,%edx
            movb %dl,(%rax)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-348(%rbp)
            jmp .L_40a962
.L_40a8b3:

            movl -348(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rax,%rdx
            movl -348(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -224(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -348(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -216(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movl %eax,%ecx
            movl -348(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpl %eax,%ecx
            jl .L_40a95b
.L_40a925:
            movl -348(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rax,%rdx
            movl -348(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -216(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
.L_40a95b:

            addl $1,-348(%rbp)
.L_40a962:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addl %edx,%eax
            cmpl -348(%rbp),%eax
            ja .L_40a8b3
.L_40a98e:

            movq -288(%rbp),%rax
            addq $1,%rax
            movq %rax,-288(%rbp)
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $2,%rax
            movq %rax,-288(%rbp)
            jmp .L_40aaac
.L_40a9e4:

            movl -56(%rbp),%ecx
            movl -304(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_40aa99
.L_40aa07:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-136(%rbp)
            movl -56(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -64(%rbp),%rcx
            movq -136(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_40aa6f:
            movq -136(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            je .L_40aa92
.L_40aa83:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
            movl $0,%eax
            jmp .L_40aa9e
.L_40aa92:

            movl $1,%eax
            jmp .L_40aa9e
.L_40aa99:

            movl $1,%eax
.L_40aa9e:

            testb %al,%al
            je .L_40aaac
.L_40aaa2:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40aaac:

            movl -56(%rbp),%edx
            movl -52(%rbp),%eax
            movl %edx,%ecx
            subl %eax,%ecx
            movl -368(%rbp),%eax
            subl -372(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            addl $4,%eax
            cmpl %eax,%ecx
            jb .L_40a9e4
.L_40aad6:
            movl -372(%rbp),%eax
            movl %eax,-344(%rbp)
            jmp .L_40ab93
.L_40aae7:

            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -344(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -344(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -344(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-344(%rbp)
.L_40ab93:

            movl -344(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40aae7
.L_40aba5:
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -372(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -368(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq -288(%rbp),%rcx
            movl -376(%rbp),%edx
            movslq %edx,%rdx
            addq %rcx,%rdx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movq -264(%rbp),%rax
            movq %rax,(%rdx)
            jmp .L_40c6de
.L_40ac35:

            addq $2,-248(%rbp)
            jmp .L_40c6d9
.L_40ac42:

            movq -248(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-248(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-300(%rbp)
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            je .L_40c6de
.L_40ac87:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq $-1,%rax
            je .L_40c6de
.L_40acae:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rbx
            cmpl $0,-404(%rbp)
            je .L_40ad36
.L_40acd4:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq -400(%rbp),%rax
            jb .L_40ad36
.L_40acfa:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movl -404(%rbp),%edx
            movslq %edx,%rcx
            movq -400(%rbp),%rdx
            addq %rcx,%rdx
            cmpq %rdx,%rax
            ja .L_40ad36
.L_40ad2f:
            movl $1,%eax
            jmp .L_40ad3b
.L_40ad36:

            movl $0,%eax
.L_40ad3b:

            andl $1,%eax
            xorl $1,%eax
            movl %eax,%esi
            cmpl $0,-404(%rbp)
            je .L_40adae
.L_40ad4c:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq -400(%rbp),%rax
            jb .L_40adae
.L_40ad72:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movl -404(%rbp),%edx
            movslq %edx,%rcx
            movq -400(%rbp),%rdx
            addq %rcx,%rdx
            cmpq %rdx,%rax
            ja .L_40adae
.L_40ada7:
            movl $1,%eax
            jmp .L_40adb3
.L_40adae:

            movl $0,%eax
.L_40adb3:

            andl $1,%eax
            xorl %esi,%eax
            testb %al,%al
            je .L_40addb
.L_40adbc:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            jmp .L_40ade2
.L_40addb:

            movq -280(%rbp),%rax
.L_40ade2:

            movq %rax,%r13
.L_40ade5:

            jmp .L_40ae36
.L_40ade7:

            cmpq -272(%rbp),%r13
            je .L_40ae3d
.L_40adf0:
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            cmpq %r13,%rax
            je .L_40ae40
.L_40ae12:
            movq -416(%rbp),%rbx
            movl -300(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%r13
.L_40ae36:

            cmpq %r13,%rbx
            je .L_40ade7
.L_40ae3b:
            jmp .L_40ae41
.L_40ae3d:

            nop
            jmp .L_40ae41
.L_40ae40:

            nop
.L_40ae41:

            cmpq %r13,%rbx
            je .L_40af4f
.L_40ae4a:
            jmp .L_40ae7d
.L_40ae4c:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_40ae61
.L_40ae5c:
            jmp .L_40c6de
.L_40ae61:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_40ae7d:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_40ae4c
.L_40ae8d:
            movq -256(%rbp),%rdx
            movq -264(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movl %eax,-376(%rbp)
            movl -376(%rbp),%eax
            cltq 
            movq %r13,%rcx
            movq %rbx,%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            cmpq %rdx,%rax
            jle .L_40aed2
.L_40aec0:
            movq %r13,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movl %eax,-376(%rbp)
.L_40aed2:

            cmpq $0,-160(%rbp)
            je .L_40af07
.L_40aedc:
            movq -160(%rbp),%rcx
            movl -376(%rbp),%edx
            movq -264(%rbp),%rax
            movq %rbx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq bcmp_translate
.L_40af00:
            testl %eax,%eax
            setne %al
            jmp .L_40af27
.L_40af07:

            movl -376(%rbp),%eax
            movslq %eax,%rdx
            movq -264(%rbp),%rax
            movq %rbx,%rsi
            movq %rax,%rdi
            callq memcmp@PLT
.L_40af22:
            testl %eax,%eax
            setne %al
.L_40af27:

            testb %al,%al
            je .L_40af30
.L_40af2b:
            jmp .L_40c6de
.L_40af30:

            movl -376(%rbp),%eax
            cltq 
            addq %rax,-264(%rbp)
            movl -376(%rbp),%eax
            cltq 
            addq %rax,%rbx
            jmp .L_40ade5
.L_40af4f:

            nop
            jmp .L_40c6d9
.L_40af55:

            cmpl $0,-404(%rbp)
            je .L_40af67
.L_40af5e:
            movq -400(%rbp),%rax
            jmp .L_40af6e
.L_40af67:

            movq -416(%rbp),%rax
.L_40af6e:

            cmpq -264(%rbp),%rax
            je .L_40af80
.L_40af77:
            cmpl $0,-408(%rbp)
            jne .L_40af97
.L_40af80:

            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $32,%eax
            testb %al,%al
            jne .L_40afc3
.L_40af92:
            jmp .L_40c6d9
.L_40af97:

            movq -264(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_40c6de
.L_40afad:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $4294967168,%eax
            testb %al,%al
            jne .L_40c6c6
.L_40afc3:

            jmp .L_40c6de
.L_40afc8:

            movq -264(%rbp),%rax
            cmpq -144(%rbp),%rax
            jne .L_40aff3
.L_40afd8:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $64,%eax
            testb %al,%al
            jne .L_40c6de
.L_40afee:
            jmp .L_40c6d9
.L_40aff3:

            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40b014
.L_40b003:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            sete %al
            jmp .L_40b023
.L_40b014:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            sete %al
.L_40b023:

            testb %al,%al
            je .L_40c6de
.L_40b02b:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $4294967168,%eax
            testb %al,%al
            jne .L_40c6cc
.L_40b041:
            jmp .L_40c6de
.L_40b046:

            cmpl $0,-404(%rbp)
            je .L_40b058
.L_40b04f:
            movq -400(%rbp),%rax
            jmp .L_40b05f
.L_40b058:

            movq -416(%rbp),%rax
.L_40b05f:

            cmpq -264(%rbp),%rax
            je .L_40c987
.L_40b06c:
            cmpl $0,-408(%rbp)
            je .L_40c987
.L_40b079:
            jmp .L_40c6de
.L_40b07e:

            movq -264(%rbp),%rax
            cmpq -144(%rbp),%rax
            je .L_40c6d2
.L_40b092:
            jmp .L_40c6de
.L_40b097:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            jmp .L_40b190
.L_40b0d1:

            movl -56(%rbp),%ecx
            movl -304(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_40b17d
.L_40b0f4:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-128(%rbp)
            movl -56(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -64(%rbp),%rcx
            movq -128(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_40b156:
            movq -128(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            je .L_40b176
.L_40b167:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
            movl $0,%eax
            jmp .L_40b182
.L_40b176:

            movl $1,%eax
            jmp .L_40b182
.L_40b17d:

            movl $1,%eax
.L_40b182:

            testb %al,%al
            je .L_40b190
.L_40b186:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40b190:

            movl -56(%rbp),%edx
            movl -52(%rbp),%eax
            movl %edx,%ecx
            subl %eax,%ecx
            movl -368(%rbp),%eax
            subl -372(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            addl $4,%eax
            cmpl %eax,%ecx
            jb .L_40b0d1
.L_40b1ba:
            movl -372(%rbp),%eax
            movl %eax,-340(%rbp)
            jmp .L_40b277
.L_40b1cb:

            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -340(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -340(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -340(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-340(%rbp)
.L_40b277:

            movl -340(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40b1cb
.L_40b289:
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -372(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -368(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -376(%rbp),%edx
            movslq %edx,%rcx
            movq -248(%rbp),%rdx
            addq %rcx,%rdx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
            jmp .L_40c6d9
.L_40b315:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            movq -248(%rbp),%rax
            movq %rax,-288(%rbp)
            jmp .L_40b36c
.L_40b35a:

            movq -288(%rbp),%rax
            addq $1,%rax
            movq %rax,-288(%rbp)
.L_40b36c:

            movq -288(%rbp),%rax
            cmpq %r12,%rax
            jae .L_40b386
.L_40b378:
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_40b35a
.L_40b386:

            movq -288(%rbp),%rax
            cmpq %r12,%rax
            jae .L_40b4bd
.L_40b396:
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $5,%al
            jne .L_40b4bd
.L_40b3a8:
            movq -288(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movq -288(%rbp),%rax
            addq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addl %edx,%eax
            movl %eax,-368(%rbp)
            cmpl $257,-372(%rbp)
            jne .L_40b4bd
.L_40b3e2:
            movq -288(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-372(%rbp)
            jmp .L_40b4bd
.L_40b3fe:

            movl -56(%rbp),%ecx
            movl -304(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_40b4aa
.L_40b421:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-120(%rbp)
            movl -56(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -64(%rbp),%rcx
            movq -120(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_40b483:
            movq -120(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            je .L_40b4a3
.L_40b494:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
            movl $0,%eax
            jmp .L_40b4af
.L_40b4a3:

            movl $1,%eax
            jmp .L_40b4af
.L_40b4aa:

            movl $1,%eax
.L_40b4af:

            testb %al,%al
            je .L_40b4bd
.L_40b4b3:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40b4bd:

            movl -56(%rbp),%edx
            movl -52(%rbp),%eax
            movl %edx,%ecx
            subl %eax,%ecx
            movl -368(%rbp),%eax
            subl -372(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            addl $4,%eax
            cmpl %eax,%ecx
            jb .L_40b3fe
.L_40b4e7:
            movl -372(%rbp),%eax
            movl %eax,-336(%rbp)
            jmp .L_40b5a4
.L_40b4f8:

            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -336(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -336(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -336(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-336(%rbp)
.L_40b5a4:

            movl -336(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40b4f8
.L_40b5b6:
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -372(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -368(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -376(%rbp),%edx
            movslq %edx,%rcx
            movq -248(%rbp),%rdx
            addq %rcx,%rdx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movq -264(%rbp),%rax
            movq %rax,(%rdx)
            jmp .L_40c6d9
.L_40b646:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            movq -248(%rbp),%rbx
            jmp .L_40b688
.L_40b684:

            addq $3,%rbx
.L_40b688:

            leaq 2(%rbx),%rax
            cmpq %r12,%rax
            jae .L_40b69f
.L_40b691:
            movzbl (%rbx),%eax
            cmpb $6,%al
            je .L_40b684
.L_40b698:
            movzbl (%rbx),%eax
            cmpb $5,%al
            je .L_40b684
.L_40b69f:

            cmpq %r12,%rbx
            jne .L_40b6b7
.L_40b6a4:
            movq -248(%rbp),%rax
            subq $3,%rax
            movb $16,(%rax)
            jmp .L_40b7f7
.L_40b6b7:

            movzbl (%rbx),%eax
            cmpb $1,%al
            je .L_40b6df
.L_40b6be:
            movq -392(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $4294967168,%eax
            testb %al,%al
            je .L_40b7f7
.L_40b6d4:
            movzbl (%rbx),%eax
            cmpb $9,%al
            jne .L_40b7f7
.L_40b6df:

            movzbl (%rbx),%eax
            cmpb $9,%al
            je .L_40b6ec
.L_40b6e6:
            movzbl 2(%rbx),%eax
            jmp .L_40b6f1
.L_40b6ec:

            movl $10,%eax
.L_40b6f1:

            movl %eax,%ebx
            movl -376(%rbp),%eax
            movslq %eax,%rdx
            movq -248(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-288(%rbp)
            movq -288(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            cmpb $1,%al
            jne .L_40b744
.L_40b71f:
            movq -288(%rbp),%rax
            addq $5,%rax
            movzbl (%rax),%eax
            cmpb %bl,%al
            je .L_40b744
.L_40b731:
            movq -248(%rbp),%rax
            subq $3,%rax
            movb $16,(%rax)
            jmp .L_40b7f7
.L_40b744:

            movq -288(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            cmpb $3,%al
            je .L_40b76c
.L_40b756:
            movq -288(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            cmpb $4,%al
            jne .L_40b7f7
.L_40b76c:

            movq -288(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            cmpb $4,%al
            sete %al
            movzbl %al,%eax
            movl %eax,-332(%rbp)
            movq -288(%rbp),%rax
            addq $4,%rax
            movzbl (%rax),%eax
            shll $3,%eax
            cmpb %bl,%al
            jbe .L_40b7e0
.L_40b79d:
            movq -288(%rbp),%rdx
            movl %ebx,%eax
            shrb $3,%al
            movzbl %al,%eax
            addl $5,%eax
            cltq 
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%edx
            movzbl %bl,%eax
            andl $7,%eax
            movl %eax,%ecx
            sarl %cl,%edx
            movl %edx,%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_40b7e0
.L_40b7cd:
            cmpl $0,-332(%rbp)
            sete %al
            movzbl %al,%eax
            movl %eax,-332(%rbp)
.L_40b7e0:

            cmpl $0,-332(%rbp)
            jne .L_40b7f7
.L_40b7e9:
            movq -248(%rbp),%rax
            subq $3,%rax
            movb $16,(%rax)
.L_40b7f7:

            subq $2,-248(%rbp)
            movq -248(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            cmpb $16,%al
            je .L_40b824
.L_40b811:
            movq -248(%rbp),%rax
            subq $1,%rax
            movb $12,(%rax)
            jmp .L_40b98c
.L_40b824:

            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-112(%rbp)
            cmpq $0,-112(%rbp)
            je .L_40b853
.L_40b84b:
            movq -112(%rbp),%rax
            movq %rax,-104(%rbp)
.L_40b853:

            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-96(%rbp)
            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl %eax,-296(%rbp)
            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl %eax,-292(%rbp)
            movl -296(%rbp),%eax
            movl %eax,-328(%rbp)
            jmp .L_40b97a
.L_40b8c8:

            movl -328(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -168(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -328(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -176(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -328(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -176(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            subl $1,-328(%rbp)
.L_40b97a:

            movl -328(%rbp),%eax
            cmpl -292(%rbp),%eax
            jae .L_40b8c8
.L_40b98c:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            movl -376(%rbp),%eax
            cltq 
            addq %rax,-248(%rbp)
            jmp .L_40c6d9
.L_40b9d5:

            movl -56(%rbp),%ecx
            movl -304(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_40ba81
.L_40b9f8:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%edi
            movl $0,%edx
            divq %rdi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-88(%rbp)
            movl -56(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -64(%rbp),%rcx
            movq -88(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_40ba5a:
            movq -88(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            je .L_40ba7a
.L_40ba6b:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
            movl $0,%eax
            jmp .L_40ba86
.L_40ba7a:

            movl $1,%eax
            jmp .L_40ba86
.L_40ba81:

            movl $1,%eax
.L_40ba86:

            testb %al,%al
            je .L_40ba94
.L_40ba8a:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40ba94:

            movl -56(%rbp),%edx
            movl -52(%rbp),%eax
            movl %edx,%ecx
            subl %eax,%ecx
            movl -368(%rbp),%eax
            subl -372(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            addl $4,%eax
            cmpl %eax,%ecx
            jb .L_40b9d5
.L_40babe:
            movl -372(%rbp),%eax
            movl %eax,-324(%rbp)
            jmp .L_40bb7b
.L_40bacf:

            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -324(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -324(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -324(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-324(%rbp)
.L_40bb7b:

            movl -324(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40bacf
.L_40bb8d:
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -372(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -368(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
            jmp .L_40b98c
.L_40bc0a:

            movl -56(%rbp),%ecx
            movl -304(%rbp),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            leal 1(%rax),%edx
            movl re_max_failures(%rip),%eax
            imull %edx,%eax
            cmpl %eax,%ecx
            ja .L_40bcb6
.L_40bc2d:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,%eax
            shlq $3,%rax
            leaq 15(%rax),%rdx
            movl $16,%eax
            subq $1,%rax
            addq %rdx,%rax
            movl $16,%esi
            movl $0,%edx
            divq %rsi
            imulq $16,%rax,%rax
            subq %rax,%rsp
            movq %rsp,%rax
            addq $15,%rax
            shrq $4,%rax
            shlq $4,%rax
            movq %rax,-80(%rbp)
            movl -56(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,8),%rdx
            movq -64(%rbp),%rcx
            movq -80(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq memcpy@PLT
.L_40bc8f:
            movq -80(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -64(%rbp),%rax
            testq %rax,%rax
            je .L_40bcaf
.L_40bca0:
            movl -56(%rbp),%eax
            addl %eax,%eax
            movl %eax,-56(%rbp)
            movl $0,%eax
            jmp .L_40bcbb
.L_40bcaf:

            movl $1,%eax
            jmp .L_40bcbb
.L_40bcb6:

            movl $1,%eax
.L_40bcbb:

            testb %al,%al
            je .L_40bcc9
.L_40bcbf:
            movl $4294967294,%eax
            jmp .L_40c9a0
.L_40bcc9:

            movl -56(%rbp),%edx
            movl -52(%rbp),%eax
            movl %edx,%ecx
            subl %eax,%ecx
            movl -368(%rbp),%eax
            subl -372(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,%eax
            addl %eax,%eax
            addl %edx,%eax
            addl $4,%eax
            cmpl %eax,%ecx
            jb .L_40bc0a
.L_40bcf3:
            movl -372(%rbp),%eax
            movl %eax,-320(%rbp)
            jmp .L_40bdb0
.L_40bd04:

            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -320(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -240(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -320(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -232(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movl -320(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-320(%rbp)
.L_40bdb0:

            movl -320(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40bd04
.L_40bdc2:
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -372(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movl -368(%rbp),%edx
            movq %rdx,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
            movq -64(%rbp),%rcx
            movl -52(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-52(%rbp)
            movl %eax,%eax
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
            jmp .L_40c6d9
.L_40be3f:

            movq -248(%rbp),%rax
            addq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            cmpl $0,-376(%rbp)
            jle .L_40bebc
.L_40be79:
            subl $1,-376(%rbp)
            addq $2,-248(%rbp)
            movl -376(%rbp),%eax
            movl %eax,%edx
            movq -248(%rbp),%rax
            movb %dl,(%rax)
            movq -248(%rbp),%rax
            addq $1,%rax
            movl -376(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            addq $2,-248(%rbp)
            jmp .L_40c6d8
.L_40bebc:

            cmpl $0,-376(%rbp)
            jne .L_40c6d8
.L_40bec9:
            movq -248(%rbp),%rax
            addq $2,%rax
            movb $0,(%rax)
            movq -248(%rbp),%rax
            addq $3,%rax
            movb $0,(%rax)
            jmp .L_40b315
.L_40beea:

            movq -248(%rbp),%rax
            addq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $3,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            cmpl $0,-376(%rbp)
            je .L_40bf59
.L_40bf24:
            subl $1,-376(%rbp)
            movq -248(%rbp),%rax
            addq $2,%rax
            movl -376(%rbp),%edx
            movb %dl,(%rax)
            movq -248(%rbp),%rax
            addq $3,%rax
            movl -376(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            jmp .L_40b98c
.L_40bf59:

            addq $4,-248(%rbp)
            jmp .L_40c6d9
.L_40bf66:

            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            movl -376(%rbp),%eax
            movslq %eax,%rdx
            movq -248(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-288(%rbp)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -248(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            addq $2,-248(%rbp)
            movq -288(%rbp),%rax
            movl -376(%rbp),%edx
            movb %dl,(%rax)
            movq -288(%rbp),%rax
            addq $1,%rax
            movl -376(%rbp),%edx
            sarl $8,%edx
            movb %dl,(%rax)
            jmp .L_40c6d9
.L_40c014:

            cmpl $0,-404(%rbp)
            je .L_40c026
.L_40c01d:
            movq -400(%rbp),%rax
            jmp .L_40c02d
.L_40c026:

            movq -416(%rbp),%rax
.L_40c02d:

            cmpq -264(%rbp),%rax
            je .L_40c987
.L_40c03a:
            cmpl $0,-408(%rbp)
            je .L_40c987
.L_40c047:
            movq -264(%rbp),%rax
            cmpq -144(%rbp),%rax
            je .L_40c987
.L_40c05b:
            movq -264(%rbp),%rax
            subq $1,%rax
            cmpq -152(%rbp),%rax
            jne .L_40c07e
.L_40c06f:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c0b2
.L_40c07e:

            movq -264(%rbp),%rax
            cmpq -416(%rbp),%rax
            jne .L_40c0a1
.L_40c08e:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c0b2
.L_40c0a1:

            movq -264(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c0b2:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            sete %dl
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c0df
.L_40c0d0:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c113
.L_40c0df:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c106
.L_40c0f3:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c113
.L_40c106:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c113:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            sete %al
            xorl %edx,%eax
            testb %al,%al
            jne .L_40c987
.L_40c12b:
            jmp .L_40c6de
.L_40c130:

            cmpl $0,-404(%rbp)
            je .L_40c142
.L_40c139:
            movq -400(%rbp),%rax
            jmp .L_40c149
.L_40c142:

            movq -416(%rbp),%rax
.L_40c149:

            cmpq -264(%rbp),%rax
            je .L_40c6de
.L_40c156:
            cmpl $0,-408(%rbp)
            je .L_40c6de
.L_40c163:
            movq -264(%rbp),%rax
            cmpq -144(%rbp),%rax
            je .L_40c6de
.L_40c177:
            movq -264(%rbp),%rax
            subq $1,%rax
            cmpq -152(%rbp),%rax
            jne .L_40c19a
.L_40c18b:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c1ce
.L_40c19a:

            movq -264(%rbp),%rax
            cmpq -416(%rbp),%rax
            jne .L_40c1bd
.L_40c1aa:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c1ce
.L_40c1bd:

            movq -264(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c1ce:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            sete %dl
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c1fb
.L_40c1ec:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c22f
.L_40c1fb:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c222
.L_40c20f:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c22f
.L_40c222:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c22f:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            sete %al
            xorl %edx,%eax
            testb %al,%al
            jne .L_40c6de
.L_40c247:
            jmp .L_40c6d9
.L_40c24c:

            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c26b
.L_40c25c:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c29f
.L_40c26b:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c292
.L_40c27f:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c29f
.L_40c292:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c29f:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_40c6de
.L_40c2b0:
            cmpl $0,-404(%rbp)
            je .L_40c2c2
.L_40c2b9:
            movq -400(%rbp),%rax
            jmp .L_40c2c9
.L_40c2c2:

            movq -416(%rbp),%rax
.L_40c2c9:

            cmpq -264(%rbp),%rax
            je .L_40c987
.L_40c2d6:
            cmpl $0,-408(%rbp)
            je .L_40c987
.L_40c2e3:
            movq -264(%rbp),%rax
            subq $1,%rax
            cmpq -152(%rbp),%rax
            jne .L_40c306
.L_40c2f7:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c33a
.L_40c306:

            movq -264(%rbp),%rax
            cmpq -416(%rbp),%rax
            jne .L_40c329
.L_40c316:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c33a
.L_40c329:

            movq -264(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c33a:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_40c987
.L_40c34b:
            jmp .L_40c6de
.L_40c350:

            cmpl $0,-404(%rbp)
            je .L_40c362
.L_40c359:
            movq -400(%rbp),%rax
            jmp .L_40c369
.L_40c362:

            movq -416(%rbp),%rax
.L_40c369:

            cmpq -264(%rbp),%rax
            je .L_40c6de
.L_40c376:
            cmpl $0,-408(%rbp)
            je .L_40c6de
.L_40c383:
            movq -264(%rbp),%rax
            subq $1,%rax
            cmpq -152(%rbp),%rax
            jne .L_40c3a6
.L_40c397:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c3da
.L_40c3a6:

            movq -264(%rbp),%rax
            cmpq -416(%rbp),%rax
            jne .L_40c3c9
.L_40c3b6:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c3da
.L_40c3c9:

            movq -264(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c3da:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_40c6de
.L_40c3eb:
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c40a
.L_40c3fb:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c43e
.L_40c40a:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c431
.L_40c41e:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c43e
.L_40c431:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c43e:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_40c987
.L_40c44f:
            movq -264(%rbp),%rax
            cmpq -144(%rbp),%rax
            je .L_40c987
.L_40c463:
            jmp .L_40c6de
.L_40c468:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_40c47d
.L_40c478:
            jmp .L_40c6de
.L_40c47d:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_40c499:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_40c468
.L_40c4a9:
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c4c8
.L_40c4b9:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c4fc
.L_40c4c8:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c4ef
.L_40c4dc:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c4fc
.L_40c4ef:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c4fc:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            je .L_40c50e
.L_40c509:
            jmp .L_40c6de
.L_40c50e:

            movl -372(%rbp),%eax
            movl %eax,-316(%rbp)
            jmp .L_40c578
.L_40c51c:

            movl -316(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movl -316(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%ecx
            orl $16,%ecx
            movb %cl,(%rax)
            movzbl (%rax),%eax
            shrb $4,%al
            andl $1,%eax
            andl $1,%eax
            leal (,%rax,8),%ecx
            movzbl (%rdx),%eax
            andl $4294967287,%eax
            orl %ecx,%eax
            movb %al,(%rdx)
            addl $1,-316(%rbp)
.L_40c578:

            movl -316(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40c51c
.L_40c586:
            addq $1,-264(%rbp)
            jmp .L_40c6d9
.L_40c593:

            movq -256(%rbp),%rax
            cmpq -272(%rbp),%rax
            jne .L_40c5a8
.L_40c5a3:
            jmp .L_40c6de
.L_40c5a8:

            movq -416(%rbp),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq %rax,-256(%rbp)
.L_40c5c4:

            movq -264(%rbp),%rax
            cmpq -256(%rbp),%rax
            je .L_40c593
.L_40c5d4:
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            jne .L_40c5f3
.L_40c5e4:
            movq -416(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c627
.L_40c5f3:

            movq -416(%rbp),%rax
            subq $1,%rax
            cmpq -264(%rbp),%rax
            jne .L_40c61a
.L_40c607:
            movq -152(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            jmp .L_40c627
.L_40c61a:

            movq -264(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
.L_40c627:

            cltq 
            movzbl re_syntax_table(%rax),%eax
            cmpb $1,%al
            jne .L_40c639
.L_40c634:
            jmp .L_40c6de
.L_40c639:

            movl -372(%rbp),%eax
            movl %eax,-312(%rbp)
            jmp .L_40c6a3
.L_40c647:

            movl -312(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movl -312(%rbp),%eax
            leaq (,%rax,8),%rcx
            movq -208(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%ecx
            orl $16,%ecx
            movb %cl,(%rax)
            movzbl (%rax),%eax
            shrb $4,%al
            andl $1,%eax
            andl $1,%eax
            leal (,%rax,8),%ecx
            movzbl (%rdx),%eax
            andl $4294967287,%eax
            orl %ecx,%eax
            movb %al,(%rdx)
            addl $1,-312(%rbp)
.L_40c6a3:

            movl -312(%rbp),%eax
            cmpl -368(%rbp),%eax
            jbe .L_40c647
.L_40c6b1:
            addq $1,-264(%rbp)
            jmp .L_40c6d9
.L_40c6bb:

            callq abort@PLT
.L_40c6c0:

            nop
            jmp .L_40c987
.L_40c6c6:

            nop
            jmp .L_40c987
.L_40c6cc:

            nop
            jmp .L_40c987
.L_40c6d2:

            nop
            jmp .L_40c987
.L_40c6d8:

            nop
.L_40c6d9:

            jmp .L_40c987
.L_40c6de:

            movl -52(%rbp),%eax
            testl %eax,%eax
            je .L_40c98d
.L_40c6e9:
            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-72(%rbp)
            cmpq $0,-72(%rbp)
            je .L_40c71b
.L_40c710:
            movq -72(%rbp),%rax
            movq %rax,-264(%rbp)
.L_40c71b:

            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-248(%rbp)
            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl %eax,-368(%rbp)
            movq -64(%rbp),%rax
            movl -52(%rbp),%edx
            subl $1,%edx
            movl %edx,-52(%rbp)
            movl -52(%rbp),%edx
            movl %edx,%edx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl %eax,-372(%rbp)
            movl -368(%rbp),%eax
            movl %eax,-308(%rbp)
            jmp .L_40c845
.L_40c793:

            movl -308(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -208(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -308(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -232(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -308(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -240(%rbp),%rax
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movl -52(%rbp),%ecx
            subl $1,%ecx
            movl %ecx,-52(%rbp)
            movl -52(%rbp),%ecx
            movl %ecx,%ecx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            subl $1,-308(%rbp)
.L_40c845:

            movl -308(%rbp),%eax
            cmpl -372(%rbp),%eax
            jae .L_40c793
.L_40c857:
            cmpq $0,-248(%rbp)
            jne .L_40c866
.L_40c861:
            jmp .L_40c6de
.L_40c866:

            cmpq %r12,-248(%rbp)
            jae .L_40c94c
.L_40c873:
            movb $0,-378(%rbp)
            movq -248(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $17,%eax
            ja .L_40c89b
.L_40c88c:
            cmpl $16,%eax
            jae .L_40c8ab
.L_40c891:
            cmpl $12,%eax
            je .L_40c8ab
.L_40c896:
            jmp .L_40c94c
.L_40c89b:

            cmpl $21,%eax
            jne .L_40c94c
.L_40c8a4:
            movb $1,-378(%rbp)
.L_40c8ab:

            movq -248(%rbp),%rax
            addq $1,%rax
            movq %rax,-288(%rbp)
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-376(%rbp)
            movq -288(%rbp),%rax
            addq $2,%rax
            movq %rax,-288(%rbp)
            movq -288(%rbp),%rdx
            movl -376(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-288(%rbp)
            cmpb $0,-378(%rbp)
            je .L_40c930
.L_40c91e:
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $20,%al
            je .L_40c6de
.L_40c930:

            cmpb $0,-378(%rbp)
            jne .L_40c94b
.L_40c939:
            movq -288(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $14,%al
            je .L_40c6de
.L_40c94b:

            nop
.L_40c94c:

            movq -264(%rbp),%rax
            cmpq -400(%rbp),%rax
            jb .L_409628
.L_40c960:
            movq -264(%rbp),%rax
            cmpq -152(%rbp),%rax
            ja .L_409628
.L_40c974:
            movq -280(%rbp),%rax
            movq %rax,-256(%rbp)
            jmp .L_409628
.L_40c987:

            nop
            jmp .L_409628
.L_40c98d:

            nop
            cmpl $0,-364(%rbp)
            jne .L_4097be
.L_40c99b:
            movl $4294967295,%eax
.L_40c9a0:

            movq -40(%rbp),%rdi
            xorq %fs:40,%rdi
            je .L_40c9b4
.L_40c9af:
            callq __stack_chk_fail@PLT
.L_40c9b4:

            leaq -24(%rbp),%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl group_match_null_string_p
.type group_match_null_string_p, @function
group_match_null_string_p:
#-----------------------------------
# END   - Function Header

group_match_null_string_p:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movq %fs:40,%rax
            movq %rax,-8(%rbp)
            xorl %eax,%eax
            movq -40(%rbp),%rax
            movq (%rax),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            jmp .L_40cbcf
.L_40c9f6:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $6,%eax
            je .L_40cb92
.L_40ca09:
            cmpl $14,%eax
            jne .L_40cba8
.L_40ca12:
            movq -16(%rbp),%rax
            addq $1,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            cmpl $0,-20(%rbp)
            js .L_40cbcf
.L_40ca55:
            jmp .L_40cb0c
.L_40ca5a:

            movq -16(%rbp),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            subq $3,%rdx
            leaq (%rax,%rdx),%rcx
            movq -16(%rbp),%rax
            movq -56(%rbp),%rdx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq alt_match_null_string_p
.L_40ca84:
            testb %al,%al
            jne .L_40ca92
.L_40ca88:
            movl $0,%eax
            jmp .L_40cbe2
.L_40ca92:

            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $14,%al
            jne .L_40cb2a
.L_40caad:
            movq -16(%rbp),%rax
            addq $1,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            subq $3,%rdx
            addq %rdx,%rax
            movzbl (%rax),%eax
            cmpb $13,%al
            je .L_40cb0c
.L_40cafe:
            movq -16(%rbp),%rax
            subq $3,%rax
            movq %rax,-16(%rbp)
            jmp .L_40cb2b
.L_40cb0c:

            movq -16(%rbp),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            subq $3,%rdx
            addq %rdx,%rax
            movzbl (%rax),%eax
            cmpb $13,%al
            je .L_40ca5a
.L_40cb28:
            jmp .L_40cb2b
.L_40cb2a:

            nop
.L_40cb2b:

            movq -16(%rbp),%rax
            subq $2,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            subq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            leaq (%rdx,%rax),%rcx
            movq -16(%rbp),%rax
            movq -56(%rbp),%rdx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq alt_match_null_string_p
.L_40cb75:
            testb %al,%al
            jne .L_40cb80
.L_40cb79:
            movl $0,%eax
            jmp .L_40cbe2
.L_40cb80:

            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            jmp .L_40cbcf
.L_40cb92:

            movq -16(%rbp),%rax
            leaq 2(%rax),%rdx
            movq -40(%rbp),%rax
            movq %rdx,(%rax)
            movl $1,%eax
            jmp .L_40cbe2
.L_40cba8:

            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            leaq -16(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq common_op_match_null_string_p
.L_40cbc4:
            testb %al,%al
            jne .L_40cbcf
.L_40cbc8:
            movl $0,%eax
            jmp .L_40cbe2
.L_40cbcf:

            movq -16(%rbp),%rax
            cmpq -48(%rbp),%rax
            jb .L_40c9f6
.L_40cbdd:
            movl $0,%eax
.L_40cbe2:

            movq -8(%rbp),%rsi
            xorq %fs:40,%rsi
            je .L_40cbf6
.L_40cbf1:
            callq __stack_chk_fail@PLT
.L_40cbf6:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl alt_match_null_string_p
.type alt_match_null_string_p, @function
alt_match_null_string_p:
#-----------------------------------
# END   - Function Header

alt_match_null_string_p:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movq %fs:40,%rax
            movq %rax,-8(%rbp)
            xorl %eax,%eax
            movq -40(%rbp),%rax
            movq %rax,-16(%rbp)
            jmp .L_40cca9
.L_40cc28:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $14,%eax
            jne .L_40cc82
.L_40cc37:
            movq -16(%rbp),%rax
            addq $1,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            jmp .L_40cca9
.L_40cc82:

            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            leaq -16(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq common_op_match_null_string_p
.L_40cc9e:
            testb %al,%al
            jne .L_40cca9
.L_40cca2:
            movl $0,%eax
            jmp .L_40ccbc
.L_40cca9:

            movq -16(%rbp),%rax
            cmpq -48(%rbp),%rax
            jb .L_40cc28
.L_40ccb7:
            movl $1,%eax
.L_40ccbc:

            movq -8(%rbp),%rcx
            xorq %fs:40,%rcx
            je .L_40ccd0
.L_40cccb:
            callq __stack_chk_fail@PLT
.L_40ccd0:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl common_op_match_null_string_p
.type common_op_match_null_string_p, @function
common_op_match_null_string_p:
#-----------------------------------
# END   - Function Header

common_op_match_null_string_p:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movq %fs:40,%rax
            movq %rax,-8(%rbp)
            xorl %eax,%eax
            movq -40(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            leaq 1(%rax),%rdx
            movq %rdx,-16(%rbp)
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl $28,%eax
            ja .L_40cec8
.L_40cd1b:
            movl %eax,%eax
            movq .L_417800(,%rax,8),%rax
            jmpq %rax
.L_40cd27:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-24(%rbp)
            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            leaq -16(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq group_match_null_string_p
.L_40cd50:
            movb %al,-25(%rbp)
            movl -24(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -56(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $3,%eax
            cmpb $3,%al
            jne .L_40cd9b
.L_40cd71:
            movl -24(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -56(%rbp),%rax
            addq %rdx,%rax
            movzbl -25(%rbp),%edx
            andl $3,%edx
            movl %edx,%ecx
            andl $3,%ecx
            movzbl (%rax),%edx
            andl $4294967292,%edx
            orl %ecx,%edx
            movb %dl,(%rax)
.L_40cd9b:

            cmpb $0,-25(%rbp)
            jne .L_40ced2
.L_40cda5:
            movl $0,%eax
            jmp .L_40cee6
.L_40cdaf:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            cmpl $0,-20(%rbp)
            js .L_40cdf7
.L_40cde2:
            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            jmp .L_40ced6
.L_40cdf7:

            movl $0,%eax
            jmp .L_40cee6
.L_40ce01:

            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            cmpl $0,-20(%rbp)
            jne .L_40ce8b
.L_40ce40:
            movq -16(%rbp),%rax
            subq $4,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            shll $8,%eax
            addl %eax,-20(%rbp)
            movq -16(%rbp),%rax
            addq $2,%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rdx
            movl -20(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movq %rax,-16(%rbp)
            jmp .L_40ced6
.L_40ce8b:

            movl $0,%eax
            jmp .L_40cee6
.L_40ce92:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -56(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            andl $3,%eax
            testb %al,%al
            jne .L_40ced5
.L_40ceb5:
            movl $0,%eax
            jmp .L_40cee6
.L_40cebc:

            movq -16(%rbp),%rax
            addq $4,%rax
            movq %rax,-16(%rbp)
.L_40cec8:

            movl $0,%eax
            jmp .L_40cee6
.L_40cecf:

            nop
            jmp .L_40ced6
.L_40ced2:

            nop
            jmp .L_40ced6
.L_40ced5:

            nop
.L_40ced6:

            movq -16(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rdx,(%rax)
            movl $1,%eax
.L_40cee6:

            movq -8(%rbp),%rsi
            xorq %fs:40,%rsi
            je .L_40cefa
.L_40cef5:
            callq __stack_chk_fail@PLT
.L_40cefa:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl bcmp_translate
.type bcmp_translate, @function
bcmp_translate:
#-----------------------------------
# END   - Function Header

bcmp_translate:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl %edx,%eax
            movq %rcx,-40(%rbp)
            movq -24(%rbp),%rbx
            movq -32(%rbp),%r12
            jmp .L_40cf57
.L_40cf1b:

            movq %rbx,%rdx
            leaq 1(%rdx),%rbx
            movzbl (%rdx),%edx
            movzbl %dl,%ecx
            movq -40(%rbp),%rdx
            addq %rcx,%rdx
            movzbl (%rdx),%ecx
            movq %r12,%rdx
            leaq 1(%rdx),%r12
            movzbl (%rdx),%edx
            movzbl %dl,%esi
            movq -40(%rbp),%rdx
            addq %rsi,%rdx
            movzbl (%rdx),%edx
            cmpb %dl,%cl
            je .L_40cf54
.L_40cf4d:
            movl $1,%eax
            jmp .L_40cf60
.L_40cf54:

            subl $1,%eax
.L_40cf57:

            testl %eax,%eax
            jne .L_40cf1b
.L_40cf5b:
            movl $0,%eax
.L_40cf60:

            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl re_compile_pattern
.type re_compile_pattern, @function
re_compile_pattern:
#-----------------------------------
# END   - Function Header

re_compile_pattern:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-24(%rbp)
            movl %esi,-28(%rbp)
            movq %rdx,-40(%rbp)
            movq -40(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967289,%edx
            movb %dl,56(%rax)
            movq -40(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967279,%edx
            movb %dl,56(%rax)
            movq -40(%rbp),%rax
            movzbl 56(%rax),%edx
            orl $4294967168,%edx
            movb %dl,56(%rax)
            movl re_syntax_options(%rip),%edx
            movq -40(%rbp),%rcx
            movl -28(%rbp),%esi
            movq -24(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq regex_compile
.L_40cfc0:
            movl %eax,-4(%rbp)
            movl -4(%rbp),%eax
            cltq 
            movq re_error_msg(,%rax,8),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl regcomp
.type regcomp, @function
regcomp:
#-----------------------------------
# END   - Function Header

regcomp:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $56,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movl %edx,-52(%rbp)
            movl -52(%rbp),%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_40cff7
.L_40cff0:
            movl $242396,%eax
            jmp .L_40cffc
.L_40cff7:

            movl $66246,%eax
.L_40cffc:

            movl %eax,-24(%rbp)
            movq -40(%rbp),%rax
            movq $0,(%rax)
            movq -40(%rbp),%rax
            movq $0,8(%rax)
            movq -40(%rbp),%rax
            movq $0,16(%rax)
            movq -40(%rbp),%rax
            movq $0,32(%rax)
            movl -52(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            je .L_40d0c3
.L_40d03c:
            movl $256,%edi
            callq malloc@PLT
.L_40d046:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,40(%rax)
            movq -40(%rbp),%rax
            movq 40(%rax),%rax
            testq %rax,%rax
            jne .L_40d068
.L_40d05e:
            movl $12,%eax
            jmp .L_40d15f
.L_40d068:

            movl $0,-20(%rbp)
            jmp .L_40d0b8
.L_40d071:

            movq -40(%rbp),%rax
            movq 40(%rax),%rdx
            movl -20(%rbp),%eax
            leaq (%rdx,%rax),%rbx
            callq __ctype_b_loc@PLT
.L_40d085:
            movq (%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_40d0af
.L_40d0a3:
            movl -20(%rbp),%eax
            movl %eax,%edi
            callq tolower@PLT
.L_40d0ad:
            jmp .L_40d0b2
.L_40d0af:

            movl -20(%rbp),%eax
.L_40d0b2:

            movb %al,(%rbx)
            addl $1,-20(%rbp)
.L_40d0b8:

            cmpl $255,-20(%rbp)
            jbe .L_40d071
.L_40d0c1:
            jmp .L_40d0cf
.L_40d0c3:

            movq -40(%rbp),%rax
            movq $0,40(%rax)
.L_40d0cf:

            movl -52(%rbp),%eax
            andl $4,%eax
            testl %eax,%eax
            je .L_40d0f4
.L_40d0d9:
            andl $4294967231,-24(%rbp)
            orl $256,-24(%rbp)
            movq -40(%rbp),%rax
            movzbl 56(%rax),%edx
            orl $4294967168,%edx
            movb %dl,56(%rax)
            jmp .L_40d102
.L_40d0f4:

            movq -40(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $127,%edx
            movb %dl,56(%rax)
.L_40d102:

            movl -52(%rbp),%eax
            andl $8,%eax
            testl %eax,%eax
            setne %dl
            movq -40(%rbp),%rax
            andl $1,%edx
            movl %edx,%ecx
            shll $4,%ecx
            movzbl 56(%rax),%edx
            andl $4294967279,%edx
            orl %ecx,%edx
            movb %dl,56(%rax)
            movq -48(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40d131:
            movq %rax,%rsi
            movq -40(%rbp),%rcx
            movl -24(%rbp),%edx
            movq -48(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq regex_compile
.L_40d14c:
            movl %eax,-28(%rbp)
            cmpl $16,-28(%rbp)
            jne .L_40d15c
.L_40d155:
            movl $8,-28(%rbp)
.L_40d15c:

            movl -28(%rbp),%eax
.L_40d15f:

            addq $56,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl regexec
.type regexec, @function
regexec:
#-----------------------------------
# END   - Function Header

regexec:

            pushq %rbp
            movq %rsp,%rbp
            subq $176,%rsp
            movq %rdi,-136(%rbp)
            movq %rsi,-144(%rbp)
            movq %rdx,-152(%rbp)
            movq %rcx,-160(%rbp)
            movl %r8d,-164(%rbp)
            movq %fs:40,%rax
            movq %rax,-8(%rbp)
            xorl %eax,%eax
            movq -144(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40d1b2:
            movl %eax,-120(%rbp)
            movq -136(%rbp),%rax
            movzbl 56(%rax),%eax
            andl $16,%eax
            testb %al,%al
            jne .L_40d1d8
.L_40d1c7:
            cmpq $0,-152(%rbp)
            je .L_40d1d8
.L_40d1d1:
            movl $1,%eax
            jmp .L_40d1dd
.L_40d1d8:

            movl $0,%eax
.L_40d1dd:

            movb %al,-125(%rbp)
            movq -136(%rbp),%rax
            movq (%rax),%rdx
            movq %rdx,-80(%rbp)
            movq 8(%rax),%rdx
            movq %rdx,-72(%rbp)
            movq 16(%rax),%rdx
            movq %rdx,-64(%rbp)
            movq 24(%rax),%rdx
            movq %rdx,-56(%rbp)
            movq 32(%rax),%rdx
            movq %rdx,-48(%rbp)
            movq 40(%rax),%rdx
            movq %rdx,-40(%rbp)
            movq 48(%rax),%rdx
            movq %rdx,-32(%rbp)
            movq 56(%rax),%rax
            movq %rax,-24(%rbp)
            movl -164(%rbp),%eax
            andl $1,%eax
            testl %eax,%eax
            setne %al
            andl $1,%eax
            shll $5,%eax
            movl %eax,%edx
            movzbl -24(%rbp),%eax
            andl $4294967263,%eax
            orl %edx,%eax
            movb %al,-24(%rbp)
            movl -164(%rbp),%eax
            andl $2,%eax
            testl %eax,%eax
            setne %al
            andl $1,%eax
            shll $6,%eax
            movl %eax,%edx
            movzbl -24(%rbp),%eax
            andl $4294967231,%eax
            orl %edx,%eax
            movb %al,-24(%rbp)
            movzbl -24(%rbp),%eax
            andl $4294967289,%eax
            orl $4,%eax
            movb %al,-24(%rbp)
            cmpb $0,-125(%rbp)
            je .L_40d2d1
.L_40d27d:
            movq -152(%rbp),%rax
            movl %eax,-112(%rbp)
            movq -152(%rbp),%rax
            shlq $2,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_40d29a:
            movq %rax,-104(%rbp)
            movq -152(%rbp),%rax
            shlq $2,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_40d2b1:
            movq %rax,-96(%rbp)
            movq -104(%rbp),%rax
            testq %rax,%rax
            je .L_40d2c7
.L_40d2be:
            movq -96(%rbp),%rax
            testq %rax,%rax
            jne .L_40d2d1
.L_40d2c7:

            movl $1,%eax
            jmp .L_40d3a2
.L_40d2d1:

            cmpb $0,-125(%rbp)
            je .L_40d2dd
.L_40d2d7:
            leaq -112(%rbp),%rcx
            jmp .L_40d2e2
.L_40d2dd:

            movl $0,%ecx
.L_40d2e2:

            movl -120(%rbp),%edi
            movl -120(%rbp),%edx
            movq -144(%rbp),%rsi
            leaq -80(%rbp),%rax
            movq %rcx,%r9
            movl %edi,%r8d
            movl $0,%ecx
            movq %rax,%rdi
            callq re_search
.L_40d306:
            movl %eax,-116(%rbp)
            cmpb $0,-125(%rbp)
            je .L_40d399
.L_40d313:
            cmpl $0,-116(%rbp)
            js .L_40d381
.L_40d319:
            movl $0,-124(%rbp)
            jmp .L_40d375
.L_40d322:

            movl -124(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -160(%rbp),%rax
            addq %rax,%rdx
            movq -104(%rbp),%rax
            movl -124(%rbp),%ecx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,(%rdx)
            movl -124(%rbp),%eax
            leaq (,%rax,8),%rdx
            movq -160(%rbp),%rax
            addq %rax,%rdx
            movq -96(%rbp),%rax
            movl -124(%rbp),%ecx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,4(%rdx)
            addl $1,-124(%rbp)
.L_40d375:

            movl -124(%rbp),%eax
            cmpq -152(%rbp),%rax
            jb .L_40d322
.L_40d381:

            movq -104(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40d38d:
            movq -96(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40d399:

            movl -116(%rbp),%eax
            shrl $31,%eax
            movzbl %al,%eax
.L_40d3a2:

            movq -8(%rbp),%rsi
            xorq %fs:40,%rsi
            je .L_40d3b6
.L_40d3b1:
            callq __stack_chk_fail@PLT
.L_40d3b6:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl regerror
.type regerror, @function
regerror:
#-----------------------------------
# END   - Function Header

regerror:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movl %edi,-20(%rbp)
            movq %rsi,-32(%rbp)
            movq %rdx,-40(%rbp)
            movq %rcx,-48(%rbp)
            cmpl $0,-20(%rbp)
            js .L_40d3dd
.L_40d3d5:
            movl -20(%rbp),%eax
            cmpl $16,%eax
            jbe .L_40d3e2
.L_40d3dd:

            callq abort@PLT
.L_40d3e2:

            movl -20(%rbp),%eax
            cltq 
            movq re_error_msg(,%rax,8),%rax
            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            jne .L_40d402
.L_40d3fa:
            movq $.L_4178e8,-16(%rbp)
.L_40d402:

            movq -16(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40d40e:
            addq $1,%rax
            movq %rax,-8(%rbp)
            cmpq $0,-48(%rbp)
            je .L_40d469
.L_40d41d:
            movq -8(%rbp),%rax
            cmpq -48(%rbp),%rax
            jbe .L_40d456
.L_40d427:
            movq -48(%rbp),%rax
            leaq -1(%rax),%rdx
            movq -16(%rbp),%rcx
            movq -40(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq strncpy@PLT
.L_40d442:
            movq -48(%rbp),%rax
            leaq -1(%rax),%rdx
            movq -40(%rbp),%rax
            addq %rdx,%rax
            movb $0,(%rax)
            jmp .L_40d469
.L_40d456:

            movq -16(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq strcpy@PLT
.L_40d469:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl regfree
.type regfree, @function
regfree:
#-----------------------------------
# END   - Function Header

regfree:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_40d496
.L_40d487:
            movq -8(%rbp),%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40d496:

            movq -8(%rbp),%rax
            movq $0,(%rax)
            movq -8(%rbp),%rax
            movq $0,8(%rax)
            movq -8(%rbp),%rax
            movq $0,16(%rax)
            movq -8(%rbp),%rax
            movq 32(%rax),%rax
            testq %rax,%rax
            je .L_40d4d6
.L_40d4c6:
            movq -8(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40d4d6:

            movq -8(%rbp),%rax
            movq $0,32(%rax)
            movq -8(%rbp),%rax
            movzbl 56(%rax),%edx
            andl $4294967287,%edx
            movb %dl,56(%rax)
            movq -8(%rbp),%rax
            movq 40(%rax),%rax
            testq %rax,%rax
            je .L_40d50d
.L_40d4fd:
            movq -8(%rbp),%rax
            movq 40(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40d50d:

            movq -8(%rbp),%rax
            movq $0,40(%rax)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl xcalloc
.type xcalloc, @function
xcalloc:
#-----------------------------------
# END   - Function Header

xcalloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movl %edi,-20(%rbp)
            movq %rsi,-32(%rbp)
            movl -20(%rbp),%eax
            cltq 
            movq -32(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            callq calloc@PLT
.L_40d53f:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            jne .L_40d554
.L_40d54a:
            movl $.L_416f0a,%edi
            callq dfaerror
.L_40d554:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl xmalloc_1
.type xmalloc_1, @function
xmalloc_1:
#-----------------------------------
# END   - Function Header

xmalloc_1:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_40d572:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            jne .L_40d587
.L_40d57d:
            movl $.L_416f0a,%edi
            callq dfaerror
.L_40d587:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl xrealloc_1
.type xrealloc_1, @function
xrealloc_1:
#-----------------------------------
# END   - Function Header

xrealloc_1:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movq -32(%rbp),%rdx
            movq -24(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_40d5b0:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            jne .L_40d5c5
.L_40d5bb:
            movl $.L_416f0a,%edi
            callq dfaerror
.L_40d5c5:

            movq -8(%rbp),%rax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl tstbit
.type tstbit, @function
tstbit:
#-----------------------------------
# END   - Function Header

tstbit:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movq %rsi,-16(%rbp)
            movl -4(%rbp),%eax
            cltq 
            shrq $5,%rax
            leaq (,%rax,4),%rdx
            movq -16(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            movl -4(%rbp),%edx
            andl $31,%edx
            movl $1,%esi
            movl %edx,%ecx
            shll %cl,%esi
            movl %esi,%edx
            andl %edx,%eax
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl setbit
.type setbit, @function
setbit:
#-----------------------------------
# END   - Function Header

setbit:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movq %rsi,-16(%rbp)
            movl -4(%rbp),%eax
            cltq 
            shrq $5,%rax
            leaq (,%rax,4),%rcx
            movq -16(%rbp),%rdx
            addq %rcx,%rdx
            leaq (,%rax,4),%rcx
            movq -16(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl -4(%rbp),%ecx
            andl $31,%ecx
            movl $1,%esi
            shll %cl,%esi
            movl %esi,%ecx
            orl %ecx,%eax
            movl %eax,(%rdx)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl clrbit
.type clrbit, @function
clrbit:
#-----------------------------------
# END   - Function Header

clrbit:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movq %rsi,-16(%rbp)
            movl -4(%rbp),%eax
            cltq 
            shrq $5,%rax
            leaq (,%rax,4),%rcx
            movq -16(%rbp),%rdx
            addq %rcx,%rdx
            leaq (,%rax,4),%rcx
            movq -16(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl -4(%rbp),%ecx
            andl $31,%ecx
            movl $1,%esi
            shll %cl,%esi
            movl %esi,%ecx
            notl %ecx
            andl %ecx,%eax
            movl %eax,(%rdx)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl copyset
.type copyset, @function
copyset:
#-----------------------------------
# END   - Function Header

copyset:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40d6e0
.L_40d6b0:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -32(%rbp),%rax
            addq %rax,%rdx
            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rcx
            movq -24(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,(%rdx)
            addl $1,-4(%rbp)
.L_40d6e0:

            movl -4(%rbp),%eax
            cmpl $7,%eax
            jbe .L_40d6b0
.L_40d6e8:
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl zeroset
.type zeroset, @function
zeroset:
#-----------------------------------
# END   - Function Header

zeroset:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40d71a
.L_40d6fc:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movl $0,(%rax)
            addl $1,-4(%rbp)
.L_40d71a:

            movl -4(%rbp),%eax
            cmpl $7,%eax
            jbe .L_40d6fc
.L_40d722:
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl notset
.type notset, @function
notset:
#-----------------------------------
# END   - Function Header

notset:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40d769
.L_40d736:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,4),%rcx
            movq -24(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            notl %edx
            movl %edx,(%rax)
            addl $1,-4(%rbp)
.L_40d769:

            movl -4(%rbp),%eax
            cmpl $7,%eax
            jbe .L_40d736
.L_40d771:
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl equal
.type equal, @function
equal:
#-----------------------------------
# END   - Function Header

equal:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40d7c4
.L_40d789:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%edx
            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rcx
            movq -32(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            je .L_40d7c0
.L_40d7b9:
            movl $0,%eax
            jmp .L_40d7d1
.L_40d7c0:

            addl $1,-4(%rbp)
.L_40d7c4:

            movl -4(%rbp),%eax
            cmpl $7,%eax
            jbe .L_40d789
.L_40d7cc:
            movl $1,%eax
.L_40d7d1:

            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl charclass_index
.type charclass_index, @function
charclass_index:
#-----------------------------------
# END   - Function Header

charclass_index:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $40,%rsp
            movq %rdi,-40(%rbp)
            movl $0,-20(%rbp)
            jmp .L_40d824
.L_40d7e9:

            movq dfa(%rip),%rax
            movq (%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq equal
.L_40d814:
            testl %eax,%eax
            je .L_40d820
.L_40d818:
            movl -20(%rbp),%eax
            jmp .L_40d8f0
.L_40d820:

            addl $1,-20(%rbp)
.L_40d824:

            movq dfa(%rip),%rax
            movl 8(%rax),%eax
            cmpl -20(%rbp),%eax
            jg .L_40d7e9
.L_40d833:
            movq dfa(%rip),%rax
            movl 8(%rax),%edx
            movq dfa(%rip),%rax
            movl 12(%rax),%eax
            cmpl %eax,%edx
            jl .L_40d8b2
.L_40d84b:
            jmp .L_40d863
.L_40d84d:

            movq dfa(%rip),%rax
            movq dfa(%rip),%rdx
            movl 12(%rdx),%edx
            addl %edx,%edx
            movl %edx,12(%rax)
.L_40d863:

            movq dfa(%rip),%rax
            movl 8(%rax),%edx
            movq dfa(%rip),%rax
            movl 12(%rax),%eax
            cmpl %eax,%edx
            jge .L_40d84d
.L_40d87b:
            movq dfa(%rip),%rbx
            movq dfa(%rip),%rax
            movl 12(%rax),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq dfa(%rip),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_40d8af:
            movq %rax,(%rbx)
.L_40d8b2:

            movq dfa(%rip),%rax
            movl 8(%rax),%edx
            addl $1,%edx
            movl %edx,8(%rax)
            movq dfa(%rip),%rax
            movq (%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copyset
.L_40d8ed:
            movl -20(%rbp),%eax
.L_40d8f0:

            addq $40,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfasyntax
.type dfasyntax, @function
dfasyntax:
#-----------------------------------
# END   - Function Header

dfasyntax:

            pushq %rbp
            movq %rsp,%rbp
            movl %edi,-4(%rbp)
            movl %esi,-8(%rbp)
            movl $1,syntax_bits_set(%rip)
            movl -4(%rbp),%eax
            movl %eax,syntax_bits(%rip)
            movl -8(%rbp),%eax
            movl %eax,case_fold(%rip)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl is_alpha
.type is_alpha, @function
is_alpha:
#-----------------------------------
# END   - Function Header

is_alpha:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40d930:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $1024,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl is_upper
.type is_upper, @function
is_upper:
#-----------------------------------
# END   - Function Header

is_upper:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40d964:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl is_lower
.type is_lower, @function
is_lower:
#-----------------------------------
# END   - Function Header

is_lower:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40d998:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $512,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl is_digit
.type is_digit, @function
is_digit:
#-----------------------------------
# END   - Function Header

is_digit:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40d9cc:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl is_xdigit
.type is_xdigit, @function
is_xdigit:
#-----------------------------------
# END   - Function Header

is_xdigit:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40da00:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $4096,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl is_space
.type is_space, @function
is_space:
#-----------------------------------
# END   - Function Header

is_space:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40da34:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8192,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl is_punct
.type is_punct, @function
is_punct:
#-----------------------------------
# END   - Function Header

is_punct:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40da68:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $4,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl is_alnum
.type is_alnum, @function
is_alnum:
#-----------------------------------
# END   - Function Header

is_alnum:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40da9a:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl is_print
.type is_print, @function
is_print:
#-----------------------------------
# END   - Function Header

is_print:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40dacc:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $16384,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl is_graph
.type is_graph, @function
is_graph:
#-----------------------------------
# END   - Function Header

is_graph:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40db00:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            shrw $15,%ax
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl is_cntrl
.type is_cntrl, @function
is_cntrl:
#-----------------------------------
# END   - Function Header

is_cntrl:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            callq __ctype_b_loc@PLT
.L_40db2b:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl looking_at
.type looking_at, @function
looking_at:
#-----------------------------------
# END   - Function Header

looking_at:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40db65:
            movl %eax,-4(%rbp)
            movl lexleft(%rip),%eax
            cmpl -4(%rbp),%eax
            jge .L_40db7a
.L_40db73:
            movl $0,%eax
            jmp .L_40db9e
.L_40db7a:

            movl -4(%rbp),%eax
            movslq %eax,%rdx
            movq lexptr(%rip),%rcx
            movq -24(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq strncmp@PLT
.L_40db96:
            testl %eax,%eax
            sete %al
            movzbl %al,%eax
.L_40db9e:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl lex
.type lex, @function
lex:
#-----------------------------------
# END   - Function Header

lex:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $88,%rsp
            movq %fs:40,%rax
            movq %rax,-24(%rbp)
            xorl %eax,%eax
            movl $0,-76(%rbp)
            movl $0,-68(%rbp)
            jmp .L_40eb00
.L_40dbcb:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40dbdf
.L_40dbd5:
            movl $4294967295,%eax
            jmp .L_40eb0f
.L_40dbdf:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            movl -88(%rbp),%eax
            subl $10,%eax
            cmpl $114,%eax
            ja .L_40ea0a
.L_40dc18:
            movl %eax,%eax
            movq .L_4179a8(,%rax,8),%rax
            jmpq %rax
.L_40dc24:

            cmpl $0,-76(%rbp)
            jne .L_40e9b8
.L_40dc2e:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40dc42
.L_40dc38:
            movl $.L_417954,%edi
            callq dfaerror
.L_40dc42:

            movl $1,-76(%rbp)
            jmp .L_40eafc
.L_40dc4e:

            cmpl $0,-76(%rbp)
            jne .L_40e9bb
.L_40dc58:
            movl syntax_bits(%rip),%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_40dc8e
.L_40dc65:
            movl lasttok(%rip),%eax
            cmpl $-1,%eax
            je .L_40dc8e
.L_40dc70:
            movl lasttok(%rip),%eax
            cmpl $271,%eax
            je .L_40dc8e
.L_40dc7d:
            movl lasttok(%rip),%eax
            cmpl $269,%eax
            jne .L_40e9be
.L_40dc8e:

            movl $258,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40dca3:

            cmpl $0,-76(%rbp)
            jne .L_40e9c1
.L_40dcad:
            movl syntax_bits(%rip),%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_40ddfb
.L_40dcbe:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            je .L_40ddfb
.L_40dccc:
            movl syntax_bits(%rip),%eax
            andl $8192,%eax
            testl %eax,%eax
            je .L_40dd0c
.L_40dcdb:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jle .L_40dcfa
.L_40dce5:
            movq lexptr(%rip),%rax
            movzbl (%rax),%eax
            cmpb $41,%al
            jne .L_40dcfa
.L_40dcf3:
            movl $1,%eax
            jmp .L_40dcff
.L_40dcfa:

            movl $0,%eax
.L_40dcff:

            andl $1,%eax
            testb %al,%al
            jne .L_40ddfb
.L_40dd0a:
            jmp .L_40dd4e
.L_40dd0c:

            movl lexleft(%rip),%eax
            cmpl $1,%eax
            jle .L_40dd3e
.L_40dd17:
            movq lexptr(%rip),%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_40dd3e
.L_40dd25:
            movq lexptr(%rip),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $41,%al
            jne .L_40dd3e
.L_40dd37:
            movl $1,%eax
            jmp .L_40dd43
.L_40dd3e:

            movl $0,%eax
.L_40dd43:

            andl $1,%eax
            testb %al,%al
            jne .L_40ddfb
.L_40dd4e:

            movl syntax_bits(%rip),%eax
            andl $32768,%eax
            testl %eax,%eax
            je .L_40dd8a
.L_40dd5d:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jle .L_40dd7c
.L_40dd67:
            movq lexptr(%rip),%rax
            movzbl (%rax),%eax
            cmpb $124,%al
            jne .L_40dd7c
.L_40dd75:
            movl $1,%eax
            jmp .L_40dd81
.L_40dd7c:

            movl $0,%eax
.L_40dd81:

            andl $1,%eax
            testb %al,%al
            jne .L_40ddfb
.L_40dd88:
            jmp .L_40ddc8
.L_40dd8a:

            movl lexleft(%rip),%eax
            cmpl $1,%eax
            jle .L_40ddbc
.L_40dd95:
            movq lexptr(%rip),%rax
            movzbl (%rax),%eax
            cmpb $92,%al
            jne .L_40ddbc
.L_40dda3:
            movq lexptr(%rip),%rax
            addq $1,%rax
            movzbl (%rax),%eax
            cmpb $124,%al
            jne .L_40ddbc
.L_40ddb5:
            movl $1,%eax
            jmp .L_40ddc1
.L_40ddbc:

            movl $0,%eax
.L_40ddc1:

            andl $1,%eax
            testb %al,%al
            jne .L_40ddfb
.L_40ddc8:

            movl syntax_bits(%rip),%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_40e9c4
.L_40dddb:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jle .L_40e9c4
.L_40dde9:
            movq lexptr(%rip),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_40e9c4
.L_40ddfb:

            movl $259,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40de10:

            cmpl $0,-76(%rbp)
            je .L_40e9c7
.L_40de1a:
            movl syntax_bits(%rip),%eax
            andl $16384,%eax
            testl %eax,%eax
            jne .L_40e9c7
.L_40de2d:
            movl $0,laststart(%rip)
            movl $257,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40de4c:

            cmpl $0,-76(%rbp)
            je .L_40e9ca
.L_40de56:
            movl $260,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40de6b:

            cmpl $0,-76(%rbp)
            je .L_40e9cd
.L_40de75:
            movl $261,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40de8a:

            cmpl $0,-76(%rbp)
            je .L_40e9d0
.L_40de94:
            movl $262,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40dea9:

            cmpl $0,-76(%rbp)
            je .L_40e9d3
.L_40deb3:
            movl $263,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40dec8:

            movl syntax_bits(%rip),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_40e9d6
.L_40dedb:
            movl syntax_bits(%rip),%eax
            andl $2,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9d9
.L_40def5:
            movl syntax_bits(%rip),%eax
            andl $16,%eax
            testl %eax,%eax
            jne .L_40df10
.L_40df02:
            movl laststart(%rip),%eax
            testl %eax,%eax
            jne .L_40e9dc
.L_40df10:

            movl $264,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40df25:

            cmpl $0,-76(%rbp)
            jne .L_40e9df
.L_40df2f:
            movl syntax_bits(%rip),%eax
            andl $16,%eax
            testl %eax,%eax
            jne .L_40df4a
.L_40df3c:
            movl laststart(%rip),%eax
            testl %eax,%eax
            jne .L_40e9e2
.L_40df4a:

            movl $265,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40df5f:

            movl syntax_bits(%rip),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_40e9e5
.L_40df72:
            movl syntax_bits(%rip),%eax
            andl $2,%eax
            testl %eax,%eax
            setne %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9e8
.L_40df8c:
            movl syntax_bits(%rip),%eax
            andl $16,%eax
            testl %eax,%eax
            jne .L_40dfa7
.L_40df99:
            movl laststart(%rip),%eax
            testl %eax,%eax
            jne .L_40e9eb
.L_40dfa7:

            movl $266,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40dfbc:

            movl syntax_bits(%rip),%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_40e9ee
.L_40dfcf:
            movl syntax_bits(%rip),%eax
            andl $4096,%eax
            testl %eax,%eax
            sete %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9f1
.L_40dfeb:
            movl $0,maxrep(%rip)
            movl maxrep(%rip),%eax
            movl %eax,minrep(%rip)
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e015
.L_40e00b:
            movl $.L_417968,%edi
            callq dfaerror
.L_40e015:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            callq __ctype_b_loc@PLT
.L_40e044:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_40e0f7
.L_40e066:
            movl -88(%rbp),%eax
            subl $48,%eax
            movl %eax,minrep(%rip)
.L_40e072:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e086
.L_40e07c:
            movl $.L_417968,%edi
            callq dfaerror
.L_40e086:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            callq __ctype_b_loc@PLT
.L_40e0b5:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_40e109
.L_40e0d3:
            movl minrep(%rip),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movl -88(%rbp),%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,minrep(%rip)
            jmp .L_40e072
.L_40e0f7:

            cmpl $44,-88(%rbp)
            je .L_40e10a
.L_40e0fd:
            movl $.L_417980,%edi
            callq dfaerror
.L_40e107:
            jmp .L_40e10a
.L_40e109:

            nop
.L_40e10a:

            cmpl $44,-88(%rbp)
            jne .L_40e199
.L_40e114:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e128
.L_40e11e:
            movl $.L_417968,%edi
            callq dfaerror
.L_40e128:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            callq __ctype_b_loc@PLT
.L_40e157:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_40e1a7
.L_40e175:
            movl maxrep(%rip),%edx
            movl %edx,%eax
            shll $2,%eax
            addl %edx,%eax
            addl %eax,%eax
            movl %eax,%edx
            movl -88(%rbp),%eax
            addl %edx,%eax
            subl $48,%eax
            movl %eax,maxrep(%rip)
            jmp .L_40e114
.L_40e199:

            movl minrep(%rip),%eax
            movl %eax,maxrep(%rip)
            jmp .L_40e1a8
.L_40e1a7:

            nop
.L_40e1a8:

            movl syntax_bits(%rip),%eax
            andl $4096,%eax
            testl %eax,%eax
            jne .L_40e205
.L_40e1b7:
            cmpl $92,-88(%rbp)
            je .L_40e1c7
.L_40e1bd:
            movl $.L_417980,%edi
            callq dfaerror
.L_40e1c7:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e1db
.L_40e1d1:
            movl $.L_417968,%edi
            callq dfaerror
.L_40e1db:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
.L_40e205:

            cmpl $125,-88(%rbp)
            je .L_40e215
.L_40e20b:
            movl $.L_417980,%edi
            callq dfaerror
.L_40e215:

            movl $0,laststart(%rip)
            movl $267,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e234:

            movl syntax_bits(%rip),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_40e9f4
.L_40e247:
            movl syntax_bits(%rip),%eax
            andl $32768,%eax
            testl %eax,%eax
            sete %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9f7
.L_40e263:
            movl $1,laststart(%rip)
            movl $269,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e282:

            movl syntax_bits(%rip),%eax
            andl $1024,%eax
            testl %eax,%eax
            jne .L_40ea0a
.L_40e295:
            cmpl $0,-76(%rbp)
            jne .L_40ea0a
.L_40e29f:
            movl syntax_bits(%rip),%eax
            andl $2048,%eax
            testl %eax,%eax
            je .L_40ea0a
.L_40e2b2:
            movl $1,laststart(%rip)
            movl $269,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e2d1:

            movl syntax_bits(%rip),%eax
            andl $8192,%eax
            testl %eax,%eax
            sete %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9fa
.L_40e2ed:
            movl parens(%rip),%eax
            addl $1,%eax
            movl %eax,parens(%rip)
            movl $1,laststart(%rip)
            movl $271,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e31b:

            movl syntax_bits(%rip),%eax
            andl $8192,%eax
            testl %eax,%eax
            sete %al
            movzbl %al,%eax
            cmpl -76(%rbp),%eax
            jne .L_40e9fd
.L_40e337:
            movl parens(%rip),%eax
            testl %eax,%eax
            jne .L_40e354
.L_40e341:
            movl syntax_bits(%rip),%eax
            andl $131072,%eax
            testl %eax,%eax
            jne .L_40ea00
.L_40e354:

            movl parens(%rip),%eax
            subl $1,%eax
            movl %eax,parens(%rip)
            movl $0,laststart(%rip)
            movl $272,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e382:

            cmpl $0,-76(%rbp)
            jne .L_40ea03
.L_40e38c:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_40e39d:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq notset
.L_40e3ae:
            movl syntax_bits(%rip),%eax
            andl $64,%eax
            testl %eax,%eax
            jne .L_40e3d1
.L_40e3bb:
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl $10,%edi
            movl $0,%eax
            callq clrbit
.L_40e3d1:

            movl syntax_bits(%rip),%eax
            andl $128,%eax
            testl %eax,%eax
            je .L_40e3f6
.L_40e3e0:
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl $0,%edi
            movl $0,%eax
            callq clrbit
.L_40e3f6:

            movl $0,laststart(%rip)
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq charclass_index
.L_40e411:
            addl $273,%eax
            movl %eax,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e427:

            cmpl $0,-76(%rbp)
            je .L_40ea06
.L_40e431:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_40e442:
            movl $0,-80(%rbp)
            jmp .L_40e486
.L_40e44b:

            callq __ctype_b_loc@PLT
.L_40e450:
            movq (%rax),%rax
            movl -80(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            je .L_40e482
.L_40e46c:
            leaq -64(%rbp),%rdx
            movl -80(%rbp),%eax
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_40e482:

            addl $1,-80(%rbp)
.L_40e486:

            cmpl $255,-80(%rbp)
            jle .L_40e44b
.L_40e48f:
            cmpl $87,-88(%rbp)
            jne .L_40e4a6
.L_40e495:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq notset
.L_40e4a6:

            movl $0,laststart(%rip)
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq charclass_index
.L_40e4c1:
            addl $273,%eax
            movl %eax,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e4d7:

            cmpl $0,-76(%rbp)
            jne .L_40ea09
.L_40e4e1:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_40e4f2:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e506
.L_40e4fc:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e506:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            cmpl $94,-88(%rbp)
            jne .L_40e57d
.L_40e536:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e54a
.L_40e540:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e54a:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            movl $1,-72(%rbp)
            jmp .L_40e584
.L_40e57d:

            movl $0,-72(%rbp)
.L_40e584:

            cmpl $91,-88(%rbp)
            jne .L_40e6d9
.L_40e58e:
            movl syntax_bits(%rip),%eax
            andl $4,%eax
            testl %eax,%eax
            je .L_40e6d9
.L_40e59f:
            movl $0,-84(%rbp)
            jmp .L_40e6be
.L_40e5ab:

            movl -84(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq $prednames,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq looking_at
.L_40e5ca:
            testl %eax,%eax
            je .L_40e6ba
.L_40e5d2:
            movl $0,-80(%rbp)
            jmp .L_40e617
.L_40e5db:

            movl -84(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq $prednames+8,%rax
            movq (%rax),%rdx
            movl -80(%rbp),%eax
            movl %eax,%edi
            movl $0,%eax
            callq *%rdx
.L_40e5f9:
            testl %eax,%eax
            je .L_40e613
.L_40e5fd:
            leaq -64(%rbp),%rdx
            movl -80(%rbp),%eax
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_40e613:

            addl $1,-80(%rbp)
.L_40e617:

            cmpl $255,-80(%rbp)
            jle .L_40e5db
.L_40e620:
            movq lexptr(%rip),%rbx
            movl -84(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq $prednames,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40e641:
            addq %rbx,%rax
            movq %rax,lexptr(%rip)
            movl lexleft(%rip),%eax
            movl %eax,%ebx
            movl -84(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq $prednames,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_40e66d:
            subl %eax,%ebx
            movl %ebx,%eax
            movl %eax,lexleft(%rip)
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e68b
.L_40e681:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e68b:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-84(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            jmp .L_40e93b
.L_40e6ba:

            addl $1,-84(%rbp)
.L_40e6be:

            movl -84(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq $prednames,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_40e5ab
.L_40e6d9:

            cmpl $92,-88(%rbp)
            jne .L_40e72a
.L_40e6df:
            movl syntax_bits(%rip),%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_40e72a
.L_40e6ec:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e700
.L_40e6f6:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e700:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-88(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
.L_40e72a:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e73e
.L_40e734:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e73e:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-84(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            cmpl $45,-84(%rbp)
            jne .L_40e876
.L_40e772:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e786
.L_40e77c:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e786:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-80(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            cmpl $93,-80(%rbp)
            jne .L_40e7e2
.L_40e7b6:
            movq lexptr(%rip),%rax
            subq $1,%rax
            movq %rax,lexptr(%rip)
            movl lexleft(%rip),%eax
            addl $1,%eax
            movl %eax,lexleft(%rip)
            movl -88(%rbp),%eax
            movl %eax,-80(%rbp)
            jmp .L_40e92f
.L_40e7e2:

            cmpl $92,-80(%rbp)
            jne .L_40e833
.L_40e7e8:
            movl syntax_bits(%rip),%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_40e833
.L_40e7f5:
            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e809
.L_40e7ff:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e809:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-80(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
.L_40e833:

            movl lexleft(%rip),%eax
            testl %eax,%eax
            jne .L_40e847
.L_40e83d:
            movl $.L_417997,%edi
            callq dfaerror
.L_40e847:

            movq lexptr(%rip),%rax
            leaq 1(%rax),%rdx
            movq %rdx,lexptr(%rip)
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,-84(%rbp)
            movl lexleft(%rip),%eax
            subl $1,%eax
            movl %eax,lexleft(%rip)
            jmp .L_40e92f
.L_40e876:

            movl -88(%rbp),%eax
            movl %eax,-80(%rbp)
            jmp .L_40e92f
.L_40e881:

            leaq -64(%rbp),%rdx
            movl -88(%rbp),%eax
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_40e897:
            movl case_fold(%rip),%eax
            testl %eax,%eax
            je .L_40e92b
.L_40e8a5:
            callq __ctype_b_loc@PLT
.L_40e8aa:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_40e8e9
.L_40e8c8:
            movl -88(%rbp),%eax
            movl %eax,%edi
            callq tolower@PLT
.L_40e8d2:
            movl %eax,%edx
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl %edx,%edi
            movl $0,%eax
            callq setbit
.L_40e8e7:
            jmp .L_40e92b
.L_40e8e9:

            callq __ctype_b_loc@PLT
.L_40e8ee:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $512,%eax
            testl %eax,%eax
            je .L_40e92b
.L_40e90c:
            movl -88(%rbp),%eax
            movl %eax,%edi
            callq toupper@PLT
.L_40e916:
            movl %eax,%edx
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl %edx,%edi
            movl $0,%eax
            callq setbit
.L_40e92b:

            addl $1,-88(%rbp)
.L_40e92f:

            movl -88(%rbp),%eax
            cmpl -80(%rbp),%eax
            jle .L_40e881
.L_40e93b:

            movl -84(%rbp),%eax
            movl %eax,-88(%rbp)
            cmpl $93,-88(%rbp)
            jne .L_40e584
.L_40e94b:
            cmpl $0,-72(%rbp)
            je .L_40e987
.L_40e951:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq notset
.L_40e962:
            movl syntax_bits(%rip),%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_40e987
.L_40e971:
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl $10,%edi
            movl $0,%eax
            callq clrbit
.L_40e987:

            movl $0,laststart(%rip)
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq charclass_index
.L_40e9a2:
            addl $273,%eax
            movl %eax,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40e9b8:

            nop
            jmp .L_40ea0a
.L_40e9bb:

            nop
            jmp .L_40ea0a
.L_40e9be:

            nop
            jmp .L_40ea0a
.L_40e9c1:

            nop
            jmp .L_40ea0a
.L_40e9c4:

            nop
            jmp .L_40ea0a
.L_40e9c7:

            nop
            jmp .L_40ea0a
.L_40e9ca:

            nop
            jmp .L_40ea0a
.L_40e9cd:

            nop
            jmp .L_40ea0a
.L_40e9d0:

            nop
            jmp .L_40ea0a
.L_40e9d3:

            nop
            jmp .L_40ea0a
.L_40e9d6:

            nop
            jmp .L_40ea0a
.L_40e9d9:

            nop
            jmp .L_40ea0a
.L_40e9dc:

            nop
            jmp .L_40ea0a
.L_40e9df:

            nop
            jmp .L_40ea0a
.L_40e9e2:

            nop
            jmp .L_40ea0a
.L_40e9e5:

            nop
            jmp .L_40ea0a
.L_40e9e8:

            nop
            jmp .L_40ea0a
.L_40e9eb:

            nop
            jmp .L_40ea0a
.L_40e9ee:

            nop
            jmp .L_40ea0a
.L_40e9f1:

            nop
            jmp .L_40ea0a
.L_40e9f4:

            nop
            jmp .L_40ea0a
.L_40e9f7:

            nop
            jmp .L_40ea0a
.L_40e9fa:

            nop
            jmp .L_40ea0a
.L_40e9fd:

            nop
            jmp .L_40ea0a
.L_40ea00:

            nop
            jmp .L_40ea0a
.L_40ea03:

            nop
            jmp .L_40ea0a
.L_40ea06:

            nop
            jmp .L_40ea0a
.L_40ea09:

            nop
.L_40ea0a:

            movl $0,laststart(%rip)
            movl case_fold(%rip),%eax
            testl %eax,%eax
            je .L_40eaf7
.L_40ea22:
            callq __ctype_b_loc@PLT
.L_40ea27:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $1024,%eax
            testl %eax,%eax
            je .L_40eaf7
.L_40ea49:
            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_40ea5a:
            leaq -64(%rbp),%rdx
            movl -88(%rbp),%eax
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_40ea70:
            callq __ctype_b_loc@PLT
.L_40ea75:
            movq (%rax),%rax
            movl -88(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_40eab4
.L_40ea93:
            movl -88(%rbp),%eax
            movl %eax,%edi
            callq tolower@PLT
.L_40ea9d:
            movl %eax,%edx
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl %edx,%edi
            movl $0,%eax
            callq setbit
.L_40eab2:
            jmp .L_40ead3
.L_40eab4:

            movl -88(%rbp),%eax
            movl %eax,%edi
            callq toupper@PLT
.L_40eabe:
            movl %eax,%edx
            leaq -64(%rbp),%rax
            movq %rax,%rsi
            movl %edx,%edi
            movl $0,%eax
            callq setbit
.L_40ead3:

            leaq -64(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq charclass_index
.L_40eae4:
            addl $273,%eax
            movl %eax,lasttok(%rip)
            movl lasttok(%rip),%eax
            jmp .L_40eb0f
.L_40eaf7:

            movl -88(%rbp),%eax
            jmp .L_40eb0f
.L_40eafc:

            addl $1,-68(%rbp)
.L_40eb00:

            cmpl $1,-68(%rbp)
            jle .L_40dbcb
.L_40eb0a:
            callq abort@PLT
.L_40eb0f:

            movq -24(%rbp),%rcx
            xorq %fs:40,%rcx
            je .L_40eb23
.L_40eb1e:
            callq __stack_chk_fail@PLT
.L_40eb23:

            addq $88,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl addtok
.type addtok, @function
addtok:
#-----------------------------------
# END   - Function Header

addtok:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $24,%rsp
            movl %edi,-20(%rbp)
            movq dfa(%rip),%rax
            movl 24(%rax),%edx
            movq dfa(%rip),%rax
            movl 28(%rax),%eax
            cmpl %eax,%edx
            jl .L_40ebb8
.L_40eb4e:
            jmp .L_40eb66
.L_40eb50:

            movq dfa(%rip),%rax
            movq dfa(%rip),%rdx
            movl 28(%rdx),%edx
            addl %edx,%edx
            movl %edx,28(%rax)
.L_40eb66:

            movq dfa(%rip),%rax
            movl 24(%rax),%edx
            movq dfa(%rip),%rax
            movl 28(%rax),%eax
            cmpl %eax,%edx
            jge .L_40eb50
.L_40eb7e:
            movq dfa(%rip),%rbx
            movq dfa(%rip),%rax
            movl 28(%rax),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq dfa(%rip),%rax
            movq 16(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_40ebb4:
            movq %rax,16(%rbx)
.L_40ebb8:

            movq dfa(%rip),%rax
            movq 16(%rax),%rsi
            movq dfa(%rip),%rax
            movl 24(%rax),%edx
            leal 1(%rdx),%ecx
            movl %ecx,24(%rax)
            movslq %edx,%rax
            shlq $2,%rax
            leaq (%rsi,%rax),%rdx
            movl -20(%rbp),%eax
            movl %eax,(%rdx)
            movl -20(%rbp),%eax
            subl $256,%eax
            cmpl $14,%eax
            ja .L_40ec0d
.L_40ebf0:
            movl %eax,%eax
            movq .L_417d40(,%rax,8),%rax
            jmpq %rax
.L_40ebfc:

            movl depth(%rip),%eax
            subl $1,%eax
            movl %eax,depth(%rip)
            jmp .L_40ec2f
.L_40ec0d:

            movq dfa(%rip),%rax
            movl 36(%rax),%edx
            addl $1,%edx
            movl %edx,36(%rax)
.L_40ec1d:

            movl depth(%rip),%eax
            addl $1,%eax
            movl %eax,depth(%rip)
            jmp .L_40ec2f
.L_40ec2e:

            nop
.L_40ec2f:

            movq dfa(%rip),%rax
            movl 32(%rax),%edx
            movl depth(%rip),%eax
            cmpl %eax,%edx
            jge .L_40ec53
.L_40ec43:
            movq dfa(%rip),%rax
            movl depth(%rip),%edx
            movl %edx,32(%rax)
.L_40ec53:

            nop
            addq $24,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl atom
.type atom, @function
atom:
#-----------------------------------
# END   - Function Header

atom:

            pushq %rbp
            movq %rsp,%rbp
            movl tok(%rip),%eax
            testl %eax,%eax
            js .L_40ec76
.L_40ec69:
            movl tok(%rip),%eax
            cmpl $255,%eax
            jle .L_40ecde
.L_40ec76:

            movl tok(%rip),%eax
            cmpl $272,%eax
            jg .L_40ecde
.L_40ec83:
            movl tok(%rip),%eax
            cmpl $257,%eax
            je .L_40ecde
.L_40ec90:
            movl tok(%rip),%eax
            cmpl $258,%eax
            je .L_40ecde
.L_40ec9d:
            movl tok(%rip),%eax
            cmpl $259,%eax
            je .L_40ecde
.L_40ecaa:
            movl tok(%rip),%eax
            cmpl $260,%eax
            je .L_40ecde
.L_40ecb7:
            movl tok(%rip),%eax
            cmpl $261,%eax
            je .L_40ecde
.L_40ecc4:
            movl tok(%rip),%eax
            cmpl $262,%eax
            je .L_40ecde
.L_40ecd1:
            movl tok(%rip),%eax
            cmpl $263,%eax
            jne .L_40ed02
.L_40ecde:

            movl tok(%rip),%eax
            movl %eax,%edi
            movl $0,%eax
            callq addtok
.L_40ecf0:
            movl $0,%eax
            callq lex
.L_40ecfa:
            movl %eax,tok(%rip)
            jmp .L_40ed61
.L_40ed02:

            movl tok(%rip),%eax
            cmpl $271,%eax
            jne .L_40ed52
.L_40ed0f:
            movl $0,%eax
            callq lex
.L_40ed19:
            movl %eax,tok(%rip)
            movl $0,%edi
            callq regexp
.L_40ed29:
            movl tok(%rip),%eax
            cmpl $272,%eax
            je .L_40ed40
.L_40ed36:
            movl $.L_417db8,%edi
            callq dfaerror
.L_40ed40:

            movl $0,%eax
            callq lex
.L_40ed4a:
            movl %eax,tok(%rip)
            jmp .L_40ed61
.L_40ed52:

            movl $256,%edi
            movl $0,%eax
            callq addtok
.L_40ed61:

            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl nsubtoks
.type nsubtoks, @function
nsubtoks:
#-----------------------------------
# END   - Function Header

nsubtoks:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $40,%rsp
            movl %edi,-36(%rbp)
            movq dfa(%rip),%rax
            movq 16(%rax),%rax
            movl -36(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            subq $4,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $264,%eax
            jl .L_40eda6
.L_40ed95:
            cmpl $266,%eax
            jle .L_40edad
.L_40ed9c:
            subl $268,%eax
            cmpl $2,%eax
            jbe .L_40edc4
.L_40eda6:

            movl $1,%eax
            jmp .L_40edf6
.L_40edad:

            movl -36(%rbp),%eax
            subl $1,%eax
            movl %eax,%edi
            movl $0,%eax
            callq nsubtoks
.L_40edbf:
            addl $1,%eax
            jmp .L_40edf6
.L_40edc4:

            movl -36(%rbp),%eax
            subl $1,%eax
            movl %eax,%edi
            movl $0,%eax
            callq nsubtoks
.L_40edd6:
            movl %eax,-20(%rbp)
            movl -20(%rbp),%eax
            leal 1(%rax),%ebx
            movl -36(%rbp),%eax
            subl $1,%eax
            subl -20(%rbp),%eax
            movl %eax,%edi
            movl $0,%eax
            callq nsubtoks
.L_40edf4:
            addl %ebx,%eax
.L_40edf6:

            addq $40,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl copytoks
.type copytoks, @function
copytoks:
#-----------------------------------
# END   - Function Header

copytoks:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movl %edi,-20(%rbp)
            movl %esi,-24(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40ee43
.L_40ee14:

            movq dfa(%rip),%rax
            movq 16(%rax),%rax
            movl -20(%rbp),%ecx
            movl -4(%rbp),%edx
            addl %ecx,%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,%edi
            movl $0,%eax
            callq addtok
.L_40ee3f:
            addl $1,-4(%rbp)
.L_40ee43:

            movl -4(%rbp),%eax
            cmpl -24(%rbp),%eax
            jl .L_40ee14
.L_40ee4b:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl closure
.type closure, @function
closure:
#-----------------------------------
# END   - Function Header

closure:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl $0,%eax
            callq atom
.L_40ee60:
            jmp .L_40ef83
.L_40ee65:

            movl tok(%rip),%eax
            cmpl $267,%eax
            jne .L_40ef61
.L_40ee76:
            movq dfa(%rip),%rax
            movl 24(%rax),%eax
            movl %eax,%edi
            movl $0,%eax
            callq nsubtoks
.L_40ee8c:
            movl %eax,-8(%rbp)
            movq dfa(%rip),%rax
            movl 24(%rax),%eax
            subl -8(%rbp),%eax
            movl %eax,-4(%rbp)
            movl maxrep(%rip),%eax
            testl %eax,%eax
            jne .L_40eeb8
.L_40eea9:
            movl $266,%edi
            movl $0,%eax
            callq addtok
.L_40eeb8:

            movl minrep(%rip),%eax
            testl %eax,%eax
            jne .L_40eed1
.L_40eec2:
            movl $264,%edi
            movl $0,%eax
            callq addtok
.L_40eed1:

            movl $1,-12(%rbp)
            jmp .L_40ef01
.L_40eeda:

            movl -8(%rbp),%edx
            movl -4(%rbp),%eax
            movl %edx,%esi
            movl %eax,%edi
            movl $0,%eax
            callq copytoks
.L_40eeee:
            movl $268,%edi
            movl $0,%eax
            callq addtok
.L_40eefd:
            addl $1,-12(%rbp)
.L_40ef01:

            movl minrep(%rip),%eax
            cmpl %eax,-12(%rbp)
            jl .L_40eeda
.L_40ef0c:
            jmp .L_40ef44
.L_40ef0e:

            movl -8(%rbp),%edx
            movl -4(%rbp),%eax
            movl %edx,%esi
            movl %eax,%edi
            movl $0,%eax
            callq copytoks
.L_40ef22:
            movl $264,%edi
            movl $0,%eax
            callq addtok
.L_40ef31:
            movl $268,%edi
            movl $0,%eax
            callq addtok
.L_40ef40:
            addl $1,-12(%rbp)
.L_40ef44:

            movl maxrep(%rip),%eax
            cmpl %eax,-12(%rbp)
            jl .L_40ef0e
.L_40ef4f:
            movl $0,%eax
            callq lex
.L_40ef59:
            movl %eax,tok(%rip)
            jmp .L_40ef83
.L_40ef61:

            movl tok(%rip),%eax
            movl %eax,%edi
            movl $0,%eax
            callq addtok
.L_40ef73:
            movl $0,%eax
            callq lex
.L_40ef7d:
            movl %eax,tok(%rip)
.L_40ef83:

            movl tok(%rip),%eax
            cmpl $264,%eax
            je .L_40ee65
.L_40ef94:
            movl tok(%rip),%eax
            cmpl $265,%eax
            je .L_40ee65
.L_40efa5:
            movl tok(%rip),%eax
            cmpl $266,%eax
            je .L_40ee65
.L_40efb6:
            movl tok(%rip),%eax
            cmpl $267,%eax
            je .L_40ee65
.L_40efc7:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl branch
.type branch, @function
branch:
#-----------------------------------
# END   - Function Header

branch:

            pushq %rbp
            movq %rsp,%rbp
            movl $0,%eax
            callq closure
.L_40efd8:
            jmp .L_40eff3
.L_40efda:

            movl $0,%eax
            callq closure
.L_40efe4:
            movl $268,%edi
            movl $0,%eax
            callq addtok
.L_40eff3:

            movl tok(%rip),%eax
            cmpl $272,%eax
            je .L_40f017
.L_40f000:
            movl tok(%rip),%eax
            cmpl $269,%eax
            je .L_40f017
.L_40f00d:
            movl tok(%rip),%eax
            testl %eax,%eax
            jns .L_40efda
.L_40f017:

            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl regexp
.type regexp, @function
regexp:
#-----------------------------------
# END   - Function Header

regexp:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl %edi,-4(%rbp)
            movl $0,%eax
            callq branch
.L_40f02f:
            jmp .L_40f071
.L_40f031:

            movl $0,%eax
            callq lex
.L_40f03b:
            movl %eax,tok(%rip)
            movl $0,%eax
            callq branch
.L_40f04b:
            cmpl $0,-4(%rbp)
            je .L_40f062
.L_40f051:
            movl $270,%edi
            movl $0,%eax
            callq addtok
.L_40f060:
            jmp .L_40f071
.L_40f062:

            movl $269,%edi
            movl $0,%eax
            callq addtok
.L_40f071:

            movl tok(%rip),%eax
            cmpl $269,%eax
            je .L_40f031
.L_40f07e:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfaparse
.type dfaparse, @function
dfaparse:
#-----------------------------------
# END   - Function Header

dfaparse:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            movq %rdx,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,dfa(%rip)
            movq -8(%rbp),%rax
            movq %rax,lexptr(%rip)
            movq lexptr(%rip),%rax
            movq %rax,lexstart(%rip)
            movq -16(%rbp),%rax
            movl %eax,lexleft(%rip)
            movl $4294967295,lasttok(%rip)
            movl $1,laststart(%rip)
            movl $0,parens(%rip)
            movl syntax_bits_set(%rip),%eax
            testl %eax,%eax
            jne .L_40f0f5
.L_40f0eb:
            movl $.L_417dc5,%edi
            callq dfaerror
.L_40f0f5:

            movl $0,%eax
            callq lex
.L_40f0ff:
            movl %eax,tok(%rip)
            movq -24(%rbp),%rax
            movl 32(%rax),%eax
            movl %eax,depth(%rip)
            movl $1,%edi
            callq regexp
.L_40f11c:
            movl tok(%rip),%eax
            cmpl $-1,%eax
            je .L_40f131
.L_40f127:
            movl $.L_417dd9,%edi
            callq dfaerror
.L_40f131:

            movq -24(%rbp),%rax
            movl 40(%rax),%eax
            notl %eax
            movl %eax,%edi
            movl $0,%eax
            callq addtok
.L_40f146:
            movl $268,%edi
            movl $0,%eax
            callq addtok
.L_40f155:
            movq -24(%rbp),%rax
            movl 40(%rax),%eax
            testl %eax,%eax
            je .L_40f16f
.L_40f160:
            movl $270,%edi
            movl $0,%eax
            callq addtok
.L_40f16f:

            movq -24(%rbp),%rax
            movl 40(%rax),%eax
            leal 1(%rax),%edx
            movq -24(%rbp),%rax
            movl %edx,40(%rax)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl copy
.type copy, @function
copy:
#-----------------------------------
# END   - Function Header

copy:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40f1ca
.L_40f198:

            movq -32(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-4(%rbp)
.L_40f1ca:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jg .L_40f198
.L_40f1d6:
            movq -24(%rbp),%rax
            movl 8(%rax),%edx
            movq -32(%rbp),%rax
            movl %edx,8(%rax)
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl insert
.type insert, @function
insert:
#-----------------------------------
# END   - Function Header

insert:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-64(%rbp)
            movq %rsi,-56(%rbp)
            movl $0,-36(%rbp)
            jmp .L_40f200
.L_40f1fc:

            addl $1,-36(%rbp)
.L_40f200:

            movq -56(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -36(%rbp),%eax
            jle .L_40f229
.L_40f20c:
            movl -64(%rbp),%edx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -36(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jb .L_40f1fc
.L_40f229:

            movq -56(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -36(%rbp),%eax
            jle .L_40f287
.L_40f235:
            movl -64(%rbp),%edx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -36(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jne .L_40f287
.L_40f252:
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -36(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -36(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl 4(%rax),%ecx
            movl -60(%rbp),%eax
            orl %ecx,%eax
            movl %eax,4(%rdx)
            jmp .L_40f2f2
.L_40f287:

            movq -64(%rbp),%rax
            movq %rax,-32(%rbp)
            movq -56(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%edx
            movq -56(%rbp),%rax
            movl %edx,8(%rax)
            jmp .L_40f2e6
.L_40f2a2:

            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -36(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-16(%rbp)
            movq -56(%rbp),%rax
            movq (%rax),%rcx
            movl -36(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-36(%rbp)
            cltq 
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movq -32(%rbp),%rax
            movq %rax,(%rdx)
            movq -16(%rbp),%rax
            movq %rax,-32(%rbp)
.L_40f2e6:

            movq -56(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -36(%rbp),%eax
            jg .L_40f2a2
.L_40f2f2:

            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl merge
.type merge, @function
merge:
#-----------------------------------
# END   - Function Header

merge:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movq %rdx,-40(%rbp)
            movl $0,-8(%rbp)
            movl $0,-4(%rbp)
            movq -40(%rbp),%rax
            movl $0,8(%rax)
            jmp .L_40f49d
.L_40f323:

            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -8(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl (%rax),%edx
            movq -32(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jbe .L_40f399
.L_40f353:
            movq -40(%rbp),%rax
            movq (%rax),%rsi
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%ecx
            movq -40(%rbp),%rdx
            movl %ecx,8(%rdx)
            cltq 
            shlq $3,%rax
            leaq (%rsi,%rax),%rcx
            movq -24(%rbp),%rax
            movq (%rax),%rsi
            movl -8(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-8(%rbp)
            cltq 
            shlq $3,%rax
            addq %rsi,%rax
            movq (%rax),%rax
            movq %rax,(%rcx)
            jmp .L_40f49d
.L_40f399:

            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -8(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl (%rax),%edx
            movq -32(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jae .L_40f40f
.L_40f3c9:
            movq -40(%rbp),%rax
            movq (%rax),%rsi
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%ecx
            movq -40(%rbp),%rdx
            movl %ecx,8(%rdx)
            cltq 
            shlq $3,%rax
            leaq (%rsi,%rax),%rcx
            movq -32(%rbp),%rax
            movq (%rax),%rsi
            movl -4(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-4(%rbp)
            cltq 
            shlq $3,%rax
            addq %rsi,%rax
            movq (%rax),%rax
            movq %rax,(%rcx)
            jmp .L_40f49d
.L_40f40f:

            movq -40(%rbp),%rax
            movq (%rax),%rdx
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            cltq 
            shlq $3,%rax
            leaq (%rdx,%rax),%rcx
            movq -24(%rbp),%rax
            movq (%rax),%rsi
            movl -8(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-8(%rbp)
            cltq 
            shlq $3,%rax
            addq %rsi,%rax
            movq (%rax),%rax
            movq %rax,(%rcx)
            movq -32(%rbp),%rax
            movq (%rax),%rcx
            movl -4(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-4(%rbp)
            cltq 
            shlq $3,%rax
            addq %rcx,%rax
            movl 4(%rax),%esi
            movq -40(%rbp),%rax
            movq (%rax),%rdi
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%ecx
            movq -40(%rbp),%rdx
            movl %ecx,8(%rdx)
            movslq %eax,%rdx
            shlq $3,%rdx
            leaq (%rdi,%rdx),%rcx
            movq -40(%rbp),%rdx
            movq (%rdx),%rdx
            cltq 
            shlq $3,%rax
            addq %rdx,%rax
            movl 4(%rax),%eax
            orl %esi,%eax
            movl %eax,4(%rcx)
.L_40f49d:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -8(%rbp),%eax
            jle .L_40f4fc
.L_40f4a9:
            movq -32(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jg .L_40f323
.L_40f4b9:
            jmp .L_40f4fc
.L_40f4bb:

            movq -40(%rbp),%rax
            movq (%rax),%rsi
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%ecx
            movq -40(%rbp),%rdx
            movl %ecx,8(%rdx)
            cltq 
            shlq $3,%rax
            leaq (%rsi,%rax),%rcx
            movq -24(%rbp),%rax
            movq (%rax),%rsi
            movl -8(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-8(%rbp)
            cltq 
            shlq $3,%rax
            addq %rsi,%rax
            movq (%rax),%rax
            movq %rax,(%rcx)
.L_40f4fc:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -8(%rbp),%eax
            jg .L_40f4bb
.L_40f508:
            jmp .L_40f54b
.L_40f50a:

            movq -40(%rbp),%rax
            movq (%rax),%rsi
            movq -40(%rbp),%rax
            movl 8(%rax),%eax
            leal 1(%rax),%ecx
            movq -40(%rbp),%rdx
            movl %ecx,8(%rdx)
            cltq 
            shlq $3,%rax
            leaq (%rsi,%rax),%rcx
            movq -32(%rbp),%rax
            movq (%rax),%rsi
            movl -4(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-4(%rbp)
            cltq 
            shlq $3,%rax
            addq %rsi,%rax
            movq (%rax),%rax
            movq %rax,(%rcx)
.L_40f54b:

            movq -32(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jg .L_40f50a
.L_40f557:
            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl delete
.type delete, @function
delete:
#-----------------------------------
# END   - Function Header

delete:

            pushq %rbp
            movq %rsp,%rbp
            movq %rdi,-32(%rbp)
            movq %rsi,-24(%rbp)
            movl $0,-4(%rbp)
            jmp .L_40f590
.L_40f56f:

            movl -32(%rbp),%edx
            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            je .L_40f59e
.L_40f58c:
            addl $1,-4(%rbp)
.L_40f590:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jg .L_40f56f
.L_40f59c:
            jmp .L_40f59f
.L_40f59e:

            nop
.L_40f59f:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jle .L_40f600
.L_40f5ab:
            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            leal -1(%rax),%edx
            movq -24(%rbp),%rax
            movl %edx,8(%rax)
            jmp .L_40f5f4
.L_40f5be:

            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -24(%rbp),%rax
            movq (%rax),%rax
            movl -4(%rbp),%ecx
            movslq %ecx,%rcx
            addq $1,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            addl $1,-4(%rbp)
.L_40f5f4:

            movq -24(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -4(%rbp),%eax
            jg .L_40f5be
.L_40f600:

            nop
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl state_index
.type state_index, @function
state_index:
#-----------------------------------
# END   - Function Header

state_index:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $56,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movl %edx,-52(%rbp)
            movl %ecx,-56(%rbp)
            movl $0,-32(%rbp)
            cmpl $0,-52(%rbp)
            setne %al
            movzbl %al,%eax
            movl %eax,-52(%rbp)
            cmpl $0,-56(%rbp)
            setne %al
            movzbl %al,%eax
            movl %eax,-56(%rbp)
            movl $0,-28(%rbp)
            jmp .L_40f67f
.L_40f644:

            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl (%rax),%edx
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -28(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl 4(%rax),%eax
            addl %eax,%edx
            movl -32(%rbp),%eax
            xorl %edx,%eax
            movl %eax,-32(%rbp)
            addl $1,-28(%rbp)
.L_40f67f:

            movq -48(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -28(%rbp),%eax
            jg .L_40f644
.L_40f68b:
            movl $0,-28(%rbp)
            jmp .L_40f7e7
.L_40f697:

            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl -32(%rbp),%eax
            jne .L_40f7e2
.L_40f6b7:
            movq -48(%rbp),%rax
            movl 8(%rax),%edx
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movl 16(%rax),%eax
            cmpl %eax,%edx
            jne .L_40f7e2
.L_40f6de:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 24(%rax),%eax
            movsbl %al,%eax
            cmpl -52(%rbp),%eax
            jne .L_40f7e2
.L_40f703:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 25(%rax),%eax
            movsbl %al,%eax
            cmpl -56(%rbp),%eax
            jne .L_40f7e2
.L_40f728:
            movl $0,-24(%rbp)
            jmp .L_40f7be
.L_40f734:

            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%edx
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movq 8(%rax),%rax
            movl -24(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl 4(%rax),%eax
            cmpl %eax,%edx
            jne .L_40f7ce
.L_40f778:
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl (%rax),%edx
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movq 8(%rax),%rax
            movl -24(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jne .L_40f7ce
.L_40f7ba:
            addl $1,-24(%rbp)
.L_40f7be:

            movq -48(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -24(%rbp),%eax
            jg .L_40f734
.L_40f7ce:

            movq -48(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -24(%rbp),%eax
            jne .L_40f7e3
.L_40f7da:
            movl -28(%rbp),%eax
            jmp .L_40fba8
.L_40f7e2:

            nop
.L_40f7e3:

            addl $1,-28(%rbp)
.L_40f7e7:

            movq -40(%rbp),%rax
            movl 56(%rax),%eax
            cmpl -28(%rbp),%eax
            jg .L_40f697
.L_40f7f7:
            movq -40(%rbp),%rax
            movl 56(%rax),%edx
            movq -40(%rbp),%rax
            movl 60(%rax),%eax
            cmpl %eax,%edx
            jl .L_40f861
.L_40f809:
            jmp .L_40f81c
.L_40f80b:

            movq -40(%rbp),%rax
            movl 60(%rax),%eax
            leal (%rax,%rax),%edx
            movq -40(%rbp),%rax
            movl %edx,60(%rax)
.L_40f81c:

            movq -40(%rbp),%rax
            movl 56(%rax),%edx
            movq -40(%rbp),%rax
            movl 60(%rax),%eax
            cmpl %eax,%edx
            jge .L_40f80b
.L_40f82e:
            movq -40(%rbp),%rax
            movl 60(%rax),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_40f856:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,48(%rax)
.L_40f861:

            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movl -32(%rbp),%eax
            movl %eax,(%rdx)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            leaq (%rax,%rdx),%rbx
            movq -48(%rbp),%rax
            movl 8(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40f8ab:
            movq %rax,8(%rbx)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            leaq 8(%rax),%rdx
            movq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copy
.L_40f8dc:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl -52(%rbp),%edx
            movb %dl,24(%rax)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl -56(%rbp),%edx
            movb %dl,25(%rax)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movb $0,26(%rax)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movb $0,27(%rax)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl $0,28(%rax)
            movl $0,-24(%rbp)
            jmp .L_40fb84
.L_40f96c:

            movq -40(%rbp),%rax
            movq 16(%rax),%rdx
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%eax
            testl %eax,%eax
            jns .L_40fb1e
.L_40f99d:
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            movl %eax,-20(%rbp)
            cmpl $0,-52(%rbp)
            je .L_40f9c4
.L_40f9bd:
            movl $64,%eax
            jmp .L_40f9c9
.L_40f9c4:

            movl $16,%eax
.L_40f9c9:

            andl -20(%rbp),%eax
            testl %eax,%eax
            je .L_40f9ed
.L_40f9d0:
            cmpl $0,-56(%rbp)
            je .L_40f9dd
.L_40f9d6:
            movl $4,%eax
            jmp .L_40f9e2
.L_40f9dd:

            movl $1,%eax
.L_40f9e2:

            andl -20(%rbp),%eax
            testl %eax,%eax
            jne .L_40fa83
.L_40f9ed:

            cmpl $0,-52(%rbp)
            je .L_40f9fa
.L_40f9f3:
            movl $64,%eax
            jmp .L_40f9ff
.L_40f9fa:

            movl $16,%eax
.L_40f9ff:

            andl -20(%rbp),%eax
            testl %eax,%eax
            je .L_40fa1f
.L_40fa06:
            cmpl $0,-56(%rbp)
            je .L_40fa13
.L_40fa0c:
            movl $8,%eax
            jmp .L_40fa18
.L_40fa13:

            movl $2,%eax
.L_40fa18:

            andl -20(%rbp),%eax
            testl %eax,%eax
            jne .L_40fa83
.L_40fa1f:

            cmpl $0,-52(%rbp)
            je .L_40fa2c
.L_40fa25:
            movl $128,%eax
            jmp .L_40fa31
.L_40fa2c:

            movl $32,%eax
.L_40fa31:

            andl -20(%rbp),%eax
            testl %eax,%eax
            je .L_40fa51
.L_40fa38:
            cmpl $0,-56(%rbp)
            je .L_40fa45
.L_40fa3e:
            movl $4,%eax
            jmp .L_40fa4a
.L_40fa45:

            movl $1,%eax
.L_40fa4a:

            andl -20(%rbp),%eax
            testl %eax,%eax
            jne .L_40fa83
.L_40fa51:

            cmpl $0,-52(%rbp)
            je .L_40fa5e
.L_40fa57:
            movl $128,%eax
            jmp .L_40fa63
.L_40fa5e:

            movl $32,%eax
.L_40fa63:

            andl -20(%rbp),%eax
            testl %eax,%eax
            je .L_40fabb
.L_40fa6a:
            cmpl $0,-56(%rbp)
            je .L_40fa77
.L_40fa70:
            movl $8,%eax
            jmp .L_40fa7c
.L_40fa77:

            movl $2,%eax
.L_40fa7c:

            andl -20(%rbp),%eax
            testl %eax,%eax
            je .L_40fabb
.L_40fa83:

            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 27(%rax),%eax
            movl %eax,%ecx
            movl -20(%rbp),%eax
            orl %ecx,%eax
            movb %al,27(%rdx)
.L_40fabb:

            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl 28(%rax),%eax
            testl %eax,%eax
            jne .L_40fb80
.L_40fadb:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movq -40(%rbp),%rax
            movq 16(%rax),%rcx
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%esi
            movslq %esi,%rsi
            shlq $3,%rsi
            addq %rsi,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,28(%rdx)
            jmp .L_40fb80
.L_40fb1e:

            movq -40(%rbp),%rax
            movq 16(%rax),%rdx
            movq -48(%rbp),%rax
            movq (%rax),%rax
            movl -24(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $257,%eax
            jne .L_40fb80
.L_40fb4e:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movb $255,27(%rax)
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movb $1,26(%rax)
.L_40fb80:

            addl $1,-24(%rbp)
.L_40fb84:

            movq -48(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -24(%rbp),%eax
            jg .L_40f96c
.L_40fb94:
            movq -40(%rbp),%rax
            movl 56(%rax),%eax
            leal 1(%rax),%edx
            movq -40(%rbp),%rax
            movl %edx,56(%rax)
            movl -28(%rbp),%eax
.L_40fba8:

            addq $56,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl epsclosure
.type epsclosure, @function
epsclosure:
#-----------------------------------
# END   - Function Header

epsclosure:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-56(%rbp)
            movq %rsi,-64(%rbp)
            movq -64(%rbp),%rax
            movl 24(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40fbd9:
            movq %rax,-8(%rbp)
            movl $0,-40(%rbp)
            jmp .L_40fc04
.L_40fbe6:

            movl -40(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl $0,(%rax)
            addl $1,-40(%rbp)
.L_40fc04:

            movq -64(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -40(%rbp),%eax
            jg .L_40fbe6
.L_40fc10:
            movl $0,-40(%rbp)
            jmp .L_40fe2e
.L_40fc1c:

            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -40(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $255,%eax
            jle .L_40fe2a
.L_40fc50:
            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -40(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $257,%eax
            je .L_40fe2a
.L_40fc84:
            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -40(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $272,%eax
            jg .L_40fe2a
.L_40fcb8:
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -40(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-16(%rbp)
            movl -12(%rbp),%eax
            movl %eax,-28(%rbp)
            movq -56(%rbp),%rax
            movq (%rax),%rax
            movl -40(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -56(%rbp),%rax
            movq %rax,%rsi
            movq (%rdx),%rdi
            movl $0,%eax
            callq delete
.L_40fd01:
            movl -16(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_40fd24
.L_40fd1b:
            subl $1,-40(%rbp)
            jmp .L_40fe2a
.L_40fd24:

            movl -16(%rbp),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl $1,(%rax)
            movq -64(%rbp),%rax
            movq 16(%rax),%rax
            movl -16(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            subl $258,%eax
            cmpl $5,%eax
            ja .L_40fdb8
.L_40fd5e:
            movl %eax,%eax
            movq .L_417de8(,%rax,8),%rax
            jmpq %rax
.L_40fd6a:

            movl -28(%rbp),%eax
            andl $207,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fd77:

            movl -28(%rbp),%eax
            andl $175,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fd84:

            movl -28(%rbp),%eax
            andl $242,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fd91:

            movl -28(%rbp),%eax
            andl $244,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fd9e:

            movl -28(%rbp),%eax
            andl $246,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fdab:

            movl -28(%rbp),%eax
            andl $249,%eax
            movl %eax,-28(%rbp)
            jmp .L_40fdb9
.L_40fdb8:

            nop
.L_40fdb9:

            movl $0,-36(%rbp)
            jmp .L_40fe07
.L_40fdc2:

            movq -64(%rbp),%rax
            movq 64(%rax),%rax
            movl -16(%rbp),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl -36(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,-32(%rbp)
            movq -56(%rbp),%rdx
            movq -32(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq insert
.L_40fe03:
            addl $1,-36(%rbp)
.L_40fe07:

            movq -64(%rbp),%rax
            movq 64(%rax),%rax
            movl -16(%rbp),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rdx,%rax
            movl 8(%rax),%eax
            cmpl -36(%rbp),%eax
            jg .L_40fdc2
.L_40fe23:
            movl $4294967295,-40(%rbp)
.L_40fe2a:

            addl $1,-40(%rbp)
.L_40fe2e:

            movq -56(%rbp),%rax
            movl 8(%rax),%eax
            cmpl -40(%rbp),%eax
            jg .L_40fc1c
.L_40fe3e:
            movq -8(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_40fe4a:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfaanalyze
.type dfaanalyze, @function
dfaanalyze:
#-----------------------------------
# END   - Function Header

dfaanalyze:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $184,%rsp
            movq %rdi,-184(%rbp)
            movl %esi,-188(%rbp)
            movq %fs:40,%rax
            movq %rax,-24(%rbp)
            xorl %eax,%eax
            movq -184(%rbp),%rax
            movl -188(%rbp),%edx
            movl %edx,72(%rax)
            movq -184(%rbp),%rax
            movl 32(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40fea2:
            movq %rax,-160(%rbp)
            movq -160(%rbp),%rax
            movq %rax,-120(%rbp)
            movq -184(%rbp),%rax
            movl 32(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40fed1:
            movq %rax,-152(%rbp)
            movq -152(%rbp),%rax
            movq %rax,-112(%rbp)
            movq -184(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40ff00:
            movq %rax,-144(%rbp)
            movq -144(%rbp),%rax
            movq %rax,-104(%rbp)
            movq -184(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            addq %rax,-144(%rbp)
            movq -184(%rbp),%rax
            movl 32(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40ff46:
            movq %rax,-136(%rbp)
            movq -136(%rbp),%rax
            movq %rax,-96(%rbp)
            movq -184(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40ff75:
            movq %rax,-128(%rbp)
            movq -128(%rbp),%rax
            movq %rax,-88(%rbp)
            movq -184(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            addq %rax,-128(%rbp)
            movq -184(%rbp),%rax
            movl 24(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_40ffb2:
            movq %rax,-80(%rbp)
            movl $0,-168(%rbp)
            jmp .L_40ffe6
.L_40ffc2:

            movl -168(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl $0,(%rax)
            addl $1,-168(%rbp)
.L_40ffe6:

            movq -184(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -168(%rbp),%eax
            jg .L_40ffc2
.L_40fff8:
            movq -184(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_410015:
            movq %rax,-48(%rbp)
            movq -184(%rbp),%rax
            movl 24(%rax),%eax
            movl $16,%esi
            movl %eax,%edi
            movl $0,%eax
            callq xcalloc
.L_410034:
            movq %rax,%rdx
            movq -184(%rbp),%rax
            movq %rdx,64(%rax)
            movl $0,-168(%rbp)
            jmp .L_410933
.L_410051:

            movq -184(%rbp),%rax
            movq 16(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            subl $256,%eax
            cmpl $14,%eax
            ja .L_410812
.L_41007c:
            movl %eax,%eax
            movq .L_417e18(,%rax,8),%rax
            jmpq %rax
.L_410088:

            movq -160(%rbp),%rax
            leaq 4(%rax),%rdx
            movq %rdx,-160(%rbp)
            movl $1,(%rax)
            movq -152(%rbp),%rdx
            leaq 4(%rdx),%rax
            movq %rax,-152(%rbp)
            movq -136(%rbp),%rax
            leaq 4(%rax),%rcx
            movq %rcx,-136(%rbp)
            movl $0,(%rax)
            movl (%rax),%eax
            movl %eax,(%rdx)
            jmp .L_41092c
.L_4100d3:

            movq -152(%rbp),%rax
            movl -4(%rax),%eax
            movl %eax,-56(%rbp)
            movq -144(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -128(%rbp),%rax
            movq %rax,-72(%rbp)
            movl $0,-164(%rbp)
            jmp .L_41030c
.L_410102:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rcx
            leaq -48(%rbp),%rdx
            leaq -64(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq merge
.L_410149:
            movl -40(%rbp),%eax
            leal -1(%rax),%edx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -72(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rcx
            movq -80(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jl .L_4102c3
.L_410183:
            jmp .L_4101e0
.L_410185:

            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -72(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            leaq (,%rdx,4),%rcx
            movq -80(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            addl %edx,%edx
            movl %edx,(%rax)
.L_4101e0:

            movl -40(%rbp),%eax
            leal -1(%rax),%edx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -72(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rcx
            movq -80(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jge .L_410185
.L_41021a:
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rbx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -72(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%ecx
            movslq %ecx,%rcx
            leaq (,%rcx,8),%rsi
            movq -72(%rbp),%rcx
            addq %rsi,%rcx
            movl (%rcx),%ecx
            movl %ecx,%ecx
            shlq $4,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_4102c0:
            movq %rax,(%rbx)
.L_4102c3:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rax,%rdx
            leaq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copy
.L_410305:
            addl $1,-164(%rbp)
.L_41030c:

            movq -136(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            cmpl -164(%rbp),%eax
            jg .L_410102
.L_410325:

            movq -184(%rbp),%rax
            movq 16(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $266,%eax
            je .L_41092b
.L_41034d:
            movq -160(%rbp),%rax
            subq $4,%rax
            movl $1,(%rax)
            jmp .L_41092b
.L_410363:

            movq -152(%rbp),%rax
            movl -4(%rax),%eax
            movl %eax,-56(%rbp)
            movq -144(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -136(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -128(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-72(%rbp)
            movl $0,-164(%rbp)
            jmp .L_4105b6
.L_4103ac:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rcx
            leaq -48(%rbp),%rdx
            leaq -64(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq merge
.L_4103f3:
            movl -40(%rbp),%eax
            leal -1(%rax),%edx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -72(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rcx
            movq -80(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jl .L_41056d
.L_41042d:
            jmp .L_41048a
.L_41042f:

            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -72(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            leaq (,%rdx,4),%rcx
            movq -80(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            addl %edx,%edx
            movl %edx,(%rax)
.L_41048a:

            movl -40(%rbp),%eax
            leal -1(%rax),%edx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -72(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rcx
            movq -80(%rbp),%rax
            addq %rcx,%rax
            movl (%rax),%eax
            cmpl %eax,%edx
            jge .L_41042f
.L_4104c4:
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rbx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -72(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,%eax
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%ecx
            movslq %ecx,%rcx
            leaq (,%rcx,8),%rsi
            movq -72(%rbp),%rcx
            addq %rsi,%rcx
            movl (%rcx),%ecx
            movl %ecx,%ecx
            shlq $4,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_41056a:
            movq %rax,(%rbx)
.L_41056d:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -164(%rbp),%edx
            movslq %edx,%rdx
            leaq (,%rdx,8),%rcx
            movq -72(%rbp),%rdx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rax,%rdx
            leaq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copy
.L_4105af:
            addl $1,-164(%rbp)
.L_4105b6:

            movq -136(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            cmpl -164(%rbp),%eax
            jg .L_4103ac
.L_4105cf:
            movq -160(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_41060b
.L_4105e0:
            movq -152(%rbp),%rax
            subq $8,%rax
            movq -152(%rbp),%rdx
            subq $8,%rdx
            movl (%rdx),%ecx
            movq -152(%rbp),%rdx
            subq $4,%rdx
            movl (%rdx),%edx
            addl %ecx,%edx
            movl %edx,(%rax)
            jmp .L_410625
.L_41060b:

            movq -152(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            cltq 
            shlq $3,%rax
            addq %rax,-144(%rbp)
.L_410625:

            subq $4,-152(%rbp)
            movq -160(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_41066c
.L_41063e:
            movq -136(%rbp),%rax
            subq $8,%rax
            movq -136(%rbp),%rdx
            subq $8,%rdx
            movl (%rdx),%ecx
            movq -136(%rbp),%rdx
            subq $4,%rdx
            movl (%rdx),%edx
            addl %ecx,%edx
            movl %edx,(%rax)
            jmp .L_410718
.L_41066c:

            movq -136(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -128(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-72(%rbp)
            movq -136(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            subl $1,%eax
            movl %eax,-164(%rbp)
            jmp .L_4106e1
.L_4106a6:

            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -72(%rbp),%rax
            addq %rax,%rdx
            movl -164(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -128(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            subl $1,-164(%rbp)
.L_4106e1:

            cmpl $0,-164(%rbp)
            jns .L_4106a6
.L_4106ea:
            movq -136(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            cltq 
            shlq $3,%rax
            addq %rax,-128(%rbp)
            movq -136(%rbp),%rax
            leaq -8(%rax),%rdx
            movq -136(%rbp),%rax
            movl -4(%rax),%eax
            movl %eax,(%rdx)
.L_410718:

            subq $4,-136(%rbp)
            movq -160(%rbp),%rax
            leaq -8(%rax),%rdx
            movq -160(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_410754
.L_41073c:
            movq -160(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_410754
.L_41074d:
            movl $1,%eax
            jmp .L_410759
.L_410754:

            movl $0,%eax
.L_410759:

            movl %eax,(%rdx)
            subq $4,-160(%rbp)
            jmp .L_41092c
.L_410768:

            movq -152(%rbp),%rax
            subq $8,%rax
            movq -152(%rbp),%rdx
            subq $8,%rdx
            movl (%rdx),%ecx
            movq -152(%rbp),%rdx
            subq $4,%rdx
            movl (%rdx),%edx
            addl %ecx,%edx
            movl %edx,(%rax)
            subq $4,-152(%rbp)
            movq -136(%rbp),%rax
            subq $8,%rax
            movq -136(%rbp),%rdx
            subq $8,%rdx
            movl (%rdx),%ecx
            movq -136(%rbp),%rdx
            subq $4,%rdx
            movl (%rdx),%edx
            addl %ecx,%edx
            movl %edx,(%rax)
            subq $4,-136(%rbp)
            movq -160(%rbp),%rax
            leaq -8(%rax),%rdx
            movq -160(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            testl %eax,%eax
            jne .L_4107f7
.L_4107e6:
            movq -160(%rbp),%rax
            subq $8,%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_4107fe
.L_4107f7:

            movl $1,%eax
            jmp .L_410803
.L_4107fe:

            movl $0,%eax
.L_410803:

            movl %eax,(%rdx)
            subq $4,-160(%rbp)
            jmp .L_41092c
.L_410812:

            movq -160(%rbp),%rax
            leaq 4(%rax),%rdx
            movq %rdx,-160(%rbp)
            movq -184(%rbp),%rdx
            movq 16(%rdx),%rdx
            movl -168(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rdx
            movl (%rdx),%edx
            cmpl $257,%edx
            sete %dl
            movzbl %dl,%edx
            movl %edx,(%rax)
            movq -152(%rbp),%rdx
            leaq 4(%rdx),%rax
            movq %rax,-152(%rbp)
            movq -136(%rbp),%rax
            leaq 4(%rax),%rcx
            movq %rcx,-136(%rbp)
            movl $1,(%rax)
            movl (%rax),%eax
            movl %eax,(%rdx)
            subq $8,-144(%rbp)
            subq $8,-128(%rbp)
            movl -168(%rbp),%edx
            movq -128(%rbp),%rax
            movl %edx,(%rax)
            movq -128(%rbp),%rax
            movl (%rax),%edx
            movq -144(%rbp),%rax
            movl %edx,(%rax)
            movq -128(%rbp),%rax
            movl $255,4(%rax)
            movq -128(%rbp),%rax
            movl 4(%rax),%edx
            movq -144(%rbp),%rax
            movl %edx,4(%rax)
            movl -168(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl $1,(%rax)
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rbx
            movl -168(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_410926:
            movq %rax,(%rbx)
            jmp .L_41092c
.L_41092b:

            nop
.L_41092c:

            addl $1,-168(%rbp)
.L_410933:

            movq -184(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -168(%rbp),%eax
            jg .L_410051
.L_410949:
            movl $0,-168(%rbp)
            jmp .L_410ac7
.L_410958:

            movq -184(%rbp),%rax
            movq 16(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $255,%eax
            jle .L_4109c8
.L_41097c:
            movq -184(%rbp),%rax
            movq 16(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $257,%eax
            je .L_4109c8
.L_4109a0:
            movq -184(%rbp),%rax
            movq 16(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $272,%eax
            jle .L_410ac0
.L_4109c8:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rax,%rdx
            leaq -48(%rbp),%rax
            movq %rax,%rsi
            movq %rdx,%rdi
            movl $0,%eax
            callq copy
.L_4109f7:
            movq -184(%rbp),%rdx
            leaq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq epsclosure
.L_410a12:
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rdx,%rax
            movl 8(%rax),%edx
            movl -40(%rbp),%eax
            cmpl %eax,%edx
            jge .L_410a91
.L_410a37:
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            leaq (%rax,%rdx),%rbx
            movl -40(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $4,%rcx
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_410a8e:
            movq %rax,(%rbx)
.L_410a91:

            movq -184(%rbp),%rax
            movq 64(%rax),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rax,%rdx
            leaq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copy
.L_410ac0:

            addl $1,-168(%rbp)
.L_410ac7:

            movq -184(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -168(%rbp),%eax
            jg .L_410958
.L_410add:
            movl $0,-40(%rbp)
            movl $0,-168(%rbp)
            jmp .L_410b25
.L_410af0:

            movl -168(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -144(%rbp),%rax
            addq %rax,%rdx
            leaq -48(%rbp),%rax
            movq %rax,%rsi
            movq (%rdx),%rdi
            movl $0,%eax
            callq insert
.L_410b1e:
            addl $1,-168(%rbp)
.L_410b25:

            movq -152(%rbp),%rax
            subq $4,%rax
            movl (%rax),%eax
            cmpl -168(%rbp),%eax
            jg .L_410af0
.L_410b3a:
            movq -184(%rbp),%rdx
            leaq -48(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq epsclosure
.L_410b55:
            movl $0,-172(%rbp)
            movl $0,-168(%rbp)
            jmp .L_410bbb
.L_410b6b:

            movq -48(%rbp),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $192,%eax
            shrl $2,%eax
            movl %eax,%ecx
            movq -48(%rbp),%rax
            movl -168(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $48,%eax
            cmpl %eax,%ecx
            je .L_410bb4
.L_410baa:
            movl $1,-172(%rbp)
.L_410bb4:

            addl $1,-168(%rbp)
.L_410bbb:

            movl -40(%rbp),%eax
            cmpl -168(%rbp),%eax
            jg .L_410b6b
.L_410bc6:
            movq -184(%rbp),%rax
            movl $1,60(%rax)
            movq -184(%rbp),%rax
            movl $0,56(%rax)
            movq -184(%rbp),%rax
            movl 60(%rax),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_410bff:
            movq %rax,%rdx
            movq -184(%rbp),%rax
            movq %rdx,48(%rax)
            movl -172(%rbp),%edx
            leaq -48(%rbp),%rsi
            movq -184(%rbp),%rax
            movl $0,%ecx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_410c30:
            movq -120(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c3c:
            movq -112(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c48:
            movq -104(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c54:
            movq -96(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c60:
            movq -88(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c6c:
            movq -80(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c78:
            movq -48(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_410c84:
            nop
            movq -24(%rbp),%rax
            xorq %fs:40,%rax
            je .L_410c99
.L_410c94:
            callq __stack_chk_fail@PLT
.L_410c99:

            addq $184,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfastate
.type dfastate, @function
dfastate:
#-----------------------------------
# END   - Function Header

dfastate:

            pushq %rbp
            movq %rsp,%rbp
            subq $12544,%rsp
            movl %edi,-12516(%rbp)
            movq %rsi,-12528(%rbp)
            movq %rdx,-12536(%rbp)
            movq %fs:40,%rax
            movq %rax,-8(%rbp)
            xorl %eax,%eax
            movl $0,-12508(%rbp)
            movl initialized.5598(%rip),%eax
            testl %eax,%eax
            jne .L_410d5d
.L_410ce5:
            movl $1,initialized.5598(%rip)
            movl $0,-12476(%rbp)
            jmp .L_410d3d
.L_410cfb:

            callq __ctype_b_loc@PLT
.L_410d00:
            movq (%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            je .L_410d36
.L_410d1f:
            movl -12476(%rbp),%eax
            movl $letters.5589,%esi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_410d36:

            addl $1,-12476(%rbp)
.L_410d3d:

            cmpl $255,-12476(%rbp)
            jle .L_410cfb
.L_410d49:
            movl $newline.5590,%esi
            movl $10,%edi
            movl $0,%eax
            callq setbit
.L_410d5d:

            leaq -12400(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_410d71:
            movl $0,-12476(%rbp)
            jmp .L_411547
.L_410d80:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movq 8(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-12448(%rbp)
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            testl %eax,%eax
            js .L_410e30
.L_410dd9:
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $255,%eax
            jg .L_410e30
.L_410dfc:
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            leaq -12400(%rbp),%rdx
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq setbit
.L_410e2e:
            jmp .L_410ea3
.L_410e30:

            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $272,%eax
            jle .L_41153c
.L_410e57:
            movq -12528(%rbp),%rax
            movq (%rax),%rdx
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%ecx
            movl %ecx,%ecx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            cltq 
            shlq $5,%rax
            subq $8736,%rax
            addq %rax,%rdx
            leaq -12400(%rbp),%rax
            movq %rax,%rsi
            movq %rdx,%rdi
            movl $0,%eax
            callq copyset
.L_410ea3:

            movl -12444(%rbp),%eax
            cmpl $255,%eax
            je .L_4110e0
.L_410eb4:
            movl -12444(%rbp),%edx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 24(%rax),%eax
            testb %al,%al
            je .L_410ee4
.L_410edd:
            movl $128,%eax
            jmp .L_410ee9
.L_410ee4:

            movl $32,%eax
.L_410ee9:

            andl %edx,%eax
            testl %eax,%eax
            jne .L_410f08
.L_410eef:
            leaq -12400(%rbp),%rax
            movq %rax,%rsi
            movl $10,%edi
            movl $0,%eax
            callq clrbit
.L_410f08:

            movl -12444(%rbp),%edx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 24(%rax),%eax
            testb %al,%al
            je .L_410f38
.L_410f31:
            movl $64,%eax
            jmp .L_410f3d
.L_410f38:

            movl $16,%eax
.L_410f3d:

            andl %edx,%eax
            testl %eax,%eax
            jne .L_410f90
.L_410f43:
            movl $0,-12472(%rbp)
            jmp .L_410f85
.L_410f4f:

            movl -12472(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%edx
            movl -12472(%rbp),%eax
            cltq 
            movl newline.5590(,%rax,4),%eax
            andl %eax,%edx
            movl -12472(%rbp),%eax
            cltq 
            movl %edx,-12400(%rbp,%rax,4)
            addl $1,-12472(%rbp)
.L_410f85:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            jbe .L_410f4f
.L_410f90:

            movl -12444(%rbp),%edx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_410fc0
.L_410fb9:
            movl $8,%eax
            jmp .L_410fc5
.L_410fc0:

            movl $2,%eax
.L_410fc5:

            andl %edx,%eax
            testl %eax,%eax
            jne .L_41101a
.L_410fcb:
            movl $0,-12472(%rbp)
            jmp .L_41100f
.L_410fd7:

            movl -12472(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%edx
            movl -12472(%rbp),%eax
            cltq 
            movl letters.5589(,%rax,4),%eax
            notl %eax
            andl %eax,%edx
            movl -12472(%rbp),%eax
            cltq 
            movl %edx,-12400(%rbp,%rax,4)
            addl $1,-12472(%rbp)
.L_41100f:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            jbe .L_410fd7
.L_41101a:

            movl -12444(%rbp),%edx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_41104a
.L_411043:
            movl $4,%eax
            jmp .L_41104f
.L_41104a:

            movl $1,%eax
.L_41104f:

            andl %edx,%eax
            testl %eax,%eax
            jne .L_4110a2
.L_411055:
            movl $0,-12472(%rbp)
            jmp .L_411097
.L_411061:

            movl -12472(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%edx
            movl -12472(%rbp),%eax
            cltq 
            movl letters.5589(,%rax,4),%eax
            andl %eax,%edx
            movl -12472(%rbp),%eax
            cltq 
            movl %edx,-12400(%rbp,%rax,4)
            addl $1,-12472(%rbp)
.L_411097:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            jbe .L_411061
.L_4110a2:

            movl $0,-12472(%rbp)
            jmp .L_4110b5
.L_4110ae:

            addl $1,-12472(%rbp)
.L_4110b5:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            ja .L_4110d3
.L_4110c0:
            movl -12472(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4110ae
.L_4110d3:

            cmpl $8,-12472(%rbp)
            je .L_41153f
.L_4110e0:

            movl $0,-12472(%rbp)
            jmp .L_411455
.L_4110ef:

            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            testl %eax,%eax
            js .L_41117c
.L_41110f:
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%edx
            movl %edx,%edx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            cmpl $255,%eax
            jg .L_41117c
.L_411132:
            leaq -8208(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            movq -12528(%rbp),%rax
            movq 16(%rax),%rax
            movl -12448(%rbp),%ecx
            movl %ecx,%ecx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            movq %rdx,%rsi
            movl %eax,%edi
            movl $0,%eax
            callq tstbit
.L_411174:
            testl %eax,%eax
            je .L_41144a
.L_41117c:

            movl $0,-12500(%rbp)
            movl $0,-12468(%rbp)
            jmp .L_4111f5
.L_411192:

            movl -12468(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%edx
            movl -12468(%rbp),%eax
            cltq 
            movl -12472(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rax
            movl -8208(%rbp,%rax,4),%eax
            andl %eax,%edx
            movl -12468(%rbp),%eax
            cltq 
            movl %edx,-12368(%rbp,%rax,4)
            movl -12468(%rbp),%eax
            cltq 
            movl -12368(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4111ee
.L_4111e4:
            movl $1,-12500(%rbp)
.L_4111ee:

            addl $1,-12468(%rbp)
.L_4111f5:

            movl -12468(%rbp),%eax
            cmpl $7,%eax
            jbe .L_411192
.L_411200:
            cmpl $0,-12500(%rbp)
            je .L_41144d
.L_41120d:
            movl $0,-12504(%rbp)
            movl -12504(%rbp),%eax
            movl %eax,-12496(%rbp)
            movl $0,-12468(%rbp)
            jmp .L_4112eb
.L_411232:

            movl -12468(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%eax
            movl %eax,-12464(%rbp)
            movl -12468(%rbp),%eax
            cltq 
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl -8208(%rbp,%rax,4),%eax
            movl %eax,-12460(%rbp)
            movl -12464(%rbp),%eax
            notl %eax
            andl -12460(%rbp),%eax
            movl %eax,%edx
            movl -12468(%rbp),%eax
            cltq 
            movl %edx,-12336(%rbp,%rax,4)
            movl -12468(%rbp),%eax
            cltq 
            movl -12336(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4112a8
.L_41129e:
            movl $1,-12496(%rbp)
.L_4112a8:

            movl -12460(%rbp),%eax
            notl %eax
            andl -12464(%rbp),%eax
            movl %eax,%edx
            movl -12468(%rbp),%eax
            cltq 
            movl %edx,-12400(%rbp,%rax,4)
            movl -12468(%rbp),%eax
            cltq 
            movl -12400(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4112e4
.L_4112da:
            movl $1,-12504(%rbp)
.L_4112e4:

            addl $1,-12468(%rbp)
.L_4112eb:

            movl -12468(%rbp),%eax
            cmpl $7,%eax
            jbe .L_411232
.L_4112fa:
            cmpl $0,-12496(%rbp)
            je .L_4113e0
.L_411307:
            leaq -8208(%rbp),%rax
            movl -12508(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            leaq -12336(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copyset
.L_411335:
            leaq -8208(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            leaq -12368(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copyset
.L_411363:
            movq -12528(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_411380:
            movq %rax,%rdx
            movl -12508(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12304,%rax
            movq %rdx,(%rax)
            leaq -12304(%rbp),%rax
            movl -12508(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rax,%rdx
            leaq -12304(%rbp),%rax
            movl -12472(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $4,%rcx
            addq %rcx,%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copy
.L_4113d9:
            addl $1,-12508(%rbp)
.L_4113e0:

            movl -12472(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12304,%rax
            movq (%rax),%rcx
            movl -12472(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12296,%rax
            movl (%rax),%eax
            leal 1(%rax),%edx
            movl -12472(%rbp),%esi
            movslq %esi,%rsi
            shlq $4,%rsi
            addq %rbp,%rsi
            subq $12296,%rsi
            movl %edx,(%rsi)
            cltq 
            shlq $3,%rax
            leaq (%rcx,%rax),%rdx
            movq -12448(%rbp),%rax
            movq %rax,(%rdx)
            cmpl $0,-12504(%rbp)
            je .L_411469
.L_411448:
            jmp .L_41144e
.L_41144a:

            nop
            jmp .L_41144e
.L_41144d:

            nop
.L_41144e:

            addl $1,-12472(%rbp)
.L_411455:

            movl -12472(%rbp),%eax
            cmpl -12508(%rbp),%eax
            jl .L_4110ef
.L_411467:
            jmp .L_41146a
.L_411469:

            nop
.L_41146a:

            movl -12472(%rbp),%eax
            cmpl -12508(%rbp),%eax
            jne .L_411540
.L_41147c:
            leaq -8208(%rbp),%rax
            movl -12508(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rax,%rdx
            leaq -12400(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq copyset
.L_4114aa:
            leaq -12400(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq zeroset
.L_4114be:
            movq -12528(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_4114db:
            movq %rax,%rdx
            movl -12508(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12304,%rax
            movq %rdx,(%rax)
            movl -12508(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12296,%rax
            movl $1,(%rax)
            movl -12508(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12304,%rax
            movq (%rax),%rax
            movq -12448(%rbp),%rdx
            movq %rdx,(%rax)
            addl $1,-12508(%rbp)
            jmp .L_411540
.L_41153c:

            nop
            jmp .L_411540
.L_41153f:

            nop
.L_411540:

            addl $1,-12476(%rbp)
.L_411547:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl -12516(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movl 16(%rax),%eax
            cmpl -12476(%rbp),%eax
            jg .L_410d80
.L_411571:
            movq -12528(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_41158e:
            movq %rax,-12432(%rbp)
            movq -12528(%rbp),%rax
            movl 36(%rax),%eax
            cltq 
            shlq $3,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_4115b2:
            movq %rax,-12416(%rbp)
            movq -12528(%rbp),%rax
            movl 72(%rax),%eax
            testl %eax,%eax
            je .L_41185f
.L_4115cb:
            movl $0,-12492(%rbp)
            movl $0,-12484(%rbp)
            movl $0,-12476(%rbp)
            jmp .L_4116b1
.L_4115ee:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movq 8(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $192,%eax
            shrl $2,%eax
            movl %eax,%ecx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movq 8(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $48,%eax
            cmpl %eax,%ecx
            je .L_41164d
.L_411643:
            movl $1,-12492(%rbp)
.L_41164d:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movq 8(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $12,%eax
            shrl $2,%eax
            movl %eax,%ecx
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movq 8(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $3,%eax
            cmpl %eax,%ecx
            je .L_4116aa
.L_4116a0:
            movl $1,-12484(%rbp)
.L_4116aa:

            addl $1,-12476(%rbp)
.L_4116b1:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl 16(%rax),%eax
            cmpl -12476(%rbp),%eax
            jg .L_4115ee
.L_4116cb:
            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            leaq 8(%rax),%rdx
            leaq -12432(%rbp),%rax
            movq %rax,%rsi
            movq %rdx,%rdi
            movl $0,%eax
            callq copy
.L_4116f1:
            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $0,%ecx
            movl $0,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_411716:
            movl %eax,-12456(%rbp)
            cmpl $0,-12492(%rbp)
            je .L_411752
.L_411725:
            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $0,%ecx
            movl $1,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_41174a:
            movl %eax,-12488(%rbp)
            jmp .L_41175e
.L_411752:

            movl -12456(%rbp),%eax
            movl %eax,-12488(%rbp)
.L_41175e:

            cmpl $0,-12484(%rbp)
            je .L_411794
.L_411767:
            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $1,%ecx
            movl $0,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_41178c:
            movl %eax,-12480(%rbp)
            jmp .L_4117a0
.L_411794:

            movl -12456(%rbp),%eax
            movl %eax,-12480(%rbp)
.L_4117a0:

            movl $0,-12476(%rbp)
            jmp .L_41184d
.L_4117af:

            cmpl $10,-12476(%rbp)
            jne .L_4117dc
.L_4117b8:
            movl -12476(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12488(%rbp),%eax
            movl %eax,(%rdx)
            jmp .L_411846
.L_4117dc:

            callq __ctype_b_loc@PLT
.L_4117e1:
            movq (%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            je .L_411824
.L_411800:
            movl -12476(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12480(%rbp),%eax
            movl %eax,(%rdx)
            jmp .L_411846
.L_411824:

            movl -12476(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12456(%rbp),%eax
            movl %eax,(%rdx)
.L_411846:

            addl $1,-12476(%rbp)
.L_41184d:

            cmpl $255,-12476(%rbp)
            jle .L_4117af
.L_41185d:
            jmp .L_41189e
.L_41185f:

            movl $0,-12476(%rbp)
            jmp .L_411892
.L_41186b:

            movl -12476(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rdx,%rax
            movl $4294967295,(%rax)
            addl $1,-12476(%rbp)
.L_411892:

            cmpl $255,-12476(%rbp)
            jle .L_41186b
.L_41189e:

            movl $0,-12476(%rbp)
            jmp .L_411d9c
.L_4118ad:

            movl $0,-12424(%rbp)
            movl $0,-12472(%rbp)
            jmp .L_411999
.L_4118c6:

            movl $0,-12468(%rbp)
            jmp .L_411943
.L_4118d2:

            movq -12528(%rbp),%rax
            movq 64(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rbp,%rdx
            subq $12304,%rdx
            movq (%rdx),%rdx
            movl -12472(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movl -12468(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            leaq -12432(%rbp),%rax
            movq %rax,%rsi
            movq (%rdx),%rdi
            movl $0,%eax
            callq insert
.L_41193c:
            addl $1,-12468(%rbp)
.L_411943:

            movq -12528(%rbp),%rax
            movq 64(%rax),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rbp,%rdx
            subq $12304,%rdx
            movq (%rdx),%rdx
            movl -12472(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $3,%rcx
            addq %rcx,%rdx
            movl (%rdx),%edx
            movl %edx,%edx
            shlq $4,%rdx
            addq %rdx,%rax
            movl 8(%rax),%eax
            cmpl -12468(%rbp),%eax
            jg .L_4118d2
.L_411992:
            addl $1,-12472(%rbp)
.L_411999:

            movl -12476(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12296,%rax
            movl (%rax),%eax
            cmpl -12472(%rbp),%eax
            jg .L_4118c6
.L_4119bc:
            movq -12528(%rbp),%rax
            movl 72(%rax),%eax
            testl %eax,%eax
            je .L_411a29
.L_4119ca:
            movl $0,-12472(%rbp)
            jmp .L_411a13
.L_4119d6:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movq 8(%rax),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            leaq -12432(%rbp),%rax
            movq %rax,%rsi
            movq (%rdx),%rdi
            movl $0,%eax
            callq insert
.L_411a0c:
            addl $1,-12472(%rbp)
.L_411a13:

            movq -12528(%rbp),%rax
            movq 48(%rax),%rax
            movl 16(%rax),%eax
            cmpl -12472(%rbp),%eax
            jg .L_4119d6
.L_411a29:

            movl $0,-12492(%rbp)
            leaq -8208(%rbp),%rax
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movq %rax,%rsi
            movl $10,%edi
            movl $0,%eax
            callq tstbit
.L_411a5c:
            testl %eax,%eax
            je .L_411ad0
.L_411a60:
            movl $0,-12472(%rbp)
            jmp .L_411ac2
.L_411a6c:

            movq -12432(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $192,%eax
            shrl $2,%eax
            movl %eax,%ecx
            movq -12432(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $48,%eax
            cmpl %eax,%ecx
            je .L_411abb
.L_411ab1:
            movl $1,-12492(%rbp)
.L_411abb:

            addl $1,-12472(%rbp)
.L_411ac2:

            movl -12424(%rbp),%eax
            cmpl -12472(%rbp),%eax
            jg .L_411a6c
.L_411ad0:

            movl $0,-12484(%rbp)
            movl $0,-12472(%rbp)
            jmp .L_411b21
.L_411ae6:

            movl -12472(%rbp),%eax
            cltq 
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl -8208(%rbp,%rax,4),%edx
            movl -12472(%rbp),%eax
            cltq 
            movl letters.5589(,%rax,4),%eax
            andl %edx,%eax
            testl %eax,%eax
            jne .L_411b2e
.L_411b1a:
            addl $1,-12472(%rbp)
.L_411b21:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            jbe .L_411ae6
.L_411b2c:
            jmp .L_411b2f
.L_411b2e:

            nop
.L_411b2f:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            ja .L_411ba8
.L_411b3a:
            movl $0,-12472(%rbp)
            jmp .L_411b9a
.L_411b46:

            movq -12432(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $12,%eax
            shrl $2,%eax
            movl %eax,%ecx
            movq -12432(%rbp),%rax
            movl -12472(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl 4(%rax),%eax
            andl $3,%eax
            cmpl %eax,%ecx
            je .L_411b93
.L_411b89:
            movl $1,-12484(%rbp)
.L_411b93:

            addl $1,-12472(%rbp)
.L_411b9a:

            movl -12424(%rbp),%eax
            cmpl -12472(%rbp),%eax
            jg .L_411b46
.L_411ba8:

            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $0,%ecx
            movl $0,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_411bcd:
            movl %eax,-12456(%rbp)
            cmpl $0,-12492(%rbp)
            je .L_411c09
.L_411bdc:
            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $0,%ecx
            movl $1,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_411c01:
            movl %eax,-12488(%rbp)
            jmp .L_411c15
.L_411c09:

            movl -12456(%rbp),%eax
            movl %eax,-12488(%rbp)
.L_411c15:

            cmpl $0,-12484(%rbp)
            je .L_411c4b
.L_411c1e:
            leaq -12432(%rbp),%rsi
            movq -12528(%rbp),%rax
            movl $1,%ecx
            movl $0,%edx
            movq %rax,%rdi
            movl $0,%eax
            callq state_index
.L_411c43:
            movl %eax,-12480(%rbp)
            jmp .L_411c57
.L_411c4b:

            movl -12456(%rbp),%eax
            movl %eax,-12480(%rbp)
.L_411c57:

            movl $0,-12472(%rbp)
            jmp .L_411d86
.L_411c66:

            movl $0,-12468(%rbp)
            jmp .L_411d70
.L_411c75:

            movl -12472(%rbp),%eax
            cltq 
            movl -12476(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movl -8208(%rbp,%rax,4),%edx
            movl -12468(%rbp),%eax
            movl %eax,%ecx
            sarl %cl,%edx
            movl %edx,%eax
            andl $1,%eax
            testl %eax,%eax
            je .L_411d69
.L_411cab:
            movl -12472(%rbp),%eax
            cltq 
            shll $5,%eax
            movl %eax,%edx
            movl -12468(%rbp),%eax
            addl %edx,%eax
            movl %eax,-12452(%rbp)
            cmpl $10,-12452(%rbp)
            jne .L_411cf3
.L_411ccf:
            movl -12452(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12488(%rbp),%eax
            movl %eax,(%rdx)
            jmp .L_411d69
.L_411cf3:

            callq __ctype_b_loc@PLT
.L_411cf8:
            movq (%rax),%rax
            movl -12452(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            je .L_411d3b
.L_411d17:
            movl -12452(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12480(%rbp),%eax
            movl %eax,(%rdx)
            jmp .L_411d69
.L_411d3b:

            cmpl $255,-12452(%rbp)
            jg .L_411d69
.L_411d47:
            movl -12452(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -12536(%rbp),%rax
            addq %rax,%rdx
            movl -12456(%rbp),%eax
            movl %eax,(%rdx)
.L_411d69:

            addl $1,-12468(%rbp)
.L_411d70:

            movl -12468(%rbp),%eax
            cmpl $31,%eax
            jbe .L_411c75
.L_411d7f:
            addl $1,-12472(%rbp)
.L_411d86:

            movl -12472(%rbp),%eax
            cmpl $7,%eax
            jbe .L_411c66
.L_411d95:
            addl $1,-12476(%rbp)
.L_411d9c:

            movl -12476(%rbp),%eax
            cmpl -12508(%rbp),%eax
            jl .L_4118ad
.L_411dae:
            movl $0,-12476(%rbp)
            jmp .L_411de1
.L_411dba:

            movl -12476(%rbp),%eax
            cltq 
            shlq $4,%rax
            addq %rbp,%rax
            subq $12304,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_411dda:
            addl $1,-12476(%rbp)
.L_411de1:

            movl -12476(%rbp),%eax
            cmpl -12508(%rbp),%eax
            jl .L_411dba
.L_411def:
            movq -12432(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_411dfe:
            movq -12416(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_411e0d:
            nop
            movq -8(%rbp),%rax
            xorq %fs:40,%rax
            je .L_411e22
.L_411e1d:
            callq __stack_chk_fail@PLT
.L_411e22:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl build_state
.type build_state, @function
build_state:
#-----------------------------------
# END   - Function Header

build_state:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movl %edi,-20(%rbp)
            movq %rsi,-32(%rbp)
            movq -32(%rbp),%rax
            movl 80(%rax),%eax
            cmpl $1023,%eax
            jle .L_411f24
.L_411e45:
            movl $0,-16(%rbp)
            jmp .L_411f09
.L_411e51:

            movq -32(%rbp),%rax
            movq 88(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_411eac
.L_411e6e:
            movq -32(%rbp),%rax
            movq 88(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_411e8e:
            movq -32(%rbp),%rax
            movq 88(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq $0,(%rax)
            jmp .L_411f05
.L_411eac:

            movq -32(%rbp),%rax
            movq 104(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_411f05
.L_411ec9:
            movq -32(%rbp),%rax
            movq 104(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_411ee9:
            movq -32(%rbp),%rax
            movq 104(%rax),%rax
            movl -16(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq $0,(%rax)
.L_411f05:

            addl $1,-16(%rbp)
.L_411f09:

            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cmpl -16(%rbp),%eax
            jg .L_411e51
.L_411f19:
            movq -32(%rbp),%rax
            movl $0,80(%rax)
.L_411f24:

            movq -32(%rbp),%rax
            movl 80(%rax),%eax
            leal 1(%rax),%edx
            movq -32(%rbp),%rax
            movl %edx,80(%rax)
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl $0,(%rax)
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 24(%rax),%eax
            testb %al,%al
            je .L_411f90
.L_411f89:
            movl $128,%eax
            jmp .L_411f95
.L_411f90:

            movl $32,%eax
.L_411f95:

            andl %edx,%eax
            testl %eax,%eax
            je .L_412017
.L_411f9b:
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_411fdb
.L_411fd4:
            movl $4,%eax
            jmp .L_411fe0
.L_411fdb:

            movl $1,%eax
.L_411fe0:

            andl %edx,%eax
            testl %eax,%eax
            je .L_412017
.L_411fe6:
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            orl $4,%eax
            movl %eax,(%rdx)
.L_412017:

            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 24(%rax),%eax
            testb %al,%al
            je .L_412057
.L_412050:
            movl $64,%eax
            jmp .L_41205c
.L_412057:

            movl $16,%eax
.L_41205c:

            andl %edx,%eax
            testl %eax,%eax
            je .L_4120de
.L_412062:
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_4120a2
.L_41209b:
            movl $8,%eax
            jmp .L_4120a7
.L_4120a2:

            movl $2,%eax
.L_4120a7:

            andl %edx,%eax
            testl %eax,%eax
            je .L_4120de
.L_4120ad:
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            orl $2,%eax
            movl %eax,(%rdx)
.L_4120de:

            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 24(%rax),%eax
            testb %al,%al
            je .L_41211e
.L_412117:
            movl $64,%eax
            jmp .L_412123
.L_41211e:

            movl $16,%eax
.L_412123:

            andl %edx,%eax
            testl %eax,%eax
            je .L_4121a5
.L_412129:
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            movzbl %al,%edx
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $5,%rcx
            addq %rcx,%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_412169
.L_412162:
            movl $4,%eax
            jmp .L_41216e
.L_412169:

            movl $1,%eax
.L_41216e:

            andl %edx,%eax
            testl %eax,%eax
            je .L_4121a5
.L_412174:
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movl -20(%rbp),%ecx
            movslq %ecx,%rcx
            shlq $2,%rcx
            addq %rcx,%rax
            movl (%rax),%eax
            orl $1,%eax
            movl %eax,(%rdx)
.L_4121a5:

            movl $1024,%edi
            movl $0,%eax
            callq xmalloc_1
.L_4121b4:
            movq %rax,-8(%rbp)
            movq -8(%rbp),%rdx
            movq -32(%rbp),%rcx
            movl -20(%rbp),%eax
            movq %rcx,%rsi
            movl %eax,%edi
            callq dfastate
.L_4121cd:
            movl $0,-16(%rbp)
            jmp .L_412372
.L_4121d9:

            movl -16(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%edx
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cmpl %eax,%edx
            jl .L_41236e
.L_4121fe:
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            movl %eax,-12(%rbp)
            jmp .L_41221b
.L_41220a:

            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            leal (%rax,%rax),%edx
            movq -32(%rbp),%rax
            movl %edx,76(%rax)
.L_41221b:

            movl -16(%rbp),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl (%rax),%edx
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cmpl %eax,%edx
            jge .L_41220a
.L_41223c:
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            addl $1,%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -32(%rbp),%rax
            movq 96(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_412268:
            movq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rdx,96(%rax)
            movq -32(%rbp),%rax
            movq 96(%rax),%rax
            leaq 8(%rax),%rdx
            movq -32(%rbp),%rax
            movq %rdx,88(%rax)
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -32(%rbp),%rax
            movq 104(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_4122b0:
            movq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rdx,104(%rax)
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -32(%rbp),%rax
            movq 112(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_4122e4:
            movq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rdx,112(%rax)
            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cltq 
            leaq (,%rax,4),%rdx
            movq -32(%rbp),%rax
            movq 120(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq xrealloc_1
.L_412318:
            movq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rdx,120(%rax)
            jmp .L_412362
.L_412325:

            movq -32(%rbp),%rax
            movq 88(%rax),%rax
            movl -12(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq $0,(%rax)
            movq -32(%rbp),%rax
            movq 104(%rax),%rcx
            movl -12(%rbp),%eax
            leal 1(%rax),%edx
            movl %edx,-12(%rbp)
            cltq 
            shlq $3,%rax
            addq %rcx,%rax
            movq $0,(%rax)
.L_412362:

            movq -32(%rbp),%rax
            movl 76(%rax),%eax
            cmpl -12(%rbp),%eax
            jg .L_412325
.L_41236e:

            addl $1,-16(%rbp)
.L_412372:

            cmpl $255,-16(%rbp)
            jle .L_4121d9
.L_41237f:
            movq -32(%rbp),%rax
            movq 120(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rax,%rdx
            movq -8(%rbp),%rax
            movl 40(%rax),%eax
            movl %eax,(%rdx)
            movq -8(%rbp),%rax
            addq $40,%rax
            movl $4294967295,(%rax)
            movq -32(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 27(%rax),%eax
            testb %al,%al
            je .L_4123e6
.L_4123c8:
            movq -32(%rbp),%rax
            movq 104(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rax,(%rdx)
            jmp .L_412402
.L_4123e6:

            movq -32(%rbp),%rax
            movq 88(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rax,(%rdx)
.L_412402:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl build_state_zero
.type build_state_zero, @function
build_state_zero:
#-----------------------------------
# END   - Function Header

build_state_zero:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movl $1,76(%rax)
            movq -8(%rbp),%rax
            movl $0,80(%rax)
            movq -8(%rbp),%rax
            movl 76(%rax),%eax
            addl $1,%eax
            movl $8,%esi
            movl %eax,%edi
            movl $0,%eax
            callq xcalloc
.L_412442:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,96(%rax)
            movq -8(%rbp),%rax
            movq 96(%rax),%rax
            leaq 8(%rax),%rdx
            movq -8(%rbp),%rax
            movq %rdx,88(%rax)
            movq -8(%rbp),%rax
            movl 76(%rax),%eax
            movl $8,%esi
            movl %eax,%edi
            movl $0,%eax
            callq xcalloc
.L_412479:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,104(%rax)
            movq -8(%rbp),%rax
            movl 76(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_41249e:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,112(%rax)
            movq -8(%rbp),%rax
            movl 76(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_4124c3:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,120(%rax)
            movq -8(%rbp),%rax
            movq %rax,%rsi
            movl $0,%edi
            movl $0,%eax
            callq build_state
.L_4124e4:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfaexec
.type dfaexec, @function
dfaexec:
#-----------------------------------
# END   - Function Header

dfaexec:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r15
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $72,%rsp
            movq %rdi,-72(%rbp)
            movq %rsi,-80(%rbp)
            movq %rdx,-88(%rbp)
            movl %ecx,-92(%rbp)
            movq %r8,-104(%rbp)
            movq %r9,-112(%rbp)
            movl sbit_init.5710(%rip),%eax
            testl %eax,%eax
            jne .L_412594
.L_412519:
            movl $1,sbit_init.5710(%rip)
            movl $0,-52(%rbp)
            jmp .L_41258b
.L_41252c:

            cmpl $10,-52(%rbp)
            jne .L_412544
.L_412532:
            movl -52(%rbp),%eax
            cltq 
            movl $4,sbit.5709(,%rax,4)
            jmp .L_412587
.L_412544:

            callq __ctype_b_loc@PLT
.L_412549:
            movq (%rax),%rax
            movl -52(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            je .L_412577
.L_412565:
            movl -52(%rbp),%eax
            cltq 
            movl $2,sbit.5709(,%rax,4)
            jmp .L_412587
.L_412577:

            movl -52(%rbp),%eax
            cltq 
            movl $1,sbit.5709(,%rax,4)
.L_412587:

            addl $1,-52(%rbp)
.L_41258b:

            cmpl $255,-52(%rbp)
            jle .L_41252c
.L_412594:

            movq -72(%rbp),%rax
            movl 76(%rax),%eax
            testl %eax,%eax
            jne .L_4125b0
.L_41259f:
            movq -72(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq build_state_zero
.L_4125b0:

            movl $0,%r14d
            movl %r14d,%ebx
            movq -80(%rbp),%r12
            movq -72(%rbp),%rax
            movq 88(%rax),%r15
            movq -88(%rbp),%rax
            movb $10,(%rax)
.L_4125cc:

            movslq %ebx,%rax
            shlq $3,%rax
            addq %r15,%rax
            movq (%rax),%r13
            testq %r13,%r13
            je .L_41263d
.L_4125de:

            movq %r12,%rax
            leaq 1(%rax),%r12
            movzbl (%rax),%eax
            movzbl %al,%eax
            shlq $2,%rax
            addq %r13,%rax
            movl (%rax),%r14d
            movslq %r14d,%rax
            shlq $3,%rax
            addq %r15,%rax
            movq (%rax),%r13
            testq %r13,%r13
            je .L_412631
.L_412607:
            movq %r12,%rax
            leaq 1(%rax),%r12
            movzbl (%rax),%eax
            movzbl %al,%eax
            shlq $2,%rax
            addq %r13,%rax
            movl (%rax),%ebx
            movslq %ebx,%rax
            shlq $3,%rax
            addq %r15,%rax
            movq (%rax),%r13
            testq %r13,%r13
            jne .L_4125de
.L_41262f:
            jmp .L_41263d
.L_412631:

            nop
            movl %ebx,%r13d
            movl %r14d,%ebx
            movl %r13d,%r14d
            jmp .L_41263e
.L_41263d:

            nop
.L_41263e:

            testl %ebx,%ebx
            js .L_41270b
.L_412646:
            cmpq -88(%rbp),%r12
            ja .L_41270b
.L_412650:
            movq -72(%rbp),%rax
            movq 104(%rax),%rax
            movslq %ebx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_41270b
.L_41266e:
            movq -72(%rbp),%rax
            movq 112(%rax),%rax
            movslq %ebx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%edx
            movzbl (%r12),%eax
            movzbl %al,%eax
            cltq 
            movl sbit.5709(,%rax,4),%eax
            andl %edx,%eax
            testl %eax,%eax
            je .L_4126d8
.L_412699:
            cmpq $0,-112(%rbp)
            je .L_4126d0
.L_4126a0:
            movq -72(%rbp),%rax
            movq 48(%rax),%rax
            movslq %ebx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movzbl 26(%rax),%eax
            testb %al,%al
            je .L_4126c6
.L_4126ba:
            movq -112(%rbp),%rax
            movl $1,(%rax)
            jmp .L_4126d0
.L_4126c6:

            movq -112(%rbp),%rax
            movl $0,(%rax)
.L_4126d0:

            movq %r12,%rax
            jmp .L_412793
.L_4126d8:

            movl %ebx,%r14d
            movq -72(%rbp),%rax
            movq 104(%rax),%rax
            movslq %ebx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rdx
            movq %r12,%rax
            leaq 1(%rax),%r12
            movzbl (%rax),%eax
            movzbl %al,%eax
            shlq $2,%rax
            addq %rdx,%rax
            movl (%rax),%ebx
            jmp .L_41278e
.L_41270b:

            cmpq $0,-104(%rbp)
            je .L_412733
.L_412712:
            cmpq -88(%rbp),%r12
            ja .L_412733
.L_412718:
            leaq -1(%r12),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_412733
.L_412724:
            movq -104(%rbp),%rax
            movl (%rax),%eax
            leal 1(%rax),%edx
            movq -104(%rbp),%rax
            movl %edx,(%rax)
.L_412733:

            cmpq -88(%rbp),%r12
            jbe .L_412740
.L_412739:
            movl $0,%eax
            jmp .L_412793
.L_412740:

            testl %ebx,%ebx
            js .L_412761
.L_412744:
            movq -72(%rbp),%rax
            movq %rax,%rsi
            movl %ebx,%edi
            movl $0,%eax
            callq build_state
.L_412757:
            movq -72(%rbp),%rax
            movq 88(%rax),%r15
            jmp .L_41278e
.L_412761:

            leaq -1(%r12),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_412789
.L_41276d:
            cmpl $0,-92(%rbp)
            je .L_412789
.L_412773:
            movq -72(%rbp),%rax
            movq 120(%rax),%rax
            movslq %r14d,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%ebx
            jmp .L_41278e
.L_412789:

            movl $0,%ebx
.L_41278e:

            jmp .L_4125cc
.L_412793:

            addq $72,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %r15
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl dfainit
.type dfainit, @function
dfainit:
#-----------------------------------
# END   - Function Header

dfainit:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movl $1,12(%rax)
            movq -8(%rbp),%rax
            movl 12(%rax),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_4127d3:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,(%rax)
            movq -8(%rbp),%rax
            movl $0,8(%rax)
            movq -8(%rbp),%rax
            movl $1,28(%rax)
            movq -8(%rbp),%rax
            movl 28(%rax),%eax
            cltq 
            shlq $2,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc_1
.L_41280d:
            movq %rax,%rdx
            movq -8(%rbp),%rax
            movq %rdx,16(%rax)
            movq -8(%rbp),%rax
            movl $0,40(%rax)
            movq -8(%rbp),%rax
            movl 40(%rax),%edx
            movq -8(%rbp),%rax
            movl %edx,36(%rax)
            movq -8(%rbp),%rax
            movl 36(%rax),%edx
            movq -8(%rbp),%rax
            movl %edx,32(%rax)
            movq -8(%rbp),%rax
            movl 32(%rax),%edx
            movq -8(%rbp),%rax
            movl %edx,24(%rax)
            movq -8(%rbp),%rax
            movl $0,72(%rax)
            movq -8(%rbp),%rax
            movl $0,76(%rax)
            movq -8(%rbp),%rax
            movq $0,128(%rax)
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfacomp
.type dfacomp, @function
dfacomp:
#-----------------------------------
# END   - Function Header

dfacomp:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $56,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq %rdx,-56(%rbp)
            movl %ecx,-60(%rbp)
            movl case_fold(%rip),%eax
            testl %eax,%eax
            je .L_412a18
.L_41289b:
            movq -48(%rbp),%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_4128a7:
            movq %rax,-24(%rbp)
            cmpq $0,-24(%rbp)
            jne .L_4128bc
.L_4128b2:
            movl $.L_417e90,%edi
            callq dfaerror
.L_4128bc:

            movl $0,case_fold(%rip)
            movl $0,-28(%rbp)
            jmp .L_412952
.L_4128d2:

            callq __ctype_b_loc@PLT
.L_4128d7:
            movq (%rax),%rax
            movl -28(%rbp),%edx
            movslq %edx,%rcx
            movq -40(%rbp),%rdx
            addq %rcx,%rdx
            movzbl (%rdx),%edx
            movsbq %dl,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_41292f
.L_412903:
            movl -28(%rbp),%eax
            movslq %eax,%rdx
            movq -24(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl -28(%rbp),%eax
            movslq %eax,%rdx
            movq -40(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            movl %eax,%edi
            callq tolower@PLT
.L_41292b:
            movb %al,(%rbx)
            jmp .L_41294e
.L_41292f:

            movl -28(%rbp),%eax
            movslq %eax,%rdx
            movq -24(%rbp),%rax
            addq %rax,%rdx
            movl -28(%rbp),%eax
            movslq %eax,%rcx
            movq -40(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            movb %al,(%rdx)
.L_41294e:

            addl $1,-28(%rbp)
.L_412952:

            movl -28(%rbp),%eax
            cltq 
            cmpq -48(%rbp),%rax
            jb .L_4128d2
.L_412961:
            movq -56(%rbp),%rax
            movq %rax,%rdi
            callq dfainit
.L_41296d:
            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            movq -24(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq dfaparse
.L_412984:
            movq -24(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412990:
            movq -56(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq dfamust
.L_4129a1:
            movq -56(%rbp),%rax
            movl $0,40(%rax)
            movq -56(%rbp),%rax
            movl 40(%rax),%edx
            movq -56(%rbp),%rax
            movl %edx,36(%rax)
            movq -56(%rbp),%rax
            movl 36(%rax),%edx
            movq -56(%rbp),%rax
            movl %edx,32(%rax)
            movq -56(%rbp),%rax
            movl 32(%rax),%edx
            movq -56(%rbp),%rax
            movl %edx,24(%rax)
            movq -56(%rbp),%rax
            movl 24(%rax),%edx
            movq -56(%rbp),%rax
            movl %edx,8(%rax)
            movl $1,case_fold(%rip)
            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            movq -40(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq dfaparse
.L_412a05:
            movl -60(%rbp),%edx
            movq -56(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq dfaanalyze
.L_412a16:
            jmp .L_412a5d
.L_412a18:

            movq -56(%rbp),%rax
            movq %rax,%rdi
            callq dfainit
.L_412a24:
            movq -56(%rbp),%rdx
            movq -48(%rbp),%rcx
            movq -40(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq dfaparse
.L_412a3b:
            movq -56(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq dfamust
.L_412a4c:
            movl -60(%rbp),%edx
            movq -56(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq dfaanalyze
.L_412a5d:

            nop
            addq $56,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl dfafree
.type dfafree, @function
dfafree:
#-----------------------------------
# END   - Function Header

dfafree:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq -40(%rbp),%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412a80:
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412a90:
            movl $0,-20(%rbp)
            jmp .L_412abe
.L_412a99:

            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $5,%rdx
            addq %rdx,%rax
            movq 8(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412aba:
            addl $1,-20(%rbp)
.L_412abe:

            movq -40(%rbp),%rax
            movl 56(%rax),%eax
            cmpl -20(%rbp),%eax
            jg .L_412a99
.L_412aca:
            movq -40(%rbp),%rax
            movq 48(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412ada:
            movl $0,-20(%rbp)
            jmp .L_412b24
.L_412ae3:

            movq -40(%rbp),%rax
            movq 64(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_412b20
.L_412b00:
            movq -40(%rbp),%rax
            movq 64(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $4,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412b20:

            addl $1,-20(%rbp)
.L_412b24:

            movq -40(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -20(%rbp),%eax
            jg .L_412ae3
.L_412b30:
            movq -40(%rbp),%rax
            movq 64(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412b40:
            movl $0,-20(%rbp)
            jmp .L_412bcc
.L_412b4c:

            movq -40(%rbp),%rax
            movq 88(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_412b8b
.L_412b69:
            movq -40(%rbp),%rax
            movq 88(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412b89:
            jmp .L_412bc8
.L_412b8b:

            movq -40(%rbp),%rax
            movq 104(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_412bc8
.L_412ba8:
            movq -40(%rbp),%rax
            movq 104(%rax),%rax
            movl -20(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412bc8:

            addl $1,-20(%rbp)
.L_412bcc:

            movq -40(%rbp),%rax
            movl 76(%rax),%eax
            cmpl -20(%rbp),%eax
            jg .L_412b4c
.L_412bdc:
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412bec:
            movq -40(%rbp),%rax
            movq 104(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412bfc:
            movq -40(%rbp),%rax
            movq 120(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412c0c:
            movq -40(%rbp),%rax
            movq 128(%rax),%rax
            movq %rax,-16(%rbp)
            jmp .L_412c4d
.L_412c1d:

            movq -16(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-8(%rbp)
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412c39:
            movq -16(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412c45:
            movq -8(%rbp),%rax
            movq %rax,-16(%rbp)
.L_412c4d:

            cmpq $0,-16(%rbp)
            jne .L_412c1d
.L_412c54:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl icatalloc
.type icatalloc, @function
icatalloc:
#-----------------------------------
# END   - Function Header

icatalloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            cmpq $0,-32(%rbp)
            je .L_412c7c
.L_412c6e:
            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_412c7a:
            jmp .L_412c81
.L_412c7c:

            movl $0,%eax
.L_412c81:

            movl %eax,-12(%rbp)
            cmpq $0,-24(%rbp)
            jne .L_412c94
.L_412c8b:
            movl $0,-16(%rbp)
            jmp .L_412caf
.L_412c94:

            cmpl $0,-12(%rbp)
            jne .L_412ca0
.L_412c9a:
            movq -24(%rbp),%rax
            jmp .L_412d1b
.L_412ca0:

            movq -24(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_412cac:
            movl %eax,-16(%rbp)
.L_412caf:

            cmpq $0,-24(%rbp)
            jne .L_412ccc
.L_412cb6:
            movl -12(%rbp),%eax
            addl $1,%eax
            cltq 
            movq %rax,%rdi
            callq malloc@PLT
.L_412cc6:
            movq %rax,-8(%rbp)
            jmp .L_412ced
.L_412ccc:

            movl -16(%rbp),%edx
            movl -12(%rbp),%eax
            addl %edx,%eax
            addl $1,%eax
            movslq %eax,%rdx
            movq -24(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_412ce9:
            movq %rax,-8(%rbp)
.L_412ced:

            cmpq $0,-8(%rbp)
            je .L_412d17
.L_412cf4:
            cmpq $0,-32(%rbp)
            je .L_412d17
.L_412cfb:
            movl -16(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rax,%rsi
            movq %rdx,%rdi
            callq strcpy@PLT
.L_412d17:

            movq -8(%rbp),%rax
.L_412d1b:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl icpyalloc
.type icpyalloc, @function
icpyalloc:
#-----------------------------------
# END   - Function Header

icpyalloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movq %rax,%rsi
            movl $0,%edi
            movl $0,%eax
            callq icatalloc
.L_412d3f:
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl istrstr
.type istrstr, @function
istrstr:
#-----------------------------------
# END   - Function Header

istrstr:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_412d5d:
            movl %eax,-12(%rbp)
            movq -24(%rbp),%rax
            movq %rax,-8(%rbp)
            jmp .L_412d92
.L_412d6a:

            movl -12(%rbp),%eax
            movslq %eax,%rdx
            movq -32(%rbp),%rcx
            movq -8(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq strncmp@PLT
.L_412d83:
            testl %eax,%eax
            jne .L_412d8d
.L_412d87:
            movq -8(%rbp),%rax
            jmp .L_412da2
.L_412d8d:

            addq $1,-8(%rbp)
.L_412d92:

            movq -8(%rbp),%rax
            movzbl (%rax),%eax
            testb %al,%al
            jne .L_412d6a
.L_412d9d:
            movl $0,%eax
.L_412da2:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl ifree
.type ifree, @function
ifree:
#-----------------------------------
# END   - Function Header

ifree:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_412dc3
.L_412db7:
            movq -8(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412dc3:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl freelist
.type freelist, @function
freelist:
#-----------------------------------
# END   - Function Header

freelist:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            cmpq $0,-24(%rbp)
            je .L_412e3e
.L_412dd9:
            movl $0,-4(%rbp)
            jmp .L_412e20
.L_412de2:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412e01:
            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq $0,(%rax)
            addl $1,-4(%rbp)
.L_412e20:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_412de2
.L_412e3c:
            jmp .L_412e3f
.L_412e3e:

            nop
.L_412e3f:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl enlist
.type enlist, @function
enlist:
#-----------------------------------
# END   - Function Header

enlist:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movl %edx,-36(%rbp)
            cmpq $0,-24(%rbp)
            jne .L_412e65
.L_412e5b:
            movl $0,%eax
            jmp .L_413062
.L_412e65:

            movq -32(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq icpyalloc
.L_412e76:
            movq %rax,-32(%rbp)
            cmpq $0,-32(%rbp)
            jne .L_412e9c
.L_412e81:
            movq -24(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_412e92:
            movl $0,%eax
            jmp .L_413062
.L_412e9c:

            movl -36(%rbp),%eax
            movslq %eax,%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movb $0,(%rax)
            movl $0,-8(%rbp)
            jmp .L_412efe
.L_412eb5:

            movl -8(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq -32(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq istrstr
.L_412ee0:
            testq %rax,%rax
            je .L_412efa
.L_412ee5:
            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412ef1:
            movq -24(%rbp),%rax
            jmp .L_413062
.L_412efa:

            addl $1,-8(%rbp)
.L_412efe:

            movl -8(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_412eb5
.L_412f1a:
            movl $0,-4(%rbp)
            jmp .L_412fd0
.L_412f26:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rdx
            movq -32(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq istrstr
.L_412f51:
            testq %rax,%rax
            jne .L_412f5c
.L_412f56:
            addl $1,-4(%rbp)
            jmp .L_412fd0
.L_412f5c:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_412f7b:
            subl $1,-8(%rbp)
            movl -8(%rbp),%eax
            cmpl -4(%rbp),%eax
            je .L_412ff2
.L_412f87:
            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rax,%rdx
            movl -8(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -24(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rax,(%rdx)
            movl -8(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq $0,(%rax)
.L_412fd0:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_412f26
.L_412ff0:
            jmp .L_412ff3
.L_412ff2:

            nop
.L_412ff3:

            movl -8(%rbp),%eax
            addl $2,%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq realloc@PLT
.L_413012:
            movq %rax,-24(%rbp)
            cmpq $0,-24(%rbp)
            jne .L_413024
.L_41301d:
            movl $0,%eax
            jmp .L_413062
.L_413024:

            movl -8(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rax,%rdx
            movq -32(%rbp),%rax
            movq %rax,(%rdx)
            movl -8(%rbp),%eax
            cltq 
            addq $1,%rax
            leaq (,%rax,8),%rdx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movq $0,(%rax)
            movq -24(%rbp),%rax
.L_413062:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl comsubs
.type comsubs, @function
comsubs:
#-----------------------------------
# END   - Function Header

comsubs:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            cmpq $0,-40(%rbp)
            je .L_413082
.L_41307b:
            cmpq $0,-48(%rbp)
            jne .L_41308c
.L_413082:

            movl $0,%eax
            jmp .L_4131ac
.L_41308c:

            movl $8,%edi
            callq malloc@PLT
.L_413096:
            movq %rax,-24(%rbp)
            cmpq $0,-24(%rbp)
            jne .L_4130ab
.L_4130a1:
            movl $0,%eax
            jmp .L_4131ac
.L_4130ab:

            movq -24(%rbp),%rax
            movq $0,(%rax)
            movq -40(%rbp),%rax
            movq %rax,-16(%rbp)
            jmp .L_413196
.L_4130c3:

            movl $0,-28(%rbp)
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%edx
            movq -48(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq strchr@PLT
.L_4130e2:
            movq %rax,-8(%rbp)
            jmp .L_41315b
.L_4130e8:

            movl $1,-32(%rbp)
            jmp .L_4130f5
.L_4130f1:

            addl $1,-32(%rbp)
.L_4130f5:

            movl -32(%rbp),%eax
            movslq %eax,%rdx
            movq -16(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_41312d
.L_413109:
            movl -32(%rbp),%eax
            movslq %eax,%rdx
            movq -16(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            movl -32(%rbp),%eax
            movslq %eax,%rcx
            movq -8(%rbp),%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            je .L_4130f1
.L_41312d:

            movl -32(%rbp),%eax
            cmpl -28(%rbp),%eax
            jle .L_41313b
.L_413135:
            movl -32(%rbp),%eax
            movl %eax,-28(%rbp)
.L_41313b:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            movq -8(%rbp),%rdx
            addq $1,%rdx
            movl %eax,%esi
            movq %rdx,%rdi
            callq strchr@PLT
.L_413157:
            movq %rax,-8(%rbp)
.L_41315b:

            cmpq $0,-8(%rbp)
            jne .L_4130e8
.L_413162:
            cmpl $0,-28(%rbp)
            je .L_413190
.L_413168:
            movl -28(%rbp),%edx
            movq -16(%rbp),%rcx
            movq -24(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enlist
.L_413183:
            movq %rax,-24(%rbp)
            cmpq $0,-24(%rbp)
            je .L_4131a7
.L_41318e:
            jmp .L_413191
.L_413190:

            nop
.L_413191:

            addq $1,-16(%rbp)
.L_413196:

            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            testb %al,%al
            jne .L_4130c3
.L_4131a5:
            jmp .L_4131a8
.L_4131a7:

            nop
.L_4131a8:

            movq -24(%rbp),%rax
.L_4131ac:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl addlists
.type addlists, @function
addlists:
#-----------------------------------
# END   - Function Header

addlists:

            pushq %rbp
            movq %rsp,%rbp
            subq $32,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            cmpq $0,-24(%rbp)
            je .L_4131cc
.L_4131c5:
            cmpq $0,-32(%rbp)
            jne .L_4131d6
.L_4131cc:

            movl $0,%eax
            jmp .L_413261
.L_4131d6:

            movl $0,-4(%rbp)
            jmp .L_41323e
.L_4131df:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_4131fe:
            movq %rax,%rsi
            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rcx
            movq -24(%rbp),%rax
            movq %rsi,%rdx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enlist
.L_41322f:
            movq %rax,-24(%rbp)
            cmpq $0,-24(%rbp)
            je .L_41325c
.L_41323a:
            addl $1,-4(%rbp)
.L_41323e:

            movl -4(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -32(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4131df
.L_41325a:
            jmp .L_41325d
.L_41325c:

            nop
.L_41325d:

            movq -24(%rbp),%rax
.L_413261:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl inboth
.type inboth, @function
inboth:
#-----------------------------------
# END   - Function Header

inboth:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            cmpq $0,-40(%rbp)
            je .L_413281
.L_41327a:
            cmpq $0,-48(%rbp)
            jne .L_41328b
.L_413281:

            movl $0,%eax
            jmp .L_4133b8
.L_41328b:

            movl $8,%edi
            callq malloc@PLT
.L_413295:
            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            jne .L_4132aa
.L_4132a0:
            movl $0,%eax
            jmp .L_4133b8
.L_4132aa:

            movq -16(%rbp),%rax
            movq $0,(%rax)
            movl $0,-24(%rbp)
            jmp .L_413394
.L_4132c1:

            movl $0,-20(%rbp)
            jmp .L_413370
.L_4132cd:

            movl -20(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rdx
            movl -24(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rcx
            movq -40(%rbp),%rax
            addq %rcx,%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq comsubs
.L_41330b:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            jne .L_413331
.L_413316:
            movq -16(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_413327:
            movl $0,%eax
            jmp .L_4133b8
.L_413331:

            movq -8(%rbp),%rdx
            movq -16(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq addlists
.L_413349:
            movq %rax,-16(%rbp)
            movq -8(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_41335e:
            cmpq $0,-16(%rbp)
            jne .L_41336c
.L_413365:
            movl $0,%eax
            jmp .L_4133b8
.L_41336c:

            addl $1,-20(%rbp)
.L_413370:

            movl -20(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4132cd
.L_413390:
            addl $1,-24(%rbp)
.L_413394:

            movl -24(%rbp),%eax
            cltq 
            leaq (,%rax,8),%rdx
            movq -40(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_4132c1
.L_4133b4:
            movq -16(%rbp),%rax
.L_4133b8:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl resetmust
.type resetmust, @function
resetmust:
#-----------------------------------
# END   - Function Header

resetmust:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movq 8(%rax),%rcx
            movq -8(%rbp),%rax
            movq 16(%rax),%rax
            movq -8(%rbp),%rdx
            movq 24(%rdx),%rdx
            movb $0,(%rdx)
            movzbl (%rdx),%edx
            movb %dl,(%rax)
            movzbl (%rax),%eax
            movb %al,(%rcx)
            movq -8(%rbp),%rax
            movq (%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_4133ff:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl dfamust
.type dfamust, @function
dfamust:
#-----------------------------------
# END   - Function Header

dfamust:

            pushq %rbp
            movq %rsp,%rbp
            pushq %rbx
            subq $136,%rsp
            movq %rdi,-136(%rbp)
            movq $.L_417e9e,-88(%rbp)
            movl $0,-120(%rbp)
            movq -136(%rbp),%rax
            movl 24(%rax),%eax
            addl $1,%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_41343f:
            movq %rax,-80(%rbp)
            cmpq $0,-80(%rbp)
            je .L_413eac
.L_41344e:
            movq -80(%rbp),%rax
            movq %rax,-96(%rbp)
            movl $0,-124(%rbp)
            jmp .L_4134a1
.L_41345f:

            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq must0.5855(%rip),%rdx
            movq %rdx,(%rax)
            movq must0.5855+8(%rip),%rdx
            movq %rdx,8(%rax)
            movq must0.5855+16(%rip),%rdx
            movq %rdx,16(%rax)
            movq must0.5855+24(%rip),%rdx
            movq %rdx,24(%rax)
            addl $1,-124(%rbp)
.L_4134a1:

            movq -136(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -124(%rbp),%eax
            jge .L_41345f
.L_4134b0:
            movl $0,-124(%rbp)
            jmp .L_413636
.L_4134bc:

            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl $8,%edi
            callq malloc@PLT
.L_4134da:
            movq %rax,(%rbx)
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl $2,%edi
            callq malloc@PLT
.L_4134fb:
            movq %rax,8(%rbx)
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl $2,%edi
            callq malloc@PLT
.L_41351d:
            movq %rax,16(%rbx)
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl $2,%edi
            callq malloc@PLT
.L_41353f:
            movq %rax,24(%rbx)
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_413d3d
.L_413562:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 8(%rax),%rax
            testq %rax,%rax
            je .L_413d3d
.L_413582:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 16(%rax),%rax
            testq %rax,%rax
            je .L_413d3d
.L_4135a2:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 24(%rax),%rax
            testq %rax,%rax
            je .L_413d3d
.L_4135c2:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 8(%rax),%rcx
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 16(%rax),%rax
            movl -124(%rbp),%edx
            movslq %edx,%rdx
            movq %rdx,%rsi
            shlq $5,%rsi
            movq -96(%rbp),%rdx
            addq %rsi,%rdx
            movq 24(%rdx),%rdx
            movb $0,(%rdx)
            movzbl (%rdx),%edx
            movb %dl,(%rax)
            movzbl (%rax),%eax
            movb %al,(%rcx)
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq $0,(%rax)
            addl $1,-124(%rbp)
.L_413636:

            movq -136(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -124(%rbp),%eax
            jge .L_4134bc
.L_413649:
            movl $0,-128(%rbp)
            jmp .L_413cfa
.L_413655:

            movq -136(%rbp),%rax
            movq 16(%rax),%rax
            movl -128(%rbp),%edx
            movslq %edx,%rdx
            shlq $2,%rdx
            addq %rdx,%rax
            movl (%rax),%eax
            movl %eax,-108(%rbp)
            movl -108(%rbp),%eax
            cmpl $266,%eax
            je .L_413908
.L_413680:
            cmpl $266,%eax
            jg .L_4136a3
.L_413687:
            cmpl $263,%eax
            jg .L_4136e7
.L_41368e:
            cmpl $256,%eax
            jge .L_4136d1
.L_413695:
            cmpl $-1,%eax
            je .L_41392b
.L_41369e:
            jmp .L_413c19
.L_4136a3:

            cmpl $270,%eax
            jg .L_4136c1
.L_4136aa:
            cmpl $269,%eax
            jge .L_413710
.L_4136b1:
            cmpl $268,%eax
            je .L_4139df
.L_4136bc:
            jmp .L_413c19
.L_4136c1:

            cmpl $272,%eax
            jg .L_413c19
.L_4136cc:
            jmp .L_413d3d
.L_4136d1:

            movq -96(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq resetmust
.L_4136e2:
            jmp .L_413cf1
.L_4136e7:

            movq -96(%rbp),%rax
            cmpq -80(%rbp),%rax
            jbe .L_413d0f
.L_4136f5:
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq resetmust
.L_41370b:
            jmp .L_413cf1
.L_413710:

            movq -80(%rbp),%rax
            addq $64,%rax
            cmpq -96(%rbp),%rax
            ja .L_413d12
.L_413722:
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq %rax,-72(%rbp)
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -72(%rbp),%rax
            movq 24(%rax),%rdx
            movq -64(%rbp),%rax
            movq 24(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq strcmp@PLT
.L_413757:
            testl %eax,%eax
            je .L_413766
.L_41375b:
            movq -64(%rbp),%rax
            movq 24(%rax),%rax
            movb $0,(%rax)
.L_413766:

            movl $0,-124(%rbp)
            jmp .L_413773
.L_41376f:

            addl $1,-124(%rbp)
.L_413773:

            movq -64(%rbp),%rax
            movq 8(%rax),%rdx
            movl -124(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_4137b4
.L_41378a:
            movq -64(%rbp),%rax
            movq 8(%rax),%rdx
            movl -124(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movzbl (%rax),%edx
            movq -72(%rbp),%rax
            movq 8(%rax),%rcx
            movl -124(%rbp),%eax
            cltq 
            addq %rcx,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            je .L_41376f
.L_4137b4:

            movq -64(%rbp),%rax
            movq 8(%rax),%rdx
            movl -124(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movb $0,(%rax)
            movq -64(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_4137d7:
            movl %eax,-104(%rbp)
            movq -72(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_4137ea:
            movl %eax,-100(%rbp)
            movl -104(%rbp),%eax
            movl %eax,-112(%rbp)
            movl -112(%rbp),%eax
            cmpl -100(%rbp),%eax
            jle .L_413801
.L_4137fb:
            movl -100(%rbp),%eax
            movl %eax,-112(%rbp)
.L_413801:

            movl $0,-124(%rbp)
            jmp .L_413846
.L_41380a:

            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movl -104(%rbp),%eax
            subl -124(%rbp),%eax
            cltq 
            subq $1,%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            movq -72(%rbp),%rax
            movq 16(%rax),%rcx
            movl -100(%rbp),%eax
            subl -124(%rbp),%eax
            cltq 
            subq $1,%rax
            addq %rcx,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            jne .L_413850
.L_413842:
            addl $1,-124(%rbp)
.L_413846:

            movl -124(%rbp),%eax
            cmpl -112(%rbp),%eax
            jl .L_41380a
.L_41384e:
            jmp .L_413851
.L_413850:

            nop
.L_413851:

            movl $0,-116(%rbp)
            jmp .L_41388d
.L_41385a:

            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movl -116(%rbp),%eax
            cltq 
            addq %rax,%rdx
            movq -64(%rbp),%rax
            movq 16(%rax),%rcx
            movl -104(%rbp),%eax
            subl -124(%rbp),%eax
            movl %eax,%esi
            movl -116(%rbp),%eax
            addl %esi,%eax
            cltq 
            addq %rcx,%rax
            movzbl (%rax),%eax
            movb %al,(%rdx)
            addl $1,-116(%rbp)
.L_41388d:

            movl -116(%rbp),%eax
            cmpl -124(%rbp),%eax
            jl .L_41385a
.L_413895:
            movq -64(%rbp),%rax
            movq 16(%rax),%rdx
            movl -116(%rbp),%eax
            cltq 
            addq %rdx,%rax
            movb $0,(%rax)
            movq -72(%rbp),%rax
            movq (%rax),%rdx
            movq -64(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq inboth
.L_4138c6:
            movq %rax,-56(%rbp)
            cmpq $0,-56(%rbp)
            je .L_413d15
.L_4138d5:
            movq -64(%rbp),%rax
            movq (%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_4138e9:
            movq -64(%rbp),%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq free@PLT
.L_4138f8:
            movq -64(%rbp),%rax
            movq -56(%rbp),%rdx
            movq %rdx,(%rax)
            jmp .L_413cf1
.L_413908:

            movq -96(%rbp),%rax
            cmpq -80(%rbp),%rax
            jbe .L_413d18
.L_413916:
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq 24(%rax),%rax
            movb $0,(%rax)
            jmp .L_413cf1
.L_41392b:

            movq -80(%rbp),%rax
            addq $32,%rax
            cmpq -96(%rbp),%rax
            jne .L_413d1b
.L_41393d:
            movl $0,-124(%rbp)
            jmp .L_413998
.L_413946:

            movq -80(%rbp),%rax
            movq (%rax),%rax
            movl -124(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_413965:
            movq %rax,%rbx
            movq -88(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_413974:
            cmpq %rax,%rbx
            jbe .L_413994
.L_413979:
            movq -80(%rbp),%rax
            movq (%rax),%rax
            movl -124(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-88(%rbp)
.L_413994:

            addl $1,-124(%rbp)
.L_413998:

            movq -80(%rbp),%rax
            movq (%rax),%rax
            movl -124(%rbp),%edx
            movslq %edx,%rdx
            shlq $3,%rdx
            addq %rdx,%rax
            movq (%rax),%rax
            testq %rax,%rax
            jne .L_413946
.L_4139b4:
            movq -80(%rbp),%rax
            movq 24(%rax),%rdx
            movq -88(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq strcmp@PLT
.L_4139cb:
            testl %eax,%eax
            jne .L_413d1e
.L_4139d3:
            movl $1,-120(%rbp)
            jmp .L_413d1e
.L_4139df:

            movq -80(%rbp),%rax
            addq $64,%rax
            cmpq -96(%rbp),%rax
            ja .L_413d21
.L_4139f1:
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq %rax,-48(%rbp)
            subq $32,-96(%rbp)
            movq -96(%rbp),%rax
            movq %rax,-40(%rbp)
            movq -48(%rbp),%rax
            movq (%rax),%rdx
            movq -40(%rbp),%rax
            movq (%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq addlists
.L_413a29:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,(%rax)
            movq -40(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_413d24
.L_413a43:
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413b08
.L_413a56:
            movq -48(%rbp),%rax
            movq 8(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413b08
.L_413a69:
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq icpyalloc
.L_413a7e:
            movq %rax,-32(%rbp)
            cmpq $0,-32(%rbp)
            je .L_413d27
.L_413a8d:
            movq -48(%rbp),%rax
            movq 8(%rax),%rdx
            movq -32(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq icatalloc
.L_413aa9:
            movq %rax,-32(%rbp)
            cmpq $0,-32(%rbp)
            je .L_413d2a
.L_413ab8:
            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_413ac4:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq (%rax),%rax
            movq -32(%rbp),%rcx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enlist
.L_413ae2:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,(%rax)
            movq -32(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_413af8:
            movq -40(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_413d2d
.L_413b08:

            movq -40(%rbp),%rax
            movq 24(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413b53
.L_413b17:
            movq -48(%rbp),%rax
            movq 8(%rax),%rdx
            movq -40(%rbp),%rax
            movq 8(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq icatalloc
.L_413b37:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,8(%rax)
            movq -40(%rbp),%rax
            movq 8(%rax),%rax
            testq %rax,%rax
            je .L_413d30
.L_413b53:

            movq -48(%rbp),%rax
            movq 24(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            jne .L_413b6d
.L_413b62:
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            movb $0,(%rax)
.L_413b6d:

            movq -48(%rbp),%rax
            movq 16(%rax),%rdx
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq icatalloc
.L_413b8d:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,16(%rax)
            movq -40(%rbp),%rax
            movq 16(%rax),%rax
            testq %rax,%rax
            je .L_413d33
.L_413ba9:
            movq -40(%rbp),%rax
            movq 24(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413c04
.L_413bb8:
            movq -48(%rbp),%rax
            movq 24(%rax),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413c04
.L_413bc7:
            movq -48(%rbp),%rax
            movq 24(%rax),%rdx
            movq -40(%rbp),%rax
            movq 24(%rax),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq icatalloc
.L_413be7:
            movq %rax,%rdx
            movq -40(%rbp),%rax
            movq %rdx,24(%rax)
            movq -40(%rbp),%rax
            movq 24(%rax),%rax
            testq %rax,%rax
            jne .L_413c14
.L_413bff:
            jmp .L_413d3d
.L_413c04:

            movq -40(%rbp),%rax
            movq 24(%rax),%rax
            movb $0,(%rax)
            jmp .L_413cf1
.L_413c14:

            jmp .L_413cf1
.L_413c19:

            cmpl $-1,-108(%rbp)
            jl .L_413d36
.L_413c23:
            cmpl $0,-108(%rbp)
            je .L_413d39
.L_413c2d:
            cmpl $272,-108(%rbp)
            jle .L_413c4c
.L_413c36:
            movq -96(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq resetmust
.L_413c47:
            jmp .L_413cf0
.L_413c4c:

            movq -96(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq resetmust
.L_413c5d:
            movq -96(%rbp),%rax
            movq 24(%rax),%rcx
            movq -96(%rbp),%rax
            movq 8(%rax),%rax
            movq -96(%rbp),%rdx
            movq 16(%rdx),%rdx
            movl -108(%rbp),%esi
            movb %sil,(%rdx)
            movzbl (%rdx),%edx
            movb %dl,(%rax)
            movzbl (%rax),%eax
            movb %al,(%rcx)
            movq -96(%rbp),%rax
            movq 24(%rax),%rax
            leaq 1(%rax),%rcx
            movq -96(%rbp),%rax
            movq 8(%rax),%rax
            addq $1,%rax
            movq -96(%rbp),%rdx
            movq 16(%rdx),%rdx
            addq $1,%rdx
            movb $0,(%rdx)
            movzbl (%rdx),%edx
            movb %dl,(%rax)
            movzbl (%rax),%eax
            movb %al,(%rcx)
            movq -96(%rbp),%rax
            movq 24(%rax),%rcx
            movq -96(%rbp),%rax
            movq (%rax),%rax
            movl $1,%edx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enlist
.L_413cda:
            movq %rax,%rdx
            movq -96(%rbp),%rax
            movq %rdx,(%rax)
            movq -96(%rbp),%rax
            movq (%rax),%rax
            testq %rax,%rax
            je .L_413d3c
.L_413cf0:

            nop
.L_413cf1:

            addq $32,-96(%rbp)
            addl $1,-128(%rbp)
.L_413cfa:

            movq -136(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -128(%rbp),%eax
            jg .L_413655
.L_413d0d:
            jmp .L_413d3d
.L_413d0f:

            nop
            jmp .L_413d3d
.L_413d12:

            nop
            jmp .L_413d3d
.L_413d15:

            nop
            jmp .L_413d3d
.L_413d18:

            nop
            jmp .L_413d3d
.L_413d1b:

            nop
            jmp .L_413d3d
.L_413d1e:

            nop
            jmp .L_413d3d
.L_413d21:

            nop
            jmp .L_413d3d
.L_413d24:

            nop
            jmp .L_413d3d
.L_413d27:

            nop
            jmp .L_413d3d
.L_413d2a:

            nop
            jmp .L_413d3d
.L_413d2d:

            nop
            jmp .L_413d3d
.L_413d30:

            nop
            jmp .L_413d3d
.L_413d33:

            nop
            jmp .L_413d3d
.L_413d36:

            nop
            jmp .L_413d3d
.L_413d39:

            nop
            jmp .L_413d3d
.L_413d3c:

            nop
.L_413d3d:

            movq -88(%rbp),%rax
            movzbl (%rax),%eax
            testb %al,%al
            je .L_413dc1
.L_413d48:
            movl $24,%edi
            callq malloc@PLT
.L_413d52:
            movq %rax,-24(%rbp)
            movq -24(%rbp),%rax
            movl -120(%rbp),%edx
            movl %edx,(%rax)
            movq -88(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_413d6b:
            addq $1,%rax
            movq %rax,%rdi
            callq malloc@PLT
.L_413d77:
            movq %rax,%rdx
            movq -24(%rbp),%rax
            movq %rdx,8(%rax)
            movq -24(%rbp),%rax
            movq 8(%rax),%rax
            movq -88(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            callq strcpy@PLT
.L_413d99:
            movq -136(%rbp),%rax
            movq 128(%rax),%rdx
            movq -24(%rbp),%rax
            movq %rdx,16(%rax)
            movq -136(%rbp),%rax
            movq -24(%rbp),%rdx
            movq %rdx,128(%rax)
.L_413dc1:

            movq -80(%rbp),%rax
            movq %rax,-96(%rbp)
            movl $0,-124(%rbp)
            jmp .L_413e8b
.L_413dd5:

            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq freelist
.L_413df8:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq ifree
.L_413e1b:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 8(%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq ifree
.L_413e3f:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 16(%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq ifree
.L_413e63:
            movl -124(%rbp),%eax
            cltq 
            shlq $5,%rax
            movq %rax,%rdx
            movq -96(%rbp),%rax
            addq %rdx,%rax
            movq 24(%rax),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq ifree
.L_413e87:
            addl $1,-124(%rbp)
.L_413e8b:

            movq -136(%rbp),%rax
            movl 24(%rax),%eax
            cmpl -124(%rbp),%eax
            jge .L_413dd5
.L_413e9e:
            movq -96(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_413eaa:
            jmp .L_413ead
.L_413eac:

            nop
.L_413ead:

            addq $136,%rsp
            popq %rbx
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl kwsalloc
.type kwsalloc, @function
kwsalloc:
#-----------------------------------
# END   - Function Header

kwsalloc:

            pushq %rbp
            movq %rsp,%rbp
            subq $64,%rsp
            movq %rdi,-56(%rbp)
            movl $2440,%edi
            movl $0,%eax
            callq xmalloc
.L_413ed2:
            movq %rax,-40(%rbp)
            cmpq $0,-40(%rbp)
            jne .L_413ee7
.L_413edd:
            movl $0,%eax
            jmp .L_4140fa
.L_413ee7:

            movq -40(%rbp),%rax
            movl $free,%r8d
            movl $xmalloc,%ecx
            movl $0,%edx
            movl $0,%esi
            movq %rax,%rdi
            callq _obstack_begin@PLT
.L_413f08:
            movq -40(%rbp),%rax
            movl $0,88(%rax)
            movq -40(%rbp),%rax
            movq %rax,-32(%rbp)
            movq -32(%rbp),%rax
            movq %rax,-24(%rbp)
            movl $56,-44(%rbp)
            movq -24(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rdx
            movq -24(%rbp),%rax
            movq 24(%rax),%rax
            subq %rax,%rdx
            movl -44(%rbp),%eax
            cltq 
            cmpq %rax,%rdx
            jge .L_413f5b
.L_413f4a:
            movl -44(%rbp),%edx
            movq -24(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq _obstack_newchunk@PLT
.L_413f5b:

            movq -24(%rbp),%rax
            movq 24(%rax),%rdx
            movl -44(%rbp),%eax
            cltq 
            addq %rax,%rdx
            movq -24(%rbp),%rax
            movq %rdx,24(%rax)
            movq -32(%rbp),%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-8(%rbp)
            movq -16(%rbp),%rax
            movq 24(%rax),%rax
            cmpq -8(%rbp),%rax
            jne .L_413fa3
.L_413f95:
            movq -16(%rbp),%rax
            movzbl 80(%rax),%edx
            orl $2,%edx
            movb %dl,80(%rax)
.L_413fa3:

            movq -16(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -16(%rbp),%rax
            movl 48(%rax),%eax
            cltq 
            addq %rax,%rdx
            movq -16(%rbp),%rax
            movl 48(%rax),%eax
            notl %eax
            cltq 
            andq %rdx,%rax
            movq %rax,%rdx
            movq -16(%rbp),%rax
            movq %rdx,24(%rax)
            movq -16(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rdx
            movq -16(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rcx
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            cmpq %rax,%rdx
            jle .L_414017
.L_414007:
            movq -16(%rbp),%rax
            movq 32(%rax),%rdx
            movq -16(%rbp),%rax
            movq %rdx,24(%rax)
.L_414017:

            movq -16(%rbp),%rax
            movq 24(%rax),%rdx
            movq -16(%rbp),%rax
            movq %rdx,16(%rax)
            movq -8(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rdx,96(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            testq %rax,%rax
            jne .L_414056
.L_414040:
            movq -40(%rbp),%rax
            movq %rax,%rdi
            callq kwsfree
.L_41404c:
            movl $0,%eax
            jmp .L_4140fa
.L_414056:

            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movl $0,(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movq $0,8(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movq $0,16(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movq $0,24(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movq $0,32(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movl $0,40(%rax)
            movq -40(%rbp),%rax
            movq 96(%rax),%rax
            movl $0,44(%rax)
            movq -40(%rbp),%rax
            movl $2147483647,104(%rax)
            movq -40(%rbp),%rax
            movl $4294967295,108(%rax)
            movq -40(%rbp),%rax
            movq $0,2416(%rax)
            movq -40(%rbp),%rax
            movq -56(%rbp),%rdx
            movq %rdx,2432(%rax)
            movq -40(%rbp),%rax
.L_4140fa:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl kwsincr
.type kwsincr, @function
kwsincr:
#-----------------------------------
# END   - Function Header

kwsincr:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $320,%rsp
            movq %rdi,-328(%rbp)
            movq %rsi,-336(%rbp)
            movq %rdx,-344(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -328(%rbp),%rax
            movq %rax,-296(%rbp)
            movq -296(%rbp),%rax
            movq 96(%rax),%r13
            movq -344(%rbp),%rax
            addq %rax,-336(%rbp)
            jmp .L_414a2c
.L_41415e:

            movq -296(%rbp),%rax
            movq 2432(%rax),%rax
            testq %rax,%rax
            je .L_41419c
.L_414171:
            movq -296(%rbp),%rax
            movq 2432(%rax),%rdx
            subq $1,-336(%rbp)
            movq -336(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rdx,%rax
            movzbl (%rax),%eax
            jmp .L_4141ae
.L_41419c:

            subq $1,-336(%rbp)
            movq -336(%rbp),%rax
            movzbl (%rax),%eax
.L_4141ae:

            movl %eax,%r14d
            movq 8(%r13),%r12
            leaq 8(%r13),%rax
            movq %rax,-144(%rbp)
            movl $0,-192(%rbp)
            movl $1,%ebx
            jmp .L_414216
.L_4141d1:

            movslq %ebx,%rax
            movq %r12,-144(%rbp,%rax,8)
            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jbe .L_4141ff
.L_4141e7:
            movl %ebx,%eax
            leal 1(%rax),%ebx
            cltq 
            movl $0,-192(%rbp,%rax,4)
            movq (%r12),%r12
            jmp .L_414216
.L_4141ff:

            movl %ebx,%eax
            leal 1(%rax),%ebx
            cltq 
            movl $1,-192(%rbp,%rax,4)
            movq 8(%r12),%r12
.L_414216:

            testq %r12,%r12
            je .L_414226
.L_41421b:
            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jne .L_4141d1
.L_414226:

            testq %r12,%r12
            jne .L_414a27
.L_41422f:
            movq -296(%rbp),%rax
            movq %rax,-288(%rbp)
            movq -288(%rbp),%rax
            movq %rax,-280(%rbp)
            movl $32,-312(%rbp)
            movq -280(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rdx
            movq -280(%rbp),%rax
            movq 24(%rax),%rax
            subq %rax,%rdx
            movl -312(%rbp),%eax
            cltq 
            cmpq %rax,%rdx
            jge .L_414295
.L_41427e:
            movl -312(%rbp),%edx
            movq -280(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq _obstack_newchunk@PLT
.L_414295:

            movq -280(%rbp),%rax
            movq 24(%rax),%rdx
            movl -312(%rbp),%eax
            cltq 
            addq %rax,%rdx
            movq -280(%rbp),%rax
            movq %rdx,24(%rax)
            movq -288(%rbp),%rax
            movq %rax,-272(%rbp)
            movq -272(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-264(%rbp)
            movq -272(%rbp),%rax
            movq 24(%rax),%rax
            cmpq -264(%rbp),%rax
            jne .L_4142fb
.L_4142ea:
            movq -272(%rbp),%rax
            movzbl 80(%rax),%edx
            orl $2,%edx
            movb %dl,80(%rax)
.L_4142fb:

            movq -272(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -272(%rbp),%rax
            movl 48(%rax),%eax
            cltq 
            addq %rax,%rdx
            movq -272(%rbp),%rax
            movl 48(%rax),%eax
            notl %eax
            cltq 
            andq %rdx,%rax
            movq %rax,%rdx
            movq -272(%rbp),%rax
            movq %rdx,24(%rax)
            movq -272(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -272(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rdx
            movq -272(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rcx
            movq -272(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            cmpq %rax,%rdx
            jle .L_41438d
.L_414377:
            movq -272(%rbp),%rax
            movq 32(%rax),%rdx
            movq -272(%rbp),%rax
            movq %rdx,24(%rax)
.L_41438d:

            movq -272(%rbp),%rax
            movq 24(%rax),%rdx
            movq -272(%rbp),%rax
            movq %rdx,16(%rax)
            movq -264(%rbp),%rax
            movq %rax,%r12
            testq %r12,%r12
            jne .L_4143bc
.L_4143b2:
            movl $.L_416a7c,%eax
            jmp .L_414abe
.L_4143bc:

            movq $0,(%r12)
            movq $0,8(%r12)
            movq -296(%rbp),%rax
            movq %rax,-256(%rbp)
            movq -256(%rbp),%rax
            movq %rax,-248(%rbp)
            movl $56,-308(%rbp)
            movq -248(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rdx
            movq -248(%rbp),%rax
            movq 24(%rax),%rax
            subq %rax,%rdx
            movl -308(%rbp),%eax
            cltq 
            cmpq %rax,%rdx
            jge .L_414433
.L_41441c:
            movl -308(%rbp),%edx
            movq -248(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq _obstack_newchunk@PLT
.L_414433:

            movq -248(%rbp),%rax
            movq 24(%rax),%rdx
            movl -308(%rbp),%eax
            cltq 
            addq %rax,%rdx
            movq -248(%rbp),%rax
            movq %rdx,24(%rax)
            movq -256(%rbp),%rax
            movq %rax,-240(%rbp)
            movq -240(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-232(%rbp)
            movq -240(%rbp),%rax
            movq 24(%rax),%rax
            cmpq -232(%rbp),%rax
            jne .L_414499
.L_414488:
            movq -240(%rbp),%rax
            movzbl 80(%rax),%edx
            orl $2,%edx
            movb %dl,80(%rax)
.L_414499:

            movq -240(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -240(%rbp),%rax
            movl 48(%rax),%eax
            cltq 
            addq %rax,%rdx
            movq -240(%rbp),%rax
            movl 48(%rax),%eax
            notl %eax
            cltq 
            andq %rdx,%rax
            movq %rax,%rdx
            movq -240(%rbp),%rax
            movq %rdx,24(%rax)
            movq -240(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -240(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rdx
            movq -240(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rcx
            movq -240(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            cmpq %rax,%rdx
            jle .L_41452b
.L_414515:
            movq -240(%rbp),%rax
            movq 32(%rax),%rdx
            movq -240(%rbp),%rax
            movq %rdx,24(%rax)
.L_41452b:

            movq -240(%rbp),%rax
            movq 24(%rax),%rdx
            movq -240(%rbp),%rax
            movq %rdx,16(%rax)
            movq -232(%rbp),%rax
            movq %rax,16(%r12)
            movq 16(%r12),%rax
            testq %rax,%rax
            jne .L_414561
.L_414557:
            movl $.L_416a7c,%eax
            jmp .L_414abe
.L_414561:

            movq 16(%r12),%rax
            movl $0,(%rax)
            movq 16(%r12),%rax
            movq $0,8(%rax)
            movq 16(%r12),%rax
            movq %r13,16(%rax)
            movq 16(%r12),%rax
            movq $0,24(%rax)
            movq 16(%r12),%rax
            movq $0,32(%rax)
            movq 16(%r12),%rax
            movl 40(%r13),%edx
            addl $1,%edx
            movl %edx,40(%rax)
            movq 16(%r12),%rax
            movl $0,44(%rax)
            movb %r14b,24(%r12)
            movb $0,25(%r12)
            subl $1,%ebx
            movslq %ebx,%rax
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            jne .L_4145e3
.L_4145d3:
            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %r12,(%rax)
            jmp .L_414631
.L_4145e3:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %r12,8(%rax)
            jmp .L_414631
.L_4145f4:

            movslq %ebx,%rax
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            jne .L_414619
.L_414602:
            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%edx
            subl $1,%edx
            movb %dl,25(%rax)
            jmp .L_41462e
.L_414619:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%edx
            addl $1,%edx
            movb %dl,25(%rax)
.L_41462e:

            subl $1,%ebx
.L_414631:

            testl %ebx,%ebx
            je .L_414648
.L_414635:
            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_4145f4
.L_414648:

            testl %ebx,%ebx
            je .L_414a27
.L_414650:
            movslq %ebx,%rax
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            jne .L_41467b
.L_41465e:
            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%edx
            subl $1,%edx
            movb %dl,25(%rax)
            movzbl 25(%rax),%eax
            testb %al,%al
            jne .L_4146af
.L_41467b:

            movslq %ebx,%rax
            movl -192(%rbp,%rax,4),%eax
            cmpl $1,%eax
            jne .L_414a27
.L_41468e:
            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%edx
            addl $1,%edx
            movb %dl,25(%rax)
            movzbl 25(%rax),%eax
            testb %al,%al
            je .L_414a27
.L_4146af:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movzbl 25(%rax),%eax
            movsbl %al,%eax
            cmpl $-2,%eax
            je .L_4146d4
.L_4146c6:
            cmpl $2,%eax
            je .L_41485f
.L_4146cf:
            jmp .L_4149e6
.L_4146d4:

            leal 1(%rbx),%eax
            cltq 
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4146f2
.L_4146e4:
            cmpl $1,%eax
            je .L_41476f
.L_4146ed:
            jmp .L_4149e6
.L_4146f2:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %rax,-224(%rbp)
            movq -224(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-304(%rbp)
            movq -304(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-216(%rbp)
            movq -304(%rbp),%rax
            movq -224(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -224(%rbp),%rax
            movq -216(%rbp),%rdx
            movq %rdx,(%rax)
            movq -224(%rbp),%rax
            movb $0,25(%rax)
            movq -224(%rbp),%rax
            movzbl 25(%rax),%edx
            movq -304(%rbp),%rax
            movb %dl,25(%rax)
            jmp .L_41485a
.L_41476f:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %rax,-224(%rbp)
            movq -224(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-208(%rbp)
            movq -208(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-304(%rbp)
            movq -304(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-216(%rbp)
            movq -304(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-200(%rbp)
            movq -304(%rbp),%rax
            movq -208(%rbp),%rdx
            movq %rdx,(%rax)
            movq -208(%rbp),%rax
            movq -200(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -304(%rbp),%rax
            movq -224(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -224(%rbp),%rax
            movq -216(%rbp),%rdx
            movq %rdx,(%rax)
            movq -304(%rbp),%rax
            movzbl 25(%rax),%eax
            cmpb $1,%al
            je .L_414823
.L_41481c:
            movl $0,%edx
            jmp .L_414828
.L_414823:

            movl $4294967295,%edx
.L_414828:

            movq -208(%rbp),%rax
            movb %dl,25(%rax)
            movq -304(%rbp),%rax
            movzbl 25(%rax),%eax
            cmpb $255,%al
            sete %al
            movl %eax,%edx
            movq -224(%rbp),%rax
            movb %dl,25(%rax)
            movq -304(%rbp),%rax
            movb $0,25(%rax)
            nop
.L_41485a:

            jmp .L_4149e6
.L_41485f:

            leal 1(%rbx),%eax
            cltq 
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            je .L_4148fa
.L_414873:
            cmpl $1,%eax
            je .L_41487d
.L_414878:
            jmp .L_4149e5
.L_41487d:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %rax,-208(%rbp)
            movq -208(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-304(%rbp)
            movq -304(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-200(%rbp)
            movq -304(%rbp),%rax
            movq -208(%rbp),%rdx
            movq %rdx,(%rax)
            movq -208(%rbp),%rax
            movq -200(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -208(%rbp),%rax
            movb $0,25(%rax)
            movq -208(%rbp),%rax
            movzbl 25(%rax),%edx
            movq -304(%rbp),%rax
            movb %dl,25(%rax)
            jmp .L_4149e5
.L_4148fa:

            movslq %ebx,%rax
            movq -144(%rbp,%rax,8),%rax
            movq %rax,-208(%rbp)
            movq -208(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-224(%rbp)
            movq -224(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-304(%rbp)
            movq -304(%rbp),%rax
            movq (%rax),%rax
            movq %rax,-200(%rbp)
            movq -304(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,-216(%rbp)
            movq -304(%rbp),%rax
            movq -208(%rbp),%rdx
            movq %rdx,(%rax)
            movq -208(%rbp),%rax
            movq -200(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -304(%rbp),%rax
            movq -224(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -224(%rbp),%rax
            movq -216(%rbp),%rdx
            movq %rdx,(%rax)
            movq -304(%rbp),%rax
            movzbl 25(%rax),%eax
            cmpb $1,%al
            je .L_4149ae
.L_4149a7:
            movl $0,%edx
            jmp .L_4149b3
.L_4149ae:

            movl $4294967295,%edx
.L_4149b3:

            movq -208(%rbp),%rax
            movb %dl,25(%rax)
            movq -304(%rbp),%rax
            movzbl 25(%rax),%eax
            cmpb $255,%al
            sete %al
            movl %eax,%edx
            movq -224(%rbp),%rax
            movb %dl,25(%rax)
            movq -304(%rbp),%rax
            movb $0,25(%rax)
            nop
.L_4149e5:

            nop
.L_4149e6:

            leal -1(%rbx),%eax
            cltq 
            movl -192(%rbp,%rax,4),%eax
            testl %eax,%eax
            jne .L_414a0f
.L_4149f6:
            leal -1(%rbx),%eax
            cltq 
            movq -144(%rbp,%rax,8),%rax
            movq -304(%rbp),%rdx
            movq %rdx,(%rax)
            jmp .L_414a27
.L_414a0f:

            leal -1(%rbx),%eax
            cltq 
            movq -144(%rbp,%rax,8),%rax
            movq -304(%rbp),%rdx
            movq %rdx,8(%rax)
.L_414a27:

            movq 16(%r12),%r13
.L_414a2c:

            movq -344(%rbp),%rax
            leaq -1(%rax),%rdx
            movq %rdx,-344(%rbp)
            testq %rax,%rax
            jne .L_41415e
.L_414a47:
            movl (%r13),%eax
            testl %eax,%eax
            jne .L_414a62
.L_414a4f:
            movq -296(%rbp),%rax
            movl 88(%rax),%eax
            addl %eax,%eax
            addl $1,%eax
            movl %eax,(%r13)
.L_414a62:

            movq -296(%rbp),%rax
            movl 88(%rax),%eax
            leal 1(%rax),%edx
            movq -296(%rbp),%rax
            movl %edx,88(%rax)
            movl 40(%r13),%edx
            movq -296(%rbp),%rax
            movl 104(%rax),%eax
            cmpl %eax,%edx
            jge .L_414a99
.L_414a8b:
            movl 40(%r13),%edx
            movq -296(%rbp),%rax
            movl %edx,104(%rax)
.L_414a99:

            movl 40(%r13),%edx
            movq -296(%rbp),%rax
            movl 108(%rax),%eax
            cmpl %eax,%edx
            jle .L_414ab9
.L_414aab:
            movl 40(%r13),%edx
            movq -296(%rbp),%rax
            movl %edx,108(%rax)
.L_414ab9:

            movl $0,%eax
.L_414abe:

            movq -40(%rbp),%rsi
            xorq %fs:40,%rsi
            je .L_414ad2
.L_414acd:
            callq __stack_chk_fail@PLT
.L_414ad2:

            addq $320,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl enqueue
.type enqueue, @function
enqueue:
#-----------------------------------
# END   - Function Header

enqueue:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            cmpq $0,-8(%rbp)
            je .L_414b50
.L_414af9:
            movq -8(%rbp),%rax
            movq (%rax),%rax
            movq -16(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enqueue
.L_414b14:
            movq -8(%rbp),%rax
            movq 8(%rax),%rax
            movq -16(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enqueue
.L_414b30:
            movq -16(%rbp),%rax
            movq (%rax),%rax
            movq -8(%rbp),%rdx
            movq 16(%rdx),%rdx
            movq %rdx,24(%rax)
            movq 24(%rax),%rdx
            movq -16(%rbp),%rax
            movq %rdx,(%rax)
            jmp .L_414b51
.L_414b50:

            nop
.L_414b51:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl treefails
.type treefails, @function
treefails:
#-----------------------------------
# END   - Function Header

treefails:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $16,%rsp
            movq %rdi,%r12
            movq %rsi,-24(%rbp)
            movq %rdx,-32(%rbp)
            testq %r12,%r12
            je .L_414c17
.L_414b72:
            movq (%r12),%rax
            movq -32(%rbp),%rdx
            movq -24(%rbp),%rcx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treefails
.L_414b8e:
            movq 8(%r12),%rax
            movq -32(%rbp),%rdx
            movq -24(%rbp),%rcx
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treefails
.L_414bab:
            jmp .L_414c01
.L_414bad:

            movq -24(%rbp),%rax
            movq 8(%rax),%rbx
            jmp .L_414bce
.L_414bb7:

            movzbl 24(%r12),%edx
            movzbl 24(%rbx),%eax
            cmpb %al,%dl
            jae .L_414bca
.L_414bc5:
            movq (%rbx),%rbx
            jmp .L_414bce
.L_414bca:

            movq 8(%rbx),%rbx
.L_414bce:

            testq %rbx,%rbx
            je .L_414be1
.L_414bd3:
            movzbl 24(%r12),%edx
            movzbl 24(%rbx),%eax
            cmpb %al,%dl
            jne .L_414bb7
.L_414be1:

            testq %rbx,%rbx
            je .L_414bf5
.L_414be6:
            movq 16(%r12),%rax
            movq 16(%rbx),%rdx
            movq %rdx,32(%rax)
            jmp .L_414c18
.L_414bf5:

            movq -24(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,-24(%rbp)
.L_414c01:

            cmpq $0,-24(%rbp)
            jne .L_414bad
.L_414c08:
            movq 16(%r12),%rax
            movq -32(%rbp),%rdx
            movq %rdx,32(%rax)
            jmp .L_414c18
.L_414c17:

            nop
.L_414c18:

            addq $16,%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl treedelta
.type treedelta, @function
treedelta:
#-----------------------------------
# END   - Function Header

treedelta:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            subq $16,%rsp
            movq %rdi,%rbx
            movl %esi,%r12d
            movq %rdx,-24(%rbp)
            testq %rbx,%rbx
            je .L_414c98
.L_414c3b:
            movq (%rbx),%rax
            movq -24(%rbp),%rdx
            movl %r12d,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq treedelta
.L_414c52:
            movq 8(%rbx),%rax
            movq -24(%rbp),%rdx
            movl %r12d,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq treedelta
.L_414c6a:
            movzbl 24(%rbx),%eax
            movzbl %al,%edx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl %r12d,%eax
            jbe .L_414c99
.L_414c83:
            movzbl 24(%rbx),%eax
            movzbl %al,%edx
            movq -24(%rbp),%rax
            addq %rdx,%rax
            movl %r12d,%edx
            movb %dl,(%rax)
            jmp .L_414c99
.L_414c98:

            nop
.L_414c99:

            addq $16,%rsp
            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl hasevery
.type hasevery, @function
hasevery:
#-----------------------------------
# END   - Function Header

hasevery:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r12
            pushq %rbx
            movq %rdi,%rbx
            movq %rsi,%r12
            testq %r12,%r12
            jne .L_414cbb
.L_414cb4:
            movl $1,%eax
            jmp .L_414d2d
.L_414cbb:

            movq (%r12),%rax
            movq %rax,%rsi
            movq %rbx,%rdi
            movl $0,%eax
            callq hasevery
.L_414ccf:
            testl %eax,%eax
            jne .L_414cda
.L_414cd3:
            movl $0,%eax
            jmp .L_414d2d
.L_414cda:

            movq 8(%r12),%rax
            movq %rax,%rsi
            movq %rbx,%rdi
            movl $0,%eax
            callq hasevery
.L_414cef:
            testl %eax,%eax
            jne .L_414d11
.L_414cf3:
            movl $0,%eax
            jmp .L_414d2d
.L_414cfa:

            movzbl 24(%r12),%edx
            movzbl 24(%rbx),%eax
            cmpb %al,%dl
            jae .L_414d0d
.L_414d08:
            movq (%rbx),%rbx
            jmp .L_414d11
.L_414d0d:

            movq 8(%rbx),%rbx
.L_414d11:

            testq %rbx,%rbx
            je .L_414d24
.L_414d16:
            movzbl 24(%r12),%edx
            movzbl 24(%rbx),%eax
            cmpb %al,%dl
            jne .L_414cfa
.L_414d24:

            testq %rbx,%rbx
            setne %al
            movzbl %al,%eax
.L_414d2d:

            popq %rbx
            popq %r12
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl treenext
.type treenext, @function
treenext:
#-----------------------------------
# END   - Function Header

treenext:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq %rsi,-16(%rbp)
            cmpq $0,-8(%rbp)
            je .L_414da7
.L_414d49:
            movq -8(%rbp),%rax
            movq (%rax),%rax
            movq -16(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treenext
.L_414d64:
            movq -8(%rbp),%rax
            movq 8(%rax),%rax
            movq -16(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treenext
.L_414d80:
            movq -8(%rbp),%rax
            movzbl 24(%rax),%eax
            movzbl %al,%eax
            leaq (,%rax,8),%rdx
            movq -16(%rbp),%rax
            addq %rax,%rdx
            movq -8(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,(%rdx)
            jmp .L_414da8
.L_414da7:

            nop
.L_414da8:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl kwsprep
.type kwsprep, @function
kwsprep:
#-----------------------------------
# END   - Function Header

kwsprep:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $2392,%rsp
            movq %rdi,-2408(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -2408(%rbp),%r12
            movl 104(%r12),%eax
            cmpl $255,%eax
            jg .L_414e08
.L_414de3:
            movl $0,%ebx
            jmp .L_414dfe
.L_414dea:

            movl 104(%r12),%eax
            movl %eax,%edx
            movslq %ebx,%rax
            movb %dl,-304(%rbp,%rax)
            addl $1,%ebx
.L_414dfe:

            cmpl $255,%ebx
            jle .L_414dea
.L_414e06:
            jmp .L_414e25
.L_414e08:

            movl $0,%ebx
            jmp .L_414e1d
.L_414e0f:

            movslq %ebx,%rax
            movb $255,-304(%rbp,%rax)
            addl $1,%ebx
.L_414e1d:

            cmpl $255,%ebx
            jle .L_414e0f
.L_414e25:

            movl 88(%r12),%eax
            cmpl $1,%eax
            jne .L_4150a2
.L_414e33:
            movq 2432(%r12),%rax
            testq %rax,%rax
            jne .L_4150a2
.L_414e44:
            movq %r12,-2384(%rbp)
            movq -2384(%rbp),%rax
            movq %rax,-2376(%rbp)
            movl 104(%r12),%eax
            movl %eax,-2396(%rbp)
            movq -2376(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rdx
            movq -2376(%rbp),%rax
            movq 24(%rax),%rax
            subq %rax,%rdx
            movl -2396(%rbp),%eax
            cltq 
            cmpq %rax,%rdx
            jge .L_414ea4
.L_414e8d:
            movl -2396(%rbp),%edx
            movq -2376(%rbp),%rax
            movl %edx,%esi
            movq %rax,%rdi
            callq _obstack_newchunk@PLT
.L_414ea4:

            movq -2376(%rbp),%rax
            movq 24(%rax),%rdx
            movl -2396(%rbp),%eax
            cltq 
            addq %rax,%rdx
            movq -2376(%rbp),%rax
            movq %rdx,24(%rax)
            movq -2384(%rbp),%rax
            movq %rax,-2368(%rbp)
            movq -2368(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-2360(%rbp)
            movq -2368(%rbp),%rax
            movq 24(%rax),%rax
            cmpq -2360(%rbp),%rax
            jne .L_414f0a
.L_414ef9:
            movq -2368(%rbp),%rax
            movzbl 80(%rax),%edx
            orl $2,%edx
            movb %dl,80(%rax)
.L_414f0a:

            movq -2368(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -2368(%rbp),%rax
            movl 48(%rax),%eax
            cltq 
            addq %rax,%rdx
            movq -2368(%rbp),%rax
            movl 48(%rax),%eax
            notl %eax
            cltq 
            andq %rdx,%rax
            movq %rax,%rdx
            movq -2368(%rbp),%rax
            movq %rdx,24(%rax)
            movq -2368(%rbp),%rax
            movq 24(%rax),%rax
            movq %rax,%rdx
            movq -2368(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rdx
            movq -2368(%rbp),%rax
            movq 32(%rax),%rax
            movq %rax,%rcx
            movq -2368(%rbp),%rax
            movq 8(%rax),%rax
            subq %rax,%rcx
            movq %rcx,%rax
            cmpq %rax,%rdx
            jle .L_414f9c
.L_414f86:
            movq -2368(%rbp),%rax
            movq 32(%rax),%rdx
            movq -2368(%rbp),%rax
            movq %rdx,24(%rax)
.L_414f9c:

            movq -2368(%rbp),%rax
            movq 24(%rax),%rdx
            movq -2368(%rbp),%rax
            movq %rdx,16(%rax)
            movq -2360(%rbp),%rax
            movq %rax,2416(%r12)
            movl 104(%r12),%eax
            leal -1(%rax),%ebx
            movq 96(%r12),%r13
            jmp .L_414ff3
.L_414fd0:

            movq 2416(%r12),%rdx
            movslq %ebx,%rax
            addq %rax,%rdx
            movq 8(%r13),%rax
            movzbl 24(%rax),%eax
            movb %al,(%rdx)
            movq 8(%r13),%rax
            movq 16(%rax),%r13
            subl $1,%ebx
.L_414ff3:

            testl %ebx,%ebx
            jns .L_414fd0
.L_414ff7:
            movl $0,%ebx
            jmp .L_41502e
.L_414ffe:

            movq 2416(%r12),%rdx
            movslq %ebx,%rax
            addq %rdx,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl 104(%r12),%edx
            movl %edx,%ecx
            movl %ebx,%edx
            subl %edx,%ecx
            movl %ecx,%edx
            subl $1,%edx
            cltq 
            movb %dl,-304(%rbp,%rax)
            addl $1,%ebx
.L_41502e:

            movl 104(%r12),%eax
            cmpl %ebx,%eax
            jg .L_414ffe
.L_415037:
            movl 104(%r12),%eax
            movl %eax,2424(%r12)
            movl $0,%ebx
            jmp .L_415091
.L_41504b:

            movq 2416(%r12),%rdx
            movslq %ebx,%rax
            addq %rdx,%rax
            movzbl (%rax),%edx
            movq 2416(%r12),%rax
            movl 104(%r12),%ecx
            movslq %ecx,%rcx
            subq $1,%rcx
            addq %rcx,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            jne .L_41508e
.L_41507a:
            movl 104(%r12),%edx
            leal 1(%rbx),%eax
            subl %eax,%edx
            movl %edx,%eax
            movl %eax,2424(%r12)
.L_41508e:

            addl $1,%ebx
.L_415091:

            movl 104(%r12),%eax
            subl $1,%eax
            cmpl %ebx,%eax
            jg .L_41504b
.L_41509d:
            jmp .L_41528d
.L_4150a2:

            movq 96(%r12),%rax
            movq %rax,-2392(%rbp)
            movq -2392(%rbp),%r13
            jmp .L_415197
.L_4150ba:

            movq 8(%r13),%rax
            leaq -2392(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq enqueue
.L_4150d5:
            movl 104(%r12),%eax
            movl %eax,44(%r13)
            movl 104(%r12),%eax
            movl %eax,48(%r13)
            movl 40(%r13),%ecx
            movq 8(%r13),%rax
            leaq -304(%rbp),%rdx
            movl %ecx,%esi
            movq %rax,%rdi
            movl $0,%eax
            callq treedelta
.L_415105:
            movq 96(%r12),%rdx
            movq 32(%r13),%rcx
            movq 8(%r13),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treefails
.L_415122:
            movq 32(%r13),%rbx
            jmp .L_41518e
.L_415128:

            movq 8(%r13),%rdx
            movq 8(%rbx),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq hasevery
.L_415140:
            testl %eax,%eax
            jne .L_415162
.L_415144:
            movl 40(%r13),%edx
            movl 40(%rbx),%eax
            subl %eax,%edx
            movl 44(%rbx),%eax
            cmpl %eax,%edx
            jge .L_415162
.L_415154:
            movl 40(%r13),%edx
            movl 40(%rbx),%eax
            subl %eax,%edx
            movl %edx,%eax
            movl %eax,44(%rbx)
.L_415162:

            movl (%r13),%eax
            testl %eax,%eax
            je .L_41518a
.L_41516a:
            movl 48(%rbx),%eax
            movl 40(%r13),%ecx
            movl 40(%rbx),%edx
            subl %edx,%ecx
            movl %ecx,%edx
            cmpl %edx,%eax
            jle .L_41518a
.L_41517c:
            movl 40(%r13),%edx
            movl 40(%rbx),%eax
            subl %eax,%edx
            movl %edx,%eax
            movl %eax,48(%rbx)
.L_41518a:

            movq 32(%rbx),%rbx
.L_41518e:

            testq %rbx,%rbx
            jne .L_415128
.L_415193:
            movq 24(%r13),%r13
.L_415197:

            testq %r13,%r13
            jne .L_4150ba
.L_4151a0:
            movq 96(%r12),%rax
            movq 24(%rax),%r13
            jmp .L_4151dd
.L_4151ab:

            movl 48(%r13),%edx
            movq 16(%r13),%rax
            movl 48(%rax),%eax
            cmpl %eax,%edx
            jle .L_4151c5
.L_4151ba:
            movq 16(%r13),%rax
            movl 48(%rax),%eax
            movl %eax,48(%r13)
.L_4151c5:

            movl 44(%r13),%edx
            movl 48(%r13),%eax
            cmpl %eax,%edx
            jle .L_4151d9
.L_4151d1:
            movl 48(%r13),%eax
            movl %eax,44(%r13)
.L_4151d9:

            movq 24(%r13),%r13
.L_4151dd:

            testq %r13,%r13
            jne .L_4151ab
.L_4151e2:
            movl $0,%ebx
            jmp .L_4151fb
.L_4151e9:

            movslq %ebx,%rax
            movq $0,-2352(%rbp,%rax,8)
            addl $1,%ebx
.L_4151fb:

            cmpl $255,%ebx
            jle .L_4151e9
.L_415203:
            movq 96(%r12),%rax
            movq 8(%rax),%rax
            leaq -2352(%rbp),%rdx
            movq %rdx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq treenext
.L_415223:
            movq 2432(%r12),%r13
            testq %r13,%r13
            je .L_415265
.L_415230:
            movl $0,%ebx
            jmp .L_41525b
.L_415237:

            movslq %ebx,%rax
            addq %r13,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cltq 
            movq -2352(%rbp,%rax,8),%rax
            movslq %ebx,%rdx
            addq $46,%rdx
            movq %rax,(%r12,%rdx,8)
            addl $1,%ebx
.L_41525b:

            cmpl $255,%ebx
            jle .L_415237
.L_415263:
            jmp .L_41528d
.L_415265:

            movl $0,%ebx
            jmp .L_415285
.L_41526c:

            movslq %ebx,%rax
            movq -2352(%rbp,%rax,8),%rax
            movslq %ebx,%rdx
            addq $46,%rdx
            movq %rax,(%r12,%rdx,8)
            addl $1,%ebx
.L_415285:

            cmpl $255,%ebx
            jle .L_41526c
.L_41528d:

            movq 2432(%r12),%r13
            testq %r13,%r13
            je .L_4152cc
.L_41529a:
            movl $0,%ebx
            jmp .L_4152c2
.L_4152a1:

            movslq %ebx,%rax
            addq %r13,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cltq 
            movzbl -304(%rbp,%rax),%edx
            movslq %ebx,%rax
            movb %dl,112(%r12,%rax)
            addl $1,%ebx
.L_4152c2:

            cmpl $255,%ebx
            jle .L_4152a1
.L_4152ca:
            jmp .L_4152f1
.L_4152cc:

            movl $0,%ebx
            jmp .L_4152e9
.L_4152d3:

            movslq %ebx,%rax
            movzbl -304(%rbp,%rax),%edx
            movslq %ebx,%rax
            movb %dl,112(%r12,%rax)
            addl $1,%ebx
.L_4152e9:

            cmpl $255,%ebx
            jle .L_4152d3
.L_4152f1:

            movl $0,%eax
            movq -40(%rbp),%rsi
            xorq %fs:40,%rsi
            je .L_41530a
.L_415305:
            callq __stack_chk_fail@PLT
.L_41530a:

            addq $2392,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl bmexec
.type bmexec, @function
bmexec:
#-----------------------------------
# END   - Function Header

bmexec:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r15
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $56,%rsp
            movq %rdi,-72(%rbp)
            movq %rsi,-80(%rbp)
            movq %rdx,-88(%rbp)
            movq -72(%rbp),%rax
            movq %rax,-56(%rbp)
            movq -56(%rbp),%rax
            movl 104(%rax),%r13d
            testl %r13d,%r13d
            jne .L_415353
.L_41534a:
            movq -80(%rbp),%rax
            jmp .L_415650
.L_415353:

            movslq %r13d,%rax
            cmpq -88(%rbp),%rax
            jbe .L_415366
.L_41535c:
            movl $0,%eax
            jmp .L_415650
.L_415366:

            cmpl $1,%r13d
            jne .L_415394
.L_41536c:
            movq -56(%rbp),%rax
            movq 2416(%rax),%rax
            movzbl (%rax),%eax
            movsbl %al,%ecx
            movq -88(%rbp),%rdx
            movq -80(%rbp),%rax
            movl %ecx,%esi
            movq %rax,%rdi
            callq memchr@PLT
.L_41538f:
            jmp .L_415650
.L_415394:

            movq -56(%rbp),%rax
            leaq 112(%rax),%r14
            movq -56(%rbp),%rax
            movq 2416(%rax),%rdx
            movslq %r13d,%rax
            leaq (%rdx,%rax),%r15
            leaq -2(%r15),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movl %eax,%esi
            movq -56(%rbp),%rax
            movl 2424(%rax),%eax
            movl %eax,%r9d
            movslq %r13d,%rdx
            movq -80(%rbp),%rax
            leaq (%rdx,%rax),%rbx
            movl %r13d,%eax
            addl %eax,%eax
            addl %r13d,%eax
            shll $2,%eax
            cltq 
            cmpq -88(%rbp),%rax
            jae .L_41559c
.L_4153e9:
            movl %r13d,%eax
            shll $2,%eax
            addl %r13d,%eax
            addl %eax,%eax
            addl %r13d,%eax
            cltq 
            movq -88(%rbp),%rdx
            subq %rax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%r8
.L_41540a:

            jmp .L_41552a
.L_41540f:

            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            testl %r12d,%r12d
            je .L_415538
.L_41544c:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            testl %r12d,%r12d
            je .L_41553b
.L_4154a3:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            testl %r12d,%r12d
            je .L_41553e
.L_4154f6:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            movslq %r12d,%rax
            addq %rax,%rbx
.L_41552a:

            movq %r8,%rax
            cmpq %rax,%rbx
            jbe .L_41540f
.L_415536:
            jmp .L_41559c
.L_415538:

            nop
            jmp .L_41553f
.L_41553b:

            nop
            jmp .L_41553f
.L_41553e:

            nop
.L_41553f:

            leaq -2(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            cmpl %esi,%eax
            jne .L_41558f
.L_41554d:
            movl $3,%r12d
            jmp .L_415559
.L_415555:

            addl $1,%r12d
.L_415559:

            cmpl %r13d,%r12d
            jg .L_41557c
.L_41555e:
            movl %r12d,%eax
            negl %eax
            cltq 
            addq %rbx,%rax
            movzbl (%rax),%edx
            movl %r12d,%eax
            negl %eax
            cltq 
            addq %r15,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            je .L_415555
.L_41557c:

            cmpl %r13d,%r12d
            jle .L_41558f
.L_415581:
            movslq %r13d,%rax
            negq %rax
            addq %rbx,%rax
            jmp .L_415650
.L_41558f:

            movl %r9d,%eax
            cltq 
            addq %rax,%rbx
            jmp .L_41540a
.L_41559c:

            movq -80(%rbp),%rdx
            movq -88(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%r8
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            jmp .L_415633
.L_4155c0:

            movslq %r12d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %r14,%rax
            movzbl (%rax),%eax
            movzbl %al,%r12d
            testl %r12d,%r12d
            je .L_4155e1
.L_4155df:
            jmp .L_415633
.L_4155e1:

            leaq -2(%rbx),%rax
            movzbl (%rax),%eax
            movsbl %al,%eax
            movl %esi,%edi
            cmpl %edi,%eax
            jne .L_415630
.L_4155f1:
            movl $3,%r12d
            jmp .L_4155fd
.L_4155f9:

            addl $1,%r12d
.L_4155fd:

            cmpl %r13d,%r12d
            jg .L_415620
.L_415602:
            movl %r12d,%eax
            negl %eax
            cltq 
            addq %rbx,%rax
            movzbl (%rax),%edx
            movl %r12d,%eax
            negl %eax
            cltq 
            addq %r15,%rax
            movzbl (%rax),%eax
            cmpb %al,%dl
            je .L_4155f9
.L_415620:

            cmpl %r13d,%r12d
            jle .L_415630
.L_415625:
            movslq %r13d,%rax
            negq %rax
            addq %rbx,%rax
            jmp .L_415650
.L_415630:

            movl %r9d,%r12d
.L_415633:

            movslq %r12d,%rax
            movq %r8,%rcx
            movq %rbx,%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            cmpq %rdx,%rax
            jle .L_4155c0
.L_41564b:
            movl $0,%eax
.L_415650:

            addq $56,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %r15
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl cwexec
.type cwexec, @function
cwexec:
#-----------------------------------
# END   - Function Header

cwexec:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r15
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            movq %rdi,-112(%rbp)
            movq %rsi,-120(%rbp)
            movq %rdx,-128(%rbp)
            movq %rcx,-136(%rbp)
            movq -112(%rbp),%rax
            movq %rax,-56(%rbp)
            movq -56(%rbp),%rax
            movl 104(%rax),%eax
            cltq 
            cmpq -128(%rbp),%rax
            jbe .L_4156a0
.L_415696:
            movl $0,%eax
            jmp .L_415ae4
.L_4156a0:

            movq -56(%rbp),%rax
            addq $368,%rax
            movq %rax,-48(%rbp)
            movq -56(%rbp),%rax
            leaq 112(%rax),%r15
            movq -56(%rbp),%rax
            movq 2432(%rax),%rax
            movq %rax,%rcx
            movq -120(%rbp),%rdx
            movq -128(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-80(%rbp)
            movq -120(%rbp),%rbx
            movq -56(%rbp),%rax
            movl 104(%rax),%r13d
            testl %r13d,%r13d
            je .L_415700
.L_4156e4:
            movq $0,-72(%rbp)
            movq -56(%rbp),%rax
            movl 104(%rax),%eax
            shll $2,%eax
            cltq 
            cmpq -128(%rbp),%rax
            ja .L_41573a
.L_4156fe:
            jmp .L_415719
.L_415700:

            movq -120(%rbp),%rax
            movq %rax,-72(%rbp)
            movq -56(%rbp),%rax
            movq 96(%rax),%rax
            movq %rax,-96(%rbp)
            jmp .L_4158ed
.L_415719:

            movq -56(%rbp),%rax
            movl 104(%rax),%eax
            shll $2,%eax
            cltq 
            negq %rax
            movq %rax,%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rdi
            jmp .L_4158ca
.L_41573a:

            movl $0,%edi
            jmp .L_4158ca
.L_415744:

            movq %rdi,%rax
            testq %rax,%rax
            je .L_4157b1
.L_41574c:
            movq %rdi,%rax
            cmpq %rax,%rbx
            ja .L_4157b1
.L_415754:
            movslq %r13d,%rax
            subq $1,%rax
            addq %rax,%rbx
            jmp .L_41578a
.L_415760:

            movslq %r13d,%rax
            addq %rax,%rbx
            movzbl (%rbx),%eax
            movzbl %al,%eax
            addq %r15,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rax,%rbx
            movzbl (%rbx),%eax
            movzbl %al,%eax
            addq %r15,%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rax,%rbx
.L_41578a:

            movzbl (%rbx),%eax
            movl %eax,%r14d
            movzbl %r14b,%eax
            addq %r15,%rax
            movzbl (%rax),%eax
            movzbl %al,%r13d
            testl %r13d,%r13d
            je .L_4157ab
.L_4157a3:
            movq %rdi,%rax
            cmpq %rax,%rbx
            jb .L_415760
.L_4157ab:

            addq $1,%rbx
            jmp .L_4157cf
.L_4157b1:

            movslq %r13d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movl %eax,%r14d
            movzbl %r14b,%eax
            addq %r15,%rax
            movzbl (%rax),%eax
            movzbl %al,%r13d
.L_4157cf:

            testl %r13d,%r13d
            je .L_4157d9
.L_4157d4:
            jmp .L_4158ca
.L_4157d9:

            leaq -1(%rbx),%rax
            movq %rax,-88(%rbp)
            movzbl %r14b,%eax
            leaq (,%rax,8),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-104(%rbp)
            movq -104(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_415815
.L_415805:
            movq -88(%rbp),%rax
            movq %rax,-72(%rbp)
            movq -104(%rbp),%rax
            movq %rax,-96(%rbp)
.L_415815:

            movq -104(%rbp),%rax
            movl 44(%rax),%r13d
            jmp .L_4158b0
.L_415822:

            movq %rcx,%rax
            testq %rax,%rax
            je .L_415841
.L_41582a:
            subq $1,-88(%rbp)
            movq -88(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rcx,%rax
            movzbl (%rax),%eax
            jmp .L_41584d
.L_415841:

            subq $1,-88(%rbp)
            movq -88(%rbp),%rax
            movzbl (%rax),%eax
.L_41584d:

            movl %eax,%r14d
            movq -104(%rbp),%rax
            movq 8(%rax),%r12
            jmp .L_415870
.L_41585a:

            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jbe .L_41586b
.L_415865:
            movq (%r12),%r12
            jmp .L_415870
.L_41586b:

            movq 8(%r12),%r12
.L_415870:

            testq %r12,%r12
            je .L_415880
.L_415875:
            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jne .L_41585a
.L_415880:

            testq %r12,%r12
            je .L_4158c0
.L_415885:
            movq 16(%r12),%rax
            movq %rax,-104(%rbp)
            movq -104(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_4158a8
.L_415898:
            movq -88(%rbp),%rax
            movq %rax,-72(%rbp)
            movq -104(%rbp),%rax
            movq %rax,-96(%rbp)
.L_4158a8:

            movq -104(%rbp),%rax
            movl 44(%rax),%r13d
.L_4158b0:

            movq -88(%rbp),%rax
            cmpq -120(%rbp),%rax
            ja .L_415822
.L_4158be:
            jmp .L_4158c1
.L_4158c0:

            nop
.L_4158c1:

            cmpq $0,-72(%rbp)
            je .L_4158ca
.L_4158c8:
            jmp .L_4158ed
.L_4158ca:

            movq -80(%rbp),%rax
            movq %rbx,%rdx
            subq %rdx,%rax
            movq %rax,%rdx
            movslq %r13d,%rax
            cmpq %rax,%rdx
            jge .L_415744
.L_4158e3:
            movl $0,%eax
            jmp .L_415ae4
.L_4158ed:

            movq -80(%rbp),%rdx
            movq -72(%rbp),%rax
            subq %rax,%rdx
            movq -56(%rbp),%rax
            movl 108(%rax),%eax
            cltq 
            cmpq %rax,%rdx
            jle .L_41591b
.L_415906:
            movq -56(%rbp),%rax
            movl 108(%rax),%eax
            movslq %eax,%rdx
            movq -72(%rbp),%rax
            addq %rdx,%rax
            movq %rax,-80(%rbp)
.L_41591b:

            movq $0,-64(%rbp)
            movl $1,%r13d
            jmp .L_415a86
.L_41592e:

            movslq %r13d,%rax
            addq %rax,%rbx
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            movl %eax,%r14d
            movzbl %r14b,%eax
            addq %r15,%rax
            movzbl (%rax),%eax
            movzbl %al,%r13d
            testl %r13d,%r13d
            je .L_415956
.L_415951:
            jmp .L_415a86
.L_415956:

            leaq -1(%rbx),%rax
            movq %rax,-88(%rbp)
            movzbl %r14b,%eax
            leaq (,%rax,8),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            movq (%rax),%rax
            movq %rax,-104(%rbp)
            cmpq $0,-104(%rbp)
            jne .L_41598a
.L_41597f:
            movl $1,%r13d
            jmp .L_415a86
.L_41598a:

            movq -104(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_4159ae
.L_415994:
            movq -88(%rbp),%rax
            cmpq -72(%rbp),%rax
            ja .L_4159ae
.L_41599e:
            movq -88(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -104(%rbp),%rax
            movq %rax,-96(%rbp)
.L_4159ae:

            movq -104(%rbp),%rax
            movl 44(%rax),%r13d
            jmp .L_415a56
.L_4159bb:

            movq %rcx,%rax
            testq %rax,%rax
            je .L_4159dd
.L_4159c3:
            subq $1,-88(%rbp)
            movq -88(%rbp),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            movq %rcx,%rsi
            addq %rsi,%rax
            movzbl (%rax),%eax
            jmp .L_4159e9
.L_4159dd:

            subq $1,-88(%rbp)
            movq -88(%rbp),%rax
            movzbl (%rax),%eax
.L_4159e9:

            movl %eax,%r14d
            movq -104(%rbp),%rax
            movq 8(%rax),%r12
            jmp .L_415a0c
.L_4159f6:

            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jbe .L_415a07
.L_415a01:
            movq (%r12),%r12
            jmp .L_415a0c
.L_415a07:

            movq 8(%r12),%r12
.L_415a0c:

            testq %r12,%r12
            je .L_415a1c
.L_415a11:
            movzbl 24(%r12),%eax
            cmpb %r14b,%al
            jne .L_4159f6
.L_415a1c:

            testq %r12,%r12
            je .L_415a66
.L_415a21:
            movq 16(%r12),%rax
            movq %rax,-104(%rbp)
            movq -104(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_415a4e
.L_415a34:
            movq -88(%rbp),%rax
            cmpq -72(%rbp),%rax
            ja .L_415a4e
.L_415a3e:
            movq -88(%rbp),%rax
            movq %rax,-64(%rbp)
            movq -104(%rbp),%rax
            movq %rax,-96(%rbp)
.L_415a4e:

            movq -104(%rbp),%rax
            movl 44(%rax),%r13d
.L_415a56:

            movq -88(%rbp),%rax
            cmpq -120(%rbp),%rax
            ja .L_4159bb
.L_415a64:
            jmp .L_415a67
.L_415a66:

            nop
.L_415a67:

            cmpq $0,-64(%rbp)
            je .L_415a7b
.L_415a6e:
            movq -64(%rbp),%rax
            movq %rax,-72(%rbp)
            jmp .L_4158ed
.L_415a7b:

            testl %r13d,%r13d
            jne .L_415a86
.L_415a80:
            movl $1,%r13d
.L_415a86:

            movq -80(%rbp),%rax
            movq %rbx,%rdx
            subq %rdx,%rax
            movq %rax,%rdx
            movslq %r13d,%rax
            cmpq %rax,%rdx
            jge .L_41592e
.L_415a9f:
            cmpq $0,-136(%rbp)
            je .L_415ae0
.L_415aa9:
            movq -96(%rbp),%rax
            movl (%rax),%eax
            shrl $1,%eax
            movl %eax,%edx
            movq -136(%rbp),%rax
            movl %edx,(%rax)
            movq -136(%rbp),%rax
            movq -72(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -96(%rbp),%rax
            movl 40(%rax),%eax
            movslq %eax,%rdx
            movq -136(%rbp),%rax
            movq %rdx,16(%rax)
.L_415ae0:

            movq -72(%rbp),%rax
.L_415ae4:

            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %r15
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl kwsexec
.type kwsexec, @function
kwsexec:
#-----------------------------------
# END   - Function Header

kwsexec:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-24(%rbp)
            movq %rsi,-32(%rbp)
            movq %rdx,-40(%rbp)
            movq %rcx,-48(%rbp)
            movq -24(%rbp),%rax
            movq %rax,-16(%rbp)
            movq -16(%rbp),%rax
            movl 88(%rax),%eax
            cmpl $1,%eax
            jne .L_415b87
.L_415b1b:
            movq -16(%rbp),%rax
            movq 2432(%rax),%rax
            testq %rax,%rax
            jne .L_415b87
.L_415b2b:
            movq -40(%rbp),%rdx
            movq -32(%rbp),%rcx
            movq -24(%rbp),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            movl $0,%eax
            callq bmexec
.L_415b47:
            movq %rax,-8(%rbp)
            cmpq $0,-48(%rbp)
            je .L_415b81
.L_415b52:
            cmpq $0,-8(%rbp)
            je .L_415b81
.L_415b59:
            movq -48(%rbp),%rax
            movl $0,(%rax)
            movq -48(%rbp),%rax
            movq -8(%rbp),%rdx
            movq %rdx,8(%rax)
            movq -16(%rbp),%rax
            movl 104(%rax),%eax
            movslq %eax,%rdx
            movq -48(%rbp),%rax
            movq %rdx,16(%rax)
.L_415b81:

            movq -8(%rbp),%rax
            jmp .L_415ba4
.L_415b87:

            movq -48(%rbp),%rcx
            movq -40(%rbp),%rdx
            movq -32(%rbp),%rsi
            movq -24(%rbp),%rax
            movq %rax,%rdi
            movl $0,%eax
            callq cwexec
.L_415ba4:

            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl kwsfree
.type kwsfree, @function
kwsfree:
#-----------------------------------
# END   - Function Header

kwsfree:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq -40(%rbp),%rax
            movq %rax,-24(%rbp)
            movq -24(%rbp),%rax
            movq %rax,-16(%rbp)
            movq $0,-8(%rbp)
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            cmpq -8(%rbp),%rax
            jae .L_415c04
.L_415bd8:
            movq -16(%rbp),%rax
            movq 32(%rax),%rax
            cmpq -8(%rbp),%rax
            jbe .L_415c04
.L_415be6:
            movq -16(%rbp),%rax
            movq -8(%rbp),%rdx
            movq %rdx,16(%rax)
            movq -16(%rbp),%rax
            movq 16(%rax),%rdx
            movq -16(%rbp),%rax
            movq %rdx,24(%rax)
            jmp .L_415c17
.L_415c04:

            movq -8(%rbp),%rdx
            movq -16(%rbp),%rax
            movq %rdx,%rsi
            movq %rax,%rdi
            callq obstack_free@PLT
.L_415c17:

            movq -40(%rbp),%rax
            movq %rax,%rdi
            callq free@PLT
.L_415c23:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl dfaerror
.type dfaerror, @function
dfaerror:
#-----------------------------------
# END   - Function Header

dfaerror:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq %rdi,-8(%rbp)
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_415c43:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl kwsinit
.type kwsinit, @function
kwsinit:
#-----------------------------------
# END   - Function Header

kwsinit:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movl match_icase(%rip),%eax
            testl %eax,%eax
            je .L_415caf
.L_415c58:
            movl $0,-4(%rbp)
            jmp .L_415ca6
.L_415c61:

            callq __ctype_b_loc@PLT
.L_415c66:
            movq (%rax),%rax
            movl -4(%rbp),%edx
            movslq %edx,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $256,%eax
            testl %eax,%eax
            je .L_415c92
.L_415c84:
            movl -4(%rbp),%eax
            movl %eax,%edi
            callq tolower@PLT
.L_415c8e:
            movl %eax,%edx
            jmp .L_415c97
.L_415c92:

            movl -4(%rbp),%eax
            movl %eax,%edx
.L_415c97:

            movl -4(%rbp),%eax
            cltq 
            movb %dl,trans.6329(%rax)
            addl $1,-4(%rbp)
.L_415ca6:

            cmpl $255,-4(%rbp)
            jle .L_415c61
.L_415caf:

            movl match_icase(%rip),%eax
            testl %eax,%eax
            je .L_415cc0
.L_415cb9:
            movl $trans.6329,%eax
            jmp .L_415cc5
.L_415cc0:

            movl $0,%eax
.L_415cc5:

            movq %rax,%rdi
            callq kwsalloc
.L_415ccd:
            movq %rax,kwset(%rip)
            movq kwset(%rip),%rax
            testq %rax,%rax
            jne .L_415cef
.L_415ce0:
            movl $0,%esi
            movl $.L_416a7c,%edi
            callq fatal
.L_415cef:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl kwsmusts
.type kwsmusts, @function
kwsmusts:
#-----------------------------------
# END   - Function Header

kwsmusts:

            pushq %rbp
            movq %rsp,%rbp
            subq $16,%rsp
            movq dfa_1+128(%rip),%rax
            testq %rax,%rax
            je .L_415e3a
.L_415d0a:
            movl $0,%eax
            callq kwsinit
.L_415d14:
            movq dfa_1+128(%rip),%rax
            movq %rax,-16(%rbp)
            jmp .L_415d92
.L_415d21:

            movq -16(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            je .L_415d85
.L_415d2b:
            movl lastexact(%rip),%eax
            addl $1,%eax
            movl %eax,lastexact(%rip)
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_415d4a:
            movq %rax,%rdx
            movq -16(%rbp),%rax
            movq 8(%rax),%rcx
            movq kwset(%rip),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq kwsincr
.L_415d67:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_415d86
.L_415d72:
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_415d83:
            jmp .L_415d86
.L_415d85:

            nop
.L_415d86:

            movq -16(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-16(%rbp)
.L_415d92:

            cmpq $0,-16(%rbp)
            jne .L_415d21
.L_415d99:
            movq dfa_1+128(%rip),%rax
            movq %rax,-16(%rbp)
            jmp .L_415e08
.L_415da6:

            movq -16(%rbp),%rax
            movl (%rax),%eax
            testl %eax,%eax
            jne .L_415dfb
.L_415db0:
            movq -16(%rbp),%rax
            movq 8(%rax),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_415dc0:
            movq %rax,%rdx
            movq -16(%rbp),%rax
            movq 8(%rax),%rcx
            movq kwset(%rip),%rax
            movq %rcx,%rsi
            movq %rax,%rdi
            callq kwsincr
.L_415ddd:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_415dfc
.L_415de8:
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_415df9:
            jmp .L_415dfc
.L_415dfb:

            nop
.L_415dfc:

            movq -16(%rbp),%rax
            movq 16(%rax),%rax
            movq %rax,-16(%rbp)
.L_415e08:

            cmpq $0,-16(%rbp)
            jne .L_415da6
.L_415e0f:
            movq kwset(%rip),%rax
            movq %rax,%rdi
            callq kwsprep
.L_415e1e:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_415e3a
.L_415e29:
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_415e3a:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl Gcompile
.type Gcompile, @function
Gcompile:
#-----------------------------------
# END   - Function Header

Gcompile:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movl $2822,%edi
            callq re_set_syntax
.L_415e57:
            movl match_icase(%rip),%eax
            movl %eax,%esi
            movl $2822,%edi
            callq dfasyntax
.L_415e69:
            movq -48(%rbp),%rax
            movl %eax,%ecx
            movq -40(%rbp),%rax
            movl $regex,%edx
            movl %ecx,%esi
            movq %rax,%rdi
            callq re_compile_pattern
.L_415e82:
            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            je .L_415e9e
.L_415e8d:
            movq -16(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_415e9e:

            movl $dfa_1,%edi
            callq dfainit
.L_415ea8:
            movl match_words(%rip),%eax
            testl %eax,%eax
            jne .L_415ec0
.L_415eb2:
            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_416010
.L_415ec0:

            movq -48(%rbp),%rax
            addq $50,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc
.L_415ed5:
            movq %rax,-8(%rbp)
            movl $0,-20(%rbp)
            movq -8(%rbp),%rax
            movb $0,(%rax)
            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_415efb
.L_415ef1:
            movq -8(%rbp),%rax
            movl $2645086,(%rax)
.L_415efb:

            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_415f35
.L_415f05:
            movq -8(%rbp),%rax
            movabsq $3485323751315089500,%rcx
            movq %rcx,(%rax)
            movabsq $8803799886513387821,%rcx
            movq %rcx,8(%rax)
            movl $693919071,16(%rax)
            movw $10332,20(%rax)
            movb $0,22(%rax)
.L_415f35:

            movq -8(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_415f41:
            movl %eax,-20(%rbp)
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            leaq (%rdx,%rax),%rcx
            movq -48(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rax,%rsi
            movq %rcx,%rdi
            callq memcpy@PLT
.L_415f65:
            movq -48(%rbp),%rax
            movl %eax,%edx
            movl -20(%rbp),%eax
            addl %edx,%eax
            movl %eax,-20(%rbp)
            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_415fb6
.L_415f7d:
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movabsq $3256206276201032028,%rcx
            movq %rcx,(%rax)
            movabsq $6879861276909846841,%rsi
            movq %rsi,8(%rax)
            movl $612129885,16(%rax)
            movw $10588,20(%rax)
            movb $0,22(%rax)
.L_415fb6:

            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_415fd3
.L_415fc0:
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movl $2369884,(%rax)
.L_415fd3:

            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_415fe8:
            movl %eax,%edx
            movl -20(%rbp),%eax
            addl %edx,%eax
            movl %eax,-20(%rbp)
            movl -20(%rbp),%eax
            movslq %eax,%rsi
            movq -8(%rbp),%rax
            movl $1,%ecx
            movl $dfa_1,%edx
            movq %rax,%rdi
            callq dfacomp
.L_41600e:
            jmp .L_41602a
.L_416010:

            movq -48(%rbp),%rsi
            movq -40(%rbp),%rax
            movl $1,%ecx
            movl $dfa_1,%edx
            movq %rax,%rdi
            callq dfacomp
.L_41602a:

            movl $0,%eax
            callq kwsmusts
.L_416034:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl Ecompile
.type Ecompile, @function
Ecompile:
#-----------------------------------
# END   - Function Header

Ecompile:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movq matcher(%rip),%rax
            movl $.L_416b52,%esi
            movq %rax,%rdi
            callq strcmp@PLT
.L_41605b:
            testl %eax,%eax
            jne .L_41607d
.L_41605f:
            movl $47900,%edi
            callq re_set_syntax
.L_416069:
            movl match_icase(%rip),%eax
            movl %eax,%esi
            movl $47900,%edi
            callq dfasyntax
.L_41607b:
            jmp .L_416099
.L_41607d:

            movl $43292,%edi
            callq re_set_syntax
.L_416087:
            movl match_icase(%rip),%eax
            movl %eax,%esi
            movl $43292,%edi
            callq dfasyntax
.L_416099:

            movq -48(%rbp),%rax
            movl %eax,%ecx
            movq -40(%rbp),%rax
            movl $regex,%edx
            movl %ecx,%esi
            movq %rax,%rdi
            callq re_compile_pattern
.L_4160b2:
            movq %rax,-16(%rbp)
            cmpq $0,-16(%rbp)
            je .L_4160ce
.L_4160bd:
            movq -16(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_4160ce:

            movl $dfa_1,%edi
            callq dfainit
.L_4160d8:
            movl match_words(%rip),%eax
            testl %eax,%eax
            jne .L_4160f0
.L_4160e2:
            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_416238
.L_4160f0:

            movq -48(%rbp),%rax
            addq $50,%rax
            movq %rax,%rdi
            movl $0,%eax
            callq xmalloc
.L_416105:
            movq %rax,-8(%rbp)
            movl $0,-20(%rbp)
            movq -8(%rbp),%rax
            movb $0,(%rax)
            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_41612e
.L_416121:
            movq -8(%rbp),%rax
            movw $10334,(%rax)
            movb $0,2(%rax)
.L_41612e:

            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_416161
.L_416138:
            movq -8(%rbp),%rax
            movabsq $4120002415933808168,%rcx
            movq %rcx,(%rax)
            movabsq $6728230703640227137,%rcx
            movq %rcx,8(%rax)
            movw $10281,16(%rax)
            movb $0,18(%rax)
.L_416161:

            movq -8(%rbp),%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_41616d:
            movl %eax,-20(%rbp)
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            leaq (%rdx,%rax),%rcx
            movq -48(%rbp),%rdx
            movq -40(%rbp),%rax
            movq %rax,%rsi
            movq %rcx,%rdi
            callq memcpy@PLT
.L_416191:
            movq -48(%rbp),%rax
            movl %eax,%edx
            movl -20(%rbp),%eax
            addl %edx,%eax
            movl %eax,-20(%rbp)
            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_4161db
.L_4161a9:
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movabsq $4699837371902535721,%rcx
            movq %rcx,(%rax)
            movabsq $8961423811889158701,%rcx
            movq %rcx,8(%rax)
            movw $10532,16(%rax)
            movb $0,18(%rax)
.L_4161db:

            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_4161fb
.L_4161e5:
            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movw $9257,(%rax)
            movb $0,2(%rax)
.L_4161fb:

            movl -20(%rbp),%eax
            movslq %eax,%rdx
            movq -8(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rdi
            callq strlen@PLT
.L_416210:
            movl %eax,%edx
            movl -20(%rbp),%eax
            addl %edx,%eax
            movl %eax,-20(%rbp)
            movl -20(%rbp),%eax
            movslq %eax,%rsi
            movq -8(%rbp),%rax
            movl $1,%ecx
            movl $dfa_1,%edx
            movq %rax,%rdi
            callq dfacomp
.L_416236:
            jmp .L_416252
.L_416238:

            movq -48(%rbp),%rsi
            movq -40(%rbp),%rax
            movl $1,%ecx
            movl $dfa_1,%edx
            movq %rax,%rdi
            callq dfacomp
.L_416252:

            movl $0,%eax
            callq kwsmusts
.L_41625c:
            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl EGexecute
.type EGexecute, @function
EGexecute:
#-----------------------------------
# END   - Function Header

EGexecute:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r14
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $80,%rsp
            movq %rdi,-88(%rbp)
            movq %rsi,-96(%rbp)
            movq %rdx,-104(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -88(%rbp),%rdx
            movq -96(%rbp),%rax
            leaq (%rdx,%rax),%r13
            movq -88(%rbp),%r12
            movq %r12,%rbx
            jmp .L_41662d
.L_4162a1:

            movq kwset(%rip),%rax
            testq %rax,%rax
            je .L_416380
.L_4162b1:
            movq %r13,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rsi
            movq kwset(%rip),%rax
            leaq -64(%rbp),%rdx
            movq %rdx,%rcx
            movq %rsi,%rdx
            movq %rbx,%rsi
            movq %rax,%rdi
            callq kwsexec
.L_4162dc:
            movq %rax,%rbx
            testq %rbx,%rbx
            je .L_416638
.L_4162e8:
            movq %r13,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movl $10,%esi
            movq %rbx,%rdi
            callq memchr@PLT
.L_416304:
            movq %rax,%r12
            testq %r12,%r12
            jne .L_416315
.L_41630c:
            movq %r13,%r12
            jmp .L_416315
.L_416311:

            subq $1,%rbx
.L_416315:

            cmpq -88(%rbp),%rbx
            jbe .L_416326
.L_41631b:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_416311
.L_416326:

            movzbl (%r12),%r14d
            movl -64(%rbp),%edx
            movl lastexact(%rip),%eax
            cmpl %eax,%edx
            jl .L_416643
.L_41633c:
            leaq -76(%rbp),%rax
            movq %rax,%r9
            movl $0,%r8d
            movl $0,%ecx
            movq %r12,%rdx
            movq %rbx,%rsi
            movl $dfa_1,%edi
            callq dfaexec
.L_41635e:
            testq %rax,%rax
            jne .L_41636c
.L_416363:
            movb %r14b,(%r12)
            jmp .L_416628
.L_41636c:

            movb %r14b,(%r12)
            movl -76(%rbp),%eax
            testl %eax,%eax
            jne .L_416400
.L_41637b:
            jmp .L_416647
.L_416380:

            movzbl (%r13),%r14d
            leaq -76(%rbp),%rax
            movq %rax,%r9
            movl $0,%r8d
            movl $0,%ecx
            movq %r13,%rdx
            movq %rbx,%rsi
            movl $dfa_1,%edi
            callq dfaexec
.L_4163a7:
            movq %rax,%rbx
            movb %r14b,(%r13)
            testq %rbx,%rbx
            je .L_41663b
.L_4163b7:
            movq %r13,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movl $10,%esi
            movq %rbx,%rdi
            callq memchr@PLT
.L_4163d3:
            movq %rax,%r12
            testq %r12,%r12
            jne .L_4163e4
.L_4163db:
            movq %r13,%r12
            jmp .L_4163e4
.L_4163e0:

            subq $1,%rbx
.L_4163e4:

            cmpq -88(%rbp),%rbx
            jbe .L_4163f5
.L_4163ea:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_4163e0
.L_4163f5:

            movl -76(%rbp),%eax
            testl %eax,%eax
            je .L_416646
.L_416400:

            movzbl regex+56(%rip),%eax
            andl $4294967231,%eax
            movb %al,regex+56(%rip)
            movq %r12,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movl %eax,%edx
            movq %r12,%rcx
            movq %rbx,%rax
            subq %rax,%rcx
            movq %rcx,%rax
            movl $regs.6373,%r9d
            movl %edx,%r8d
            movl $0,%ecx
            movl %eax,%edx
            movq %rbx,%rsi
            movl $regex,%edi
            callq re_search
.L_416447:
            movl %eax,-72(%rbp)
            cmpl $0,-72(%rbp)
            js .L_416628
.L_416454:
            movq regs.6373+16(%rip),%rax
            movl (%rax),%eax
            subl -72(%rbp),%eax
            movl %eax,-68(%rbp)
            movl match_lines(%rip),%eax
            testl %eax,%eax
            jne .L_41647b
.L_41646d:
            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_416647
.L_41647b:

            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_41649f
.L_416485:
            movl -68(%rbp),%eax
            cltq 
            movq %r12,%rcx
            movq %rbx,%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            cmpq %rdx,%rax
            je .L_416647
.L_41649f:

            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_416628
.L_4164ad:
            jmp .L_41661b
.L_4164b2:

            cmpl $0,-72(%rbp)
            je .L_4164fa
.L_4164b8:
            callq __ctype_b_loc@PLT
.L_4164bd:
            movq (%rax),%rax
            movl -72(%rbp),%edx
            movslq %edx,%rdx
            subq $1,%rdx
            addq %rbx,%rdx
            movzbl (%rdx),%edx
            movsbq %dl,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_41655c
.L_4164e7:
            movl -72(%rbp),%eax
            cltq 
            subq $1,%rax
            addq %rbx,%rax
            movzbl (%rax),%eax
            cmpb $95,%al
            je .L_41655c
.L_4164fa:

            movl -68(%rbp),%eax
            cltq 
            movq %r12,%rcx
            movq %rbx,%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            cmpq %rdx,%rax
            je .L_416647
.L_416514:
            callq __ctype_b_loc@PLT
.L_416519:
            movq (%rax),%rax
            movl -72(%rbp),%ecx
            movl -68(%rbp),%edx
            addl %ecx,%edx
            movslq %edx,%rdx
            addq %rbx,%rdx
            movzbl (%rdx),%edx
            movsbq %dl,%rdx
            addq %rdx,%rdx
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_41655c
.L_416544:
            movl -72(%rbp),%edx
            movl -68(%rbp),%eax
            addl %edx,%eax
            cltq 
            addq %rbx,%rax
            movzbl (%rax),%eax
            cmpb $95,%al
            jne .L_416647
.L_41655c:

            cmpl $0,-68(%rbp)
            jle .L_416599
.L_416562:
            subl $1,-68(%rbp)
            movzbl regex+56(%rip),%eax
            orl $64,%eax
            movb %al,regex+56(%rip)
            movl -72(%rbp),%edx
            movl -68(%rbp),%eax
            addl %eax,%edx
            movl -72(%rbp),%eax
            movl $regs.6373,%r8d
            movl %eax,%ecx
            movq %rbx,%rsi
            movl $regex,%edi
            callq re_match
.L_416596:
            movl %eax,-68(%rbp)
.L_416599:

            cmpl $0,-68(%rbp)
            jg .L_41661b
.L_41659f:
            movl -72(%rbp),%eax
            cltq 
            movq %r12,%rcx
            movq %rbx,%rdx
            subq %rdx,%rcx
            movq %rcx,%rdx
            cmpq %rdx,%rax
            je .L_416627
.L_4165b5:
            addl $1,-72(%rbp)
            movzbl regex+56(%rip),%eax
            andl $4294967231,%eax
            movb %al,regex+56(%rip)
            movq %r12,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movl %eax,%edx
            movl -72(%rbp),%eax
            subl %eax,%edx
            movl %edx,%eax
            movl %eax,%ecx
            movq %r12,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movl %eax,%edx
            movl -72(%rbp),%eax
            movl $regs.6373,%r9d
            movl %ecx,%r8d
            movl %eax,%ecx
            movq %rbx,%rsi
            movl $regex,%edi
            callq re_search
.L_416609:
            movl %eax,-72(%rbp)
            movq regs.6373+16(%rip),%rax
            movl (%rax),%eax
            subl -72(%rbp),%eax
            movl %eax,-68(%rbp)
.L_41661b:

            cmpl $0,-72(%rbp)
            jns .L_4164b2
.L_416625:
            jmp .L_416628
.L_416627:

            nop
.L_416628:

            leaq 1(%r12),%rbx
.L_41662d:

            cmpq %r13,%r12
            jb .L_4162a1
.L_416636:
            jmp .L_41663c
.L_416638:

            nop
            jmp .L_41663c
.L_41663b:

            nop
.L_41663c:

            movl $0,%eax
            jmp .L_416660
.L_416643:

            nop
            jmp .L_416647
.L_416646:

            nop
.L_416647:

            cmpq %r13,%r12
            jae .L_416653
.L_41664c:
            leaq 1(%r12),%rdx
            jmp .L_416656
.L_416653:

            movq %r12,%rdx
.L_416656:

            movq -104(%rbp),%rax
            movq %rdx,(%rax)
            movq %rbx,%rax
.L_416660:

            movq -40(%rbp),%rdi
            xorq %fs:40,%rdi
            je .L_416674
.L_41666f:
            callq __stack_chk_fail@PLT
.L_416674:

            addq $80,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %r14
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.globl Fcompile
.type Fcompile, @function
Fcompile:
#-----------------------------------
# END   - Function Header

Fcompile:

            pushq %rbp
            movq %rsp,%rbp
            subq $48,%rsp
            movq %rdi,-40(%rbp)
            movq %rsi,-48(%rbp)
            movl $0,%eax
            callq kwsinit
.L_41669b:
            movq -40(%rbp),%rax
            movq %rax,-24(%rbp)
.L_4166a3:

            movq -24(%rbp),%rax
            movq %rax,-16(%rbp)
            jmp .L_4166b2
.L_4166ad:

            addq $1,-16(%rbp)
.L_4166b2:

            movq -40(%rbp),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            cmpq -16(%rbp),%rax
            jbe .L_4166ce
.L_4166c3:
            movq -16(%rbp),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_4166ad
.L_4166ce:

            movq -16(%rbp),%rdx
            movq -24(%rbp),%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rdx
            movq kwset(%rip),%rax
            movq -24(%rbp),%rcx
            movq %rcx,%rsi
            movq %rax,%rdi
            callq kwsincr
.L_4166f5:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_416711
.L_416700:
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_416711:

            movq -40(%rbp),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            cmpq -16(%rbp),%rax
            jbe .L_416727
.L_416722:
            addq $1,-16(%rbp)
.L_416727:

            movq -16(%rbp),%rax
            movq %rax,-24(%rbp)
            movq -40(%rbp),%rdx
            movq -48(%rbp),%rax
            addq %rdx,%rax
            cmpq -24(%rbp),%rax
            ja .L_4166a3
.L_416744:
            movq kwset(%rip),%rax
            movq %rax,%rdi
            callq kwsprep
.L_416753:
            movq %rax,-8(%rbp)
            cmpq $0,-8(%rbp)
            je .L_41676f
.L_41675e:
            movq -8(%rbp),%rax
            movl $0,%esi
            movq %rax,%rdi
            callq fatal
.L_41676f:

            nop
            leave 
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 2
.globl Fexecute
.type Fexecute, @function
Fexecute:
#-----------------------------------
# END   - Function Header

Fexecute:

            pushq %rbp
            movq %rsp,%rbp
            pushq %r13
            pushq %r12
            pushq %rbx
            subq $72,%rsp
            movq %rdi,-72(%rbp)
            movq %rsi,-80(%rbp)
            movq %rdx,-88(%rbp)
            movq %fs:40,%rax
            movq %rax,-40(%rbp)
            xorl %eax,%eax
            movq -72(%rbp),%rbx
            jmp .L_416915
.L_4167a3:

            movq -72(%rbp),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            movq %rax,%rdx
            movq %rbx,%rax
            subq %rax,%rdx
            movq %rdx,%rax
            movq %rax,%rsi
            movq kwset(%rip),%rax
            leaq -64(%rbp),%rdx
            movq %rdx,%rcx
            movq %rsi,%rdx
            movq %rbx,%rsi
            movq %rax,%rdi
            callq kwsexec
.L_4167d9:
            movq %rax,%rbx
            testq %rbx,%rbx
            jne .L_4167eb
.L_4167e1:
            movl $0,%eax
            jmp .L_41699d
.L_4167eb:

            movq -48(%rbp),%r12
            movl match_lines(%rip),%eax
            testl %eax,%eax
            je .L_41683a
.L_4167f9:
            cmpq -72(%rbp),%rbx
            jbe .L_41680e
.L_4167ff:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_416910
.L_41680e:

            leaq (%rbx,%r12),%rax
            movq -72(%rbp),%rcx
            movq -80(%rbp),%rdx
            addq %rcx,%rdx
            cmpq %rdx,%rax
            jae .L_416930
.L_416826:
            leaq (%rbx,%r12),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            je .L_416930
.L_416835:
            jmp .L_416911
.L_41683a:

            movl match_words(%rip),%eax
            testl %eax,%eax
            je .L_416933
.L_416848:
            movq %rbx,%r13
            jmp .L_416900
.L_416850:

            cmpq -72(%rbp),%r13
            jbe .L_41688e
.L_416856:
            callq __ctype_b_loc@PLT
.L_41685b:
            movq (%rax),%rdx
            leaq -1(%r13),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rax,%rax
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_416911
.L_41687f:
            leaq -1(%r13),%rax
            movzbl (%rax),%eax
            cmpb $95,%al
            je .L_416911
.L_41688e:

            leaq (%r13,%r12),%rax
            movq -72(%rbp),%rcx
            movq -80(%rbp),%rdx
            addq %rcx,%rdx
            cmpq %rdx,%rax
            jae .L_416934
.L_4168a7:
            callq __ctype_b_loc@PLT
.L_4168ac:
            movq (%rax),%rdx
            leaq (%r13,%r12),%rax
            movzbl (%rax),%eax
            movzbl %al,%eax
            addq %rax,%rax
            addq %rdx,%rax
            movzwl (%rax),%eax
            movzwl %ax,%eax
            andl $8,%eax
            testl %eax,%eax
            jne .L_4168d9
.L_4168cd:
            leaq (%r13,%r12),%rax
            movzbl (%rax),%eax
            cmpb $95,%al
            jne .L_416934
.L_4168d9:

            subq $1,%r12
            movq kwset(%rip),%rax
            leaq -64(%rbp),%rdx
            movq %rdx,%rcx
            movq %r12,%rdx
            movq %rbx,%rsi
            movq %rax,%rdi
            callq kwsexec
.L_4168f9:
            movq %rax,%r13
            movq -48(%rbp),%r12
.L_416900:

            testq %r12,%r12
            je .L_416911
.L_416905:
            testq %r13,%r13
            jne .L_416850
.L_41690e:
            jmp .L_416911
.L_416910:

            nop
.L_416911:

            addq $1,%rbx
.L_416915:

            movq -72(%rbp),%rdx
            movq -80(%rbp),%rax
            addq %rdx,%rax
            cmpq %rbx,%rax
            jae .L_4167a3
.L_416929:
            movl $0,%eax
            jmp .L_41699d
.L_416930:

            nop
            jmp .L_416934
.L_416933:

            nop
.L_416934:

            movq -72(%rbp),%rax
            movq %rbx,%rdx
            subq %rdx,%rax
            movq %rax,%rdx
            movq -80(%rbp),%rax
            movq %r12,%rcx
            subq %rcx,%rax
            addq %rdx,%rax
            movq %rax,%rdx
            leaq (%rbx,%r12),%rax
            movl $10,%esi
            movq %rax,%rdi
            callq memchr@PLT
.L_416962:
            movq %rax,%r12
            testq %r12,%r12
            je .L_416970
.L_41696a:
            addq $1,%r12
            jmp .L_41697c
.L_416970:

            movq -72(%rbp),%rdx
            movq -80(%rbp),%rax
            leaq (%rdx,%rax),%r12
.L_41697c:

            movq -88(%rbp),%rax
            movq %r12,(%rax)
            jmp .L_416989
.L_416985:

            subq $1,%rbx
.L_416989:

            cmpq -72(%rbp),%rbx
            jbe .L_41699a
.L_41698f:
            leaq -1(%rbx),%rax
            movzbl (%rax),%eax
            cmpb $10,%al
            jne .L_416985
.L_41699a:

            movq %rbx,%rax
.L_41699d:

            movq -40(%rbp),%rdi
            xorq %fs:40,%rdi
            je .L_4169b1
.L_4169ac:
            callq __stack_chk_fail@PLT
.L_4169b1:

            addq $72,%rsp
            popq %rbx
            popq %r12
            popq %r13
            popq %rbp
            retq 

# BEGIN - Function Header
#-----------------------------------
.align 8
.globl __fstat
.type __fstat, @function
__fstat:
#-----------------------------------
# END   - Function Header

__fstat:
fstat:

            movq %rsi,%rdx
            movl %edi,%esi
            movl $1,%edi
            jmp __fxstat@PLT

#===================================
.section .rodata
.align 16
#===================================

_IO_stdin_used:
          .byte 0x1
.L_416a61:          .byte 0x0
.L_416a62:          .byte 0x2
.L_416a63:          .byte 0x0
.L_416a64:          .byte 0x0
.L_416a65:          .byte 0x0
.L_416a66:          .byte 0x0
.L_416a67:          .byte 0x0
.L_416a68:
          .string "%s: %s: %s\n"
.L_416a74:
          .string "%s: %s\n"
.L_416a7c:
          .string "memory exhausted"
.L_416a8d:
          .string "%s: warning: %s: %s\n"
.L_416aa2:
          .string "%s%c"
.L_416aa7:
          .string "%d%c"
.L_416aac:
          .string "%lu%c"
.L_416ab2:
          .string "writing output"
.L_416ac1:
          .string "--"
.L_416ac4:          .byte 0x0
.L_416ac5:          .byte 0x0
.L_416ac6:          .byte 0x0
.L_416ac7:          .byte 0x0
.L_416ac8:
          .string "usage: %s [-[[AB] ]<num>] [-[CEFGVchilnqsvwx]] [-[ef]] <expr> [<files...>]\n"
.L_416b14:
          .string "target"
.L_416b1b:
          .string "egrep"
.L_416b21:          .byte 0x0
.L_416b22:          .byte 0x0
.L_416b23:          .byte 0x0
.L_416b24:          .byte 0x0
.L_416b25:          .byte 0x0
.L_416b26:          .byte 0x0
.L_416b27:          .byte 0x0
.L_416b28:
          .string "you may specify only one of -E, -F, or -G"
.L_416b52:
          .string "posix-egrep"
.L_416b5e:
          .string "fgrep"
.L_416b64:
          .string "grep"
.L_416b69:
          .string "%s\n"
.L_416b6d:
          .string "matcher already specified"
.L_416b87:
          .string "-"
.L_416b89:
          .string "r"
.L_416b8b:          .byte 0x0
.L_416b8c:          .byte 0x0
.L_416b8d:          .byte 0x0
.L_416b8e:          .byte 0x0
.L_416b8f:          .byte 0x0
.L_416b90:
          .string "0123456789A:B:CEFGVX:bce:f:hiLlnqsvwxy"
.L_416bb7:
          .string "default"
.L_416bbf:
          .string "(standard input)"
.L_416bd0:
          .string "%s:"
.L_416bd4:
          .string "%d\n"
.L_416bd8:
          .quad .L_4024cd
.L_416be0:          .quad .L_4024cd
.L_416be8:          .quad .L_4024cd
.L_416bf0:          .quad .L_4024cd
.L_416bf8:          .quad .L_4024cd
.L_416c00:          .quad .L_4024cd
.L_416c08:          .quad .L_4024cd
.L_416c10:          .quad .L_4024cd
.L_416c18:          .quad .L_4024cd
.L_416c20:          .quad .L_4024cd
.L_416c28:          .quad .L_40294a
.L_416c30:          .quad .L_40294a
.L_416c38:          .quad .L_40294a
.L_416c40:          .quad .L_40294a
.L_416c48:          .quad .L_40294a
.L_416c50:          .quad .L_40294a
.L_416c58:          .quad .L_40294a
.L_416c60:          .quad .L_402510
.L_416c68:          .quad .L_402542
.L_416c70:          .quad .L_402574
.L_416c78:          .quad .L_40294a
.L_416c80:          .quad .L_40258f
.L_416c88:          .quad .L_4025d2
.L_416c90:          .quad .L_402615
.L_416c98:          .quad .L_40294a
.L_416ca0:          .quad .L_40294a
.L_416ca8:          .quad .L_40294a
.L_416cb0:          .quad .L_40294a
.L_416cb8:          .quad .L_4028df
.L_416cc0:          .quad .L_40294a
.L_416cc8:          .quad .L_40294a
.L_416cd0:          .quad .L_40294a
.L_416cd8:          .quad .L_40294a
.L_416ce0:          .quad .L_40294a
.L_416ce8:          .quad .L_40294a
.L_416cf0:          .quad .L_40294a
.L_416cf8:          .quad .L_40294a
.L_416d00:          .quad .L_40294a
.L_416d08:          .quad .L_402658
.L_416d10:          .quad .L_40294a
.L_416d18:          .quad .L_40267b
.L_416d20:          .quad .L_40294a
.L_416d28:          .quad .L_40294a
.L_416d30:          .quad .L_40294a
.L_416d38:          .quad .L_40294a
.L_416d40:          .quad .L_40294a
.L_416d48:          .quad .L_40294a
.L_416d50:          .quad .L_40294a
.L_416d58:          .quad .L_40294a
.L_416d60:          .quad .L_40294a
.L_416d68:          .quad .L_4026a9
.L_416d70:          .quad .L_4026b8
.L_416d78:          .quad .L_40294a
.L_416d80:          .quad .L_4026ce
.L_416d88:          .quad .L_402757
.L_416d90:          .quad .L_40294a
.L_416d98:          .quad .L_4028c7
.L_416da0:          .quad .L_4028d3
.L_416da8:          .quad .L_40294a
.L_416db0:          .quad .L_40294a
.L_416db8:          .quad .L_4028f2
.L_416dc0:          .quad .L_40294a
.L_416dc8:          .quad .L_402905
.L_416dd0:          .quad .L_40294a
.L_416dd8:          .quad .L_40294a
.L_416de0:          .quad .L_402911
.L_416de8:          .quad .L_40294a
.L_416df0:          .quad .L_40291d
.L_416df8:          .quad .L_40294a
.L_416e00:          .quad .L_40294a
.L_416e08:          .quad .L_402926
.L_416e10:          .quad .L_402932
.L_416e18:          .quad .L_40293e
.L_416e20:          .quad .L_4028d3
.L_416e28:
          .string "No match"
.L_416e31:
          .string "Invalid regular expression"
.L_416e4c:
          .string "Invalid collation character"
.L_416e68:
          .string "Invalid character class name"
.L_416e85:
          .string "Trailing backslash"
.L_416e98:
          .string "Invalid back reference"
.L_416eaf:
          .string "Unmatched [ or [^"
.L_416ec1:
          .string "Unmatched ( or \\("
.L_416ed3:
          .string "Unmatched \\{"
.L_416ee0:
          .string "Invalid content of \\{\\}"
.L_416ef8:
          .string "Invalid range end"
.L_416f0a:
          .string "Memory exhausted"
.L_416f1b:          .byte 0x0
.L_416f1c:          .byte 0x0
.L_416f1d:          .byte 0x0
.L_416f1e:          .byte 0x0
.L_416f1f:          .byte 0x0
.L_416f20:
          .string "Invalid preceding regular expression"
.L_416f45:          .byte 0x0
.L_416f46:          .byte 0x0
.L_416f47:          .byte 0x0
.L_416f48:
          .string "Premature end of regular expression"
.L_416f6c:
          .string "Regular expression too big"
.L_416f87:
          .string "Unmatched ) or \\)"
.L_416f99:
          .string "alnum"
.L_416f9f:
          .string "alpha"
.L_416fa5:
          .string "blank"
.L_416fab:
          .string "cntrl"
.L_416fb1:
          .string "digit"
.L_416fb7:
          .string "graph"
.L_416fbd:
          .string "lower"
.L_416fc3:
          .string "print"
.L_416fc9:
          .string "punct"
.L_416fcf:
          .string "space"
.L_416fd5:
          .string "upper"
.L_416fdb:
          .string "xdigit"
.L_416fe2:          .byte 0x0
.L_416fe3:          .byte 0x0
.L_416fe4:          .byte 0x0
.L_416fe5:          .byte 0x0
.L_416fe6:          .byte 0x0
.L_416fe7:          .byte 0x0
.L_416fe8:
          .quad .L_405061
.L_416ff0:          .quad .L_407aad
.L_416ff8:          .quad .L_407aad
.L_417000:          .quad .L_407aad
.L_417008:          .quad .L_407aad
.L_417010:          .quad .L_407aad
.L_417018:          .quad .L_407aad
.L_417020:          .quad .L_407aad
.L_417028:          .quad .L_407aad
.L_417030:          .quad .L_407aad
.L_417038:          .quad .L_407aad
.L_417040:          .quad .L_407aad
.L_417048:          .quad .L_407aad
.L_417050:          .quad .L_407aad
.L_417058:          .quad .L_407aad
.L_417060:          .quad .L_407aad
.L_417068:          .quad .L_407aad
.L_417070:          .quad .L_407aad
.L_417078:          .quad .L_407aad
.L_417080:          .quad .L_407aad
.L_417088:          .quad .L_407aad
.L_417090:          .quad .L_407aad
.L_417098:          .quad .L_407aad
.L_4170a0:          .quad .L_407aad
.L_4170a8:          .quad .L_407aad
.L_4170b0:          .quad .L_407aad
.L_4170b8:          .quad .L_4031bd
.L_4170c0:          .quad .L_407aad
.L_4170c8:          .quad .L_407aad
.L_4170d0:          .quad .L_407aad
.L_4170d8:          .quad .L_405031
.L_4170e0:          .quad .L_405049
.L_4170e8:          .quad .L_40341a
.L_4170f0:          .quad .L_4033f3
.L_4170f8:          .quad .L_407aad
.L_417100:          .quad .L_407aad
.L_417108:          .quad .L_403d5e
.L_417110:          .quad .L_407aad
.L_417118:          .quad .L_407aad
.L_417120:          .quad .L_407aad
.L_417128:          .quad .L_407aad
.L_417130:          .quad .L_407aad
.L_417138:          .quad .L_407aad
.L_417140:          .quad .L_407aad
.L_417148:          .quad .L_407aad
.L_417150:          .quad .L_407aad
.L_417158:          .quad .L_407aad
.L_417160:          .quad .L_407aad
.L_417168:          .quad .L_407aad
.L_417170:          .quad .L_407aad
.L_417178:          .quad .L_407aad
.L_417180:          .quad .L_407aad
.L_417188:          .quad .L_407aad
.L_417190:          .quad .L_4033f3
.L_417198:          .quad .L_407aad
.L_4171a0:          .quad .L_407aad
.L_4171a8:          .quad .L_407aad
.L_4171b0:          .quad .L_407aad
.L_4171b8:          .quad .L_407aad
.L_4171c0:          .quad .L_407aad
.L_4171c8:          .quad .L_407aad
.L_4171d0:          .quad .L_407aad
.L_4171d8:          .quad .L_407aad
.L_4171e0:          .quad .L_407aad
.L_4171e8:          .quad .L_407aad
.L_4171f0:          .quad .L_407aad
.L_4171f8:          .quad .L_407aad
.L_417200:          .quad .L_407aad
.L_417208:          .quad .L_407aad
.L_417210:          .quad .L_407aad
.L_417218:          .quad .L_407aad
.L_417220:          .quad .L_407aad
.L_417228:          .quad .L_407aad
.L_417230:          .quad .L_407aad
.L_417238:          .quad .L_407aad
.L_417240:          .quad .L_407aad
.L_417248:          .quad .L_407aad
.L_417250:          .quad .L_407aad
.L_417258:          .quad .L_407aad
.L_417260:          .quad .L_407aad
.L_417268:          .quad .L_407aad
.L_417270:          .quad .L_403f4a
.L_417278:          .quad .L_4050bc
.L_417280:          .quad .L_407aad
.L_417288:          .quad .L_402f80
.L_417290:          .quad .L_407aad
.L_417298:          .quad .L_407aad
.L_4172a0:          .quad .L_407aad
.L_4172a8:          .quad .L_407aad
.L_4172b0:          .quad .L_407aad
.L_4172b8:          .quad .L_407aad
.L_4172c0:          .quad .L_407aad
.L_4172c8:          .quad .L_407aad
.L_4172d0:          .quad .L_407aad
.L_4172d8:          .quad .L_407aad
.L_4172e0:          .quad .L_407aad
.L_4172e8:          .quad .L_407aad
.L_4172f0:          .quad .L_407aad
.L_4172f8:          .quad .L_407aad
.L_417300:          .quad .L_407aad
.L_417308:          .quad .L_407aad
.L_417310:          .quad .L_407aad
.L_417318:          .quad .L_407aad
.L_417320:          .quad .L_407aad
.L_417328:          .quad .L_407aad
.L_417330:          .quad .L_407aad
.L_417338:          .quad .L_407aad
.L_417340:          .quad .L_407aad
.L_417348:          .quad .L_407aad
.L_417350:          .quad .L_407aad
.L_417358:          .quad .L_407aad
.L_417360:          .quad .L_407aad
.L_417368:          .quad .L_407aad
.L_417370:          .quad .L_405091
.L_417378:          .quad .L_405079
.L_417380:
          .quad .L_4077ca
.L_417388:          .quad .L_405124
.L_417390:          .quad .L_4054e8
.L_417398:          .quad .L_407a66
.L_4173a0:          .quad .L_407a4c
.L_4173a8:          .quad .L_407a66
.L_4173b0:          .quad .L_407a66
.L_4173b8:          .quad .L_407a66
.L_4173c0:          .quad .L_407a66
.L_4173c8:          .quad .L_407a66
.L_4173d0:          .quad .L_407807
.L_4173d8:          .quad .L_407807
.L_4173e0:          .quad .L_407807
.L_4173e8:          .quad .L_407807
.L_4173f0:          .quad .L_407807
.L_4173f8:          .quad .L_407807
.L_417400:          .quad .L_407807
.L_417408:          .quad .L_407807
.L_417410:          .quad .L_407807
.L_417418:          .quad .L_407a66
.L_417420:          .quad .L_407a66
.L_417428:          .quad .L_406e6a
.L_417430:          .quad .L_407a66
.L_417438:          .quad .L_40704a
.L_417440:          .quad .L_407a4c
.L_417448:          .quad .L_407a66
.L_417450:          .quad .L_407a66
.L_417458:          .quad .L_40740a
.L_417460:          .quad .L_407a66
.L_417468:          .quad .L_407a66
.L_417470:          .quad .L_407a66
.L_417478:          .quad .L_407a66
.L_417480:          .quad .L_407a66
.L_417488:          .quad .L_407a66
.L_417490:          .quad .L_407a66
.L_417498:          .quad .L_407a66
.L_4174a0:          .quad .L_407a66
.L_4174a8:          .quad .L_407a66
.L_4174b0:          .quad .L_407a66
.L_4174b8:          .quad .L_407a66
.L_4174c0:          .quad .L_407a66
.L_4174c8:          .quad .L_407a66
.L_4174d0:          .quad .L_407a66
.L_4174d8:          .quad .L_407a66
.L_4174e0:          .quad .L_407a66
.L_4174e8:          .quad .L_407a66
.L_4174f0:          .quad .L_407a66
.L_4174f8:          .quad .L_407a66
.L_417500:          .quad .L_406adb
.L_417508:          .quad .L_407a66
.L_417510:          .quad .L_407a66
.L_417518:          .quad .L_407a66
.L_417520:          .quad .L_407a66
.L_417528:          .quad .L_407a66
.L_417530:          .quad .L_407a66
.L_417538:          .quad .L_407a66
.L_417540:          .quad .L_407a66
.L_417548:          .quad .L_4075ea
.L_417550:          .quad .L_407a66
.L_417558:          .quad .L_40722a
.L_417560:          .quad .L_407a66
.L_417568:          .quad .L_407a66
.L_417570:          .quad .L_407a66
.L_417578:          .quad .L_407a66
.L_417580:          .quad .L_407a66
.L_417588:          .quad .L_407a66
.L_417590:          .quad .L_407a66
.L_417598:          .quad .L_407a66
.L_4175a0:          .quad .L_407a66
.L_4175a8:          .quad .L_407a66
.L_4175b0:          .quad .L_407a66
.L_4175b8:          .quad .L_407a66
.L_4175c0:          .quad .L_407a66
.L_4175c8:          .quad .L_407a66
.L_4175d0:          .quad .L_407a66
.L_4175d8:          .quad .L_407a66
.L_4175e0:          .quad .L_407a66
.L_4175e8:          .quad .L_407a66
.L_4175f0:          .quad .L_407a66
.L_4175f8:          .quad .L_407a66
.L_417600:          .quad .L_4068ef
.L_417608:          .quad .L_407a66
.L_417610:          .quad .L_407a66
.L_417618:          .quad .L_407a66
.L_417620:          .quad .L_405f0a
.L_417628:          .quad .L_405ab3
.L_417630:
          .quad .L_408b18
.L_417638:          .quad .L_40869b
.L_417640:          .quad .L_40882a
.L_417648:          .quad .L_4086b4
.L_417650:          .quad .L_408724
.L_417658:          .quad .L_408b03
.L_417660:          .quad .L_408b03
.L_417668:          .quad .L_408683
.L_417670:          .quad .L_408b18
.L_417678:          .quad .L_408b18
.L_417680:          .quad .L_408b18
.L_417688:          .quad .L_408b18
.L_417690:          .quad .L_408882
.L_417698:          .quad .L_408882
.L_4176a0:          .quad .L_408944
.L_4176a8:          .quad .L_408944
.L_4176b0:          .quad .L_408882
.L_4176b8:          .quad .L_408882
.L_4176c0:          .quad .L_408882
.L_4176c8:          .quad .L_408b18
.L_4176d0:          .quad .L_408abd
.L_4176d8:          .quad .L_408882
.L_4176e0:          .quad .L_408afc
.L_4176e8:          .quad .L_4087be
.L_4176f0:          .quad .L_4087f4
.L_4176f8:          .quad .L_408b18
.L_417700:          .quad .L_408b18
.L_417708:          .quad .L_408b18
.L_417710:          .quad .L_408b18
.L_417718:
          .quad .L_40c6c0
.L_417720:          .quad .L_409e5d
.L_417728:          .quad .L_40a056
.L_417730:          .quad .L_40a18f
.L_417738:          .quad .L_40a18f
.L_417740:          .quad .L_40a321
.L_417748:          .quad .L_40a520
.L_417750:          .quad .L_40ac42
.L_417758:          .quad .L_40af55
.L_417760:          .quad .L_40afc8
.L_417768:          .quad .L_40b046
.L_417770:          .quad .L_40b07e
.L_417778:          .quad .L_40b98c
.L_417780:          .quad .L_40b98c
.L_417788:          .quad .L_40b315
.L_417790:          .quad .L_40b097
.L_417798:          .quad .L_40b824
.L_4177a0:          .quad .L_40b646
.L_4177a8:          .quad .L_40ba94
.L_4177b0:          .quad .L_40bcc9
.L_4177b8:          .quad .L_40be3f
.L_4177c0:          .quad .L_40beea
.L_4177c8:          .quad .L_40bf66
.L_4177d0:          .quad .L_40c499
.L_4177d8:          .quad .L_40c5c4
.L_4177e0:          .quad .L_40c24c
.L_4177e8:          .quad .L_40c350
.L_4177f0:          .quad .L_40c014
.L_4177f8:          .quad .L_40c130
.L_417800:
          .quad .L_40cecf
.L_417808:          .quad .L_40cec8
.L_417810:          .quad .L_40cec8
.L_417818:          .quad .L_40cec8
.L_417820:          .quad .L_40cec8
.L_417828:          .quad .L_40cd27
.L_417830:          .quad .L_40cec8
.L_417838:          .quad .L_40ce92
.L_417840:          .quad .L_40cecf
.L_417848:          .quad .L_40cecf
.L_417850:          .quad .L_40cecf
.L_417858:          .quad .L_40cecf
.L_417860:          .quad .L_40cdaf
.L_417868:          .quad .L_40cec8
.L_417870:          .quad .L_40cec8
.L_417878:          .quad .L_40cec8
.L_417880:          .quad .L_40cec8
.L_417888:          .quad .L_40cec8
.L_417890:          .quad .L_40cec8
.L_417898:          .quad .L_40cec8
.L_4178a0:          .quad .L_40ce01
.L_4178a8:          .quad .L_40cec8
.L_4178b0:          .quad .L_40cebc
.L_4178b8:          .quad .L_40cec8
.L_4178c0:          .quad .L_40cec8
.L_4178c8:          .quad .L_40cecf
.L_4178d0:          .quad .L_40cecf
.L_4178d8:          .quad .L_40cecf
.L_4178e0:          .quad .L_40cecf
.L_4178e8:
          .string "Success"
.L_4178f0:
          .string ":alpha:]"
.L_4178f9:
          .string ":upper:]"
.L_417902:
          .string ":lower:]"
.L_41790b:
          .string ":digit:]"
.L_417914:
          .string ":xdigit:]"
.L_41791e:
          .string ":space:]"
.L_417927:
          .string ":punct:]"
.L_417930:
          .string ":alnum:]"
.L_417939:
          .string ":print:]"
.L_417942:
          .string ":graph:]"
.L_41794b:
          .string ":cntrl:]"
.L_417954:
          .string "Unfinished \\ escape"
.L_417968:
          .string "unfinished repeat count"
.L_417980:
          .string "malformed repeat count"
.L_417997:
          .string "Unbalanced ["
.L_4179a4:          .byte 0x0
.L_4179a5:          .byte 0x0
.L_4179a6:          .byte 0x0
.L_4179a7:          .byte 0x0
.L_4179a8:
          .quad .L_40e282
.L_4179b0:          .quad .L_40ea0a
.L_4179b8:          .quad .L_40ea0a
.L_4179c0:          .quad .L_40ea0a
.L_4179c8:          .quad .L_40ea0a
.L_4179d0:          .quad .L_40ea0a
.L_4179d8:          .quad .L_40ea0a
.L_4179e0:          .quad .L_40ea0a
.L_4179e8:          .quad .L_40ea0a
.L_4179f0:          .quad .L_40ea0a
.L_4179f8:          .quad .L_40ea0a
.L_417a00:          .quad .L_40ea0a
.L_417a08:          .quad .L_40ea0a
.L_417a10:          .quad .L_40ea0a
.L_417a18:          .quad .L_40ea0a
.L_417a20:          .quad .L_40ea0a
.L_417a28:          .quad .L_40ea0a
.L_417a30:          .quad .L_40ea0a
.L_417a38:          .quad .L_40ea0a
.L_417a40:          .quad .L_40ea0a
.L_417a48:          .quad .L_40ea0a
.L_417a50:          .quad .L_40ea0a
.L_417a58:          .quad .L_40ea0a
.L_417a60:          .quad .L_40ea0a
.L_417a68:          .quad .L_40ea0a
.L_417a70:          .quad .L_40ea0a
.L_417a78:          .quad .L_40dca3
.L_417a80:          .quad .L_40ea0a
.L_417a88:          .quad .L_40ea0a
.L_417a90:          .quad .L_40ea0a
.L_417a98:          .quad .L_40e2d1
.L_417aa0:          .quad .L_40e31b
.L_417aa8:          .quad .L_40df25
.L_417ab0:          .quad .L_40df5f
.L_417ab8:          .quad .L_40ea0a
.L_417ac0:          .quad .L_40ea0a
.L_417ac8:          .quad .L_40e382
.L_417ad0:          .quad .L_40ea0a
.L_417ad8:          .quad .L_40ea0a
.L_417ae0:          .quad .L_40de10
.L_417ae8:          .quad .L_40de10
.L_417af0:          .quad .L_40de10
.L_417af8:          .quad .L_40de10
.L_417b00:          .quad .L_40de10
.L_417b08:          .quad .L_40de10
.L_417b10:          .quad .L_40de10
.L_417b18:          .quad .L_40de10
.L_417b20:          .quad .L_40de10
.L_417b28:          .quad .L_40ea0a
.L_417b30:          .quad .L_40ea0a
.L_417b38:          .quad .L_40de4c
.L_417b40:          .quad .L_40ea0a
.L_417b48:          .quad .L_40de6b
.L_417b50:          .quad .L_40dec8
.L_417b58:          .quad .L_40ea0a
.L_417b60:          .quad .L_40ea0a
.L_417b68:          .quad .L_40dea9
.L_417b70:          .quad .L_40ea0a
.L_417b78:          .quad .L_40ea0a
.L_417b80:          .quad .L_40ea0a
.L_417b88:          .quad .L_40ea0a
.L_417b90:          .quad .L_40ea0a
.L_417b98:          .quad .L_40ea0a
.L_417ba0:          .quad .L_40ea0a
.L_417ba8:          .quad .L_40ea0a
.L_417bb0:          .quad .L_40ea0a
.L_417bb8:          .quad .L_40ea0a
.L_417bc0:          .quad .L_40ea0a
.L_417bc8:          .quad .L_40ea0a
.L_417bd0:          .quad .L_40ea0a
.L_417bd8:          .quad .L_40ea0a
.L_417be0:          .quad .L_40ea0a
.L_417be8:          .quad .L_40ea0a
.L_417bf0:          .quad .L_40ea0a
.L_417bf8:          .quad .L_40ea0a
.L_417c00:          .quad .L_40ea0a
.L_417c08:          .quad .L_40ea0a
.L_417c10:          .quad .L_40e427
.L_417c18:          .quad .L_40ea0a
.L_417c20:          .quad .L_40ea0a
.L_417c28:          .quad .L_40ea0a
.L_417c30:          .quad .L_40e4d7
.L_417c38:          .quad .L_40dc24
.L_417c40:          .quad .L_40ea0a
.L_417c48:          .quad .L_40dc4e
.L_417c50:          .quad .L_40ea0a
.L_417c58:          .quad .L_40ea0a
.L_417c60:          .quad .L_40ea0a
.L_417c68:          .quad .L_40de8a
.L_417c70:          .quad .L_40ea0a
.L_417c78:          .quad .L_40ea0a
.L_417c80:          .quad .L_40ea0a
.L_417c88:          .quad .L_40ea0a
.L_417c90:          .quad .L_40ea0a
.L_417c98:          .quad .L_40ea0a
.L_417ca0:          .quad .L_40ea0a
.L_417ca8:          .quad .L_40ea0a
.L_417cb0:          .quad .L_40ea0a
.L_417cb8:          .quad .L_40ea0a
.L_417cc0:          .quad .L_40ea0a
.L_417cc8:          .quad .L_40ea0a
.L_417cd0:          .quad .L_40ea0a
.L_417cd8:          .quad .L_40ea0a
.L_417ce0:          .quad .L_40ea0a
.L_417ce8:          .quad .L_40ea0a
.L_417cf0:          .quad .L_40ea0a
.L_417cf8:          .quad .L_40ea0a
.L_417d00:          .quad .L_40ea0a
.L_417d08:          .quad .L_40ea0a
.L_417d10:          .quad .L_40e427
.L_417d18:          .quad .L_40ea0a
.L_417d20:          .quad .L_40ea0a
.L_417d28:          .quad .L_40ea0a
.L_417d30:          .quad .L_40dfbc
.L_417d38:          .quad .L_40e234
.L_417d40:
          .quad .L_40ec1d
.L_417d48:          .quad .L_40ec0d
.L_417d50:          .quad .L_40ec0d
.L_417d58:          .quad .L_40ec0d
.L_417d60:          .quad .L_40ec0d
.L_417d68:          .quad .L_40ec0d
.L_417d70:          .quad .L_40ec0d
.L_417d78:          .quad .L_40ec0d
.L_417d80:          .quad .L_40ec2e
.L_417d88:          .quad .L_40ec2e
.L_417d90:          .quad .L_40ec2e
.L_417d98:          .quad .L_40ec0d
.L_417da0:          .quad .L_40ebfc
.L_417da8:          .quad .L_40ebfc
.L_417db0:          .quad .L_40ebfc
.L_417db8:
          .string "Unbalanced ("
.L_417dc5:
          .string "No syntax specified"
.L_417dd9:
          .string "Unbalanced )"
.L_417de6:          .byte 0x0
.L_417de7:          .byte 0x0
.L_417de8:
          .quad .L_40fd6a
.L_417df0:          .quad .L_40fd77
.L_417df8:          .quad .L_40fd84
.L_417e00:          .quad .L_40fd91
.L_417e08:          .quad .L_40fd9e
.L_417e10:          .quad .L_40fdab
.L_417e18:
          .quad .L_410088
.L_417e20:          .quad .L_410812
.L_417e28:          .quad .L_410812
.L_417e30:          .quad .L_410812
.L_417e38:          .quad .L_410812
.L_417e40:          .quad .L_410812
.L_417e48:          .quad .L_410812
.L_417e50:          .quad .L_410812
.L_417e58:          .quad .L_410325
.L_417e60:          .quad .L_4100d3
.L_417e68:          .quad .L_4100d3
.L_417e70:          .quad .L_410812
.L_417e78:          .quad .L_410363
.L_417e80:          .quad .L_410768
.L_417e88:          .quad .L_410768
.L_417e90:
          .string "out of memory"
.L_417e9e:
          .byte 0x0
.L_417e9f:
          .string "ggrep"
.L_417ea5:
          .string "gegrep"
.L_417eac:
          .string "gfgrep"
.L_417eb3:

#===================================
.section .init_array
.align 8
#===================================


#===================================
.section .fini_array
.align 8
#===================================

.L_619e20:


#===================================
.section .data
.align 16
#===================================

.L_61a1a0:          .byte 0x0
.L_61a1a1:          .byte 0x0
.L_61a1a2:          .byte 0x0
.L_61a1a3:          .byte 0x0
.L_61a1a4:          .byte 0x0
.L_61a1a5:          .byte 0x0
.L_61a1a6:          .byte 0x0
.L_61a1a7:          .byte 0x0
.L_61a1a8:          .byte 0x0
.L_61a1a9:          .byte 0x0
.L_61a1aa:          .byte 0x0
.L_61a1ab:          .byte 0x0
.L_61a1ac:          .byte 0x0
.L_61a1ad:          .byte 0x0
.L_61a1ae:          .byte 0x0
.L_61a1af:          .byte 0x0
.L_61a1b0:          .byte 0x0
.L_61a1b1:          .byte 0x0
.L_61a1b2:          .byte 0x0
.L_61a1b3:          .byte 0x0
.L_61a1b4:          .byte 0x0
.L_61a1b5:          .byte 0x0
.L_61a1b6:          .byte 0x0
.L_61a1b7:          .byte 0x0
.L_61a1b8:          .byte 0x0
.L_61a1b9:          .byte 0x0
.L_61a1ba:          .byte 0x0
.L_61a1bb:          .byte 0x0
.L_61a1bc:          .byte 0x0
.L_61a1bd:          .byte 0x0
.L_61a1be:          .byte 0x0
.L_61a1bf:          .byte 0x0
version:
          .string "GNU grep version 2.0"
.L_61a1d5:          .byte 0x0
.L_61a1d6:          .byte 0x0
.L_61a1d7:          .byte 0x0
.L_61a1d8:          .byte 0x0
.L_61a1d9:          .byte 0x0
.L_61a1da:          .byte 0x0
.L_61a1db:          .byte 0x0
.L_61a1dc:          .byte 0x0
.L_61a1dd:          .byte 0x0
.L_61a1de:          .byte 0x0
.L_61a1df:          .byte 0x0
re_error_msg:
          .byte 0x0
.L_61a1e1:          .byte 0x0
.L_61a1e2:          .byte 0x0
.L_61a1e3:          .byte 0x0
.L_61a1e4:          .byte 0x0
.L_61a1e5:          .byte 0x0
.L_61a1e6:          .byte 0x0
.L_61a1e7:          .byte 0x0
.L_61a1e8:          .quad .L_416e28
.L_61a1f0:          .quad .L_416e31
.L_61a1f8:          .quad .L_416e4c
.L_61a200:          .quad .L_416e68
.L_61a208:          .quad .L_416e85
.L_61a210:          .quad .L_416e98
.L_61a218:          .quad .L_416eaf
.L_61a220:          .quad .L_416ec1
.L_61a228:          .quad .L_416ed3
.L_61a230:          .quad .L_416ee0
.L_61a238:          .quad .L_416ef8
.L_61a240:          .quad .L_416f0a
.L_61a248:          .quad .L_416f20
.L_61a250:          .quad .L_416f48
.L_61a258:          .quad .L_416f6c
.L_61a260:          .quad .L_416f87
re_max_failures:
          .byte 0xd0
.L_61a269:          .byte 0x7
.L_61a26a:          .byte 0x0
.L_61a26b:          .byte 0x0
.L_61a26c:          .byte 0x0
.L_61a26d:          .byte 0x0
.L_61a26e:          .byte 0x0
.L_61a26f:          .byte 0x0
.L_61a270:          .byte 0x0
.L_61a271:          .byte 0x0
.L_61a272:          .byte 0x0
.L_61a273:          .byte 0x0
.L_61a274:          .byte 0x0
.L_61a275:          .byte 0x0
.L_61a276:          .byte 0x0
.L_61a277:          .byte 0x0
.L_61a278:          .byte 0x0
.L_61a279:          .byte 0x0
.L_61a27a:          .byte 0x0
.L_61a27b:          .byte 0x0
.L_61a27c:          .byte 0x0
.L_61a27d:          .byte 0x0
.L_61a27e:          .byte 0x0
.L_61a27f:          .byte 0x0
prednames:
          .quad .L_4178f0
.L_61a288:
          .quad is_alpha
.L_61a290:          .quad .L_4178f9
.L_61a298:          .quad is_upper
.L_61a2a0:          .quad .L_417902
.L_61a2a8:          .quad is_lower
.L_61a2b0:          .quad .L_41790b
.L_61a2b8:          .quad is_digit
.L_61a2c0:          .quad .L_417914
.L_61a2c8:          .quad is_xdigit
.L_61a2d0:          .quad .L_41791e
.L_61a2d8:          .quad is_space
.L_61a2e0:          .quad .L_417927
.L_61a2e8:          .quad is_punct
.L_61a2f0:          .quad .L_417930
.L_61a2f8:          .quad is_alnum
.L_61a300:          .quad .L_417939
.L_61a308:          .quad is_print
.L_61a310:          .quad .L_417942
.L_61a318:          .quad is_graph
.L_61a320:          .quad .L_41794b
.L_61a328:          .quad is_cntrl
.L_61a330:          .byte 0x0
.L_61a331:          .byte 0x0
.L_61a332:          .byte 0x0
.L_61a333:          .byte 0x0
.L_61a334:          .byte 0x0
.L_61a335:          .byte 0x0
.L_61a336:          .byte 0x0
.L_61a337:          .byte 0x0
.L_61a338:          .byte 0x0
.L_61a339:          .byte 0x0
.L_61a33a:          .byte 0x0
.L_61a33b:          .byte 0x0
.L_61a33c:          .byte 0x0
.L_61a33d:          .byte 0x0
.L_61a33e:          .byte 0x0
.L_61a33f:          .byte 0x0
matchers:
          .quad .L_416bb7
.L_61a348:
          .quad Gcompile
.L_61a350:
          .quad EGexecute
.L_61a358:          .quad .L_416b64
.L_61a360:          .quad Gcompile
.L_61a368:          .quad EGexecute
.L_61a370:          .quad .L_417e9f
.L_61a378:          .quad Gcompile
.L_61a380:          .quad EGexecute
.L_61a388:          .quad .L_416b1b
.L_61a390:          .quad Ecompile
.L_61a398:          .quad EGexecute
.L_61a3a0:          .quad .L_416b52
.L_61a3a8:          .quad Ecompile
.L_61a3b0:          .quad EGexecute
.L_61a3b8:          .quad .L_417ea5
.L_61a3c0:          .quad Ecompile
.L_61a3c8:          .quad EGexecute
.L_61a3d0:          .quad .L_416b5e
.L_61a3d8:          .quad Fcompile
.L_61a3e0:          .quad Fexecute
.L_61a3e8:          .quad .L_417eac
.L_61a3f0:          .quad Fcompile
.L_61a3f8:          .quad Fexecute
.L_61a400:          .byte 0x0
.L_61a401:          .byte 0x0
.L_61a402:          .byte 0x0
.L_61a403:          .byte 0x0
.L_61a404:          .byte 0x0
.L_61a405:          .byte 0x0
.L_61a406:          .byte 0x0
.L_61a407:          .byte 0x0
.L_61a408:          .byte 0x0
.L_61a409:          .byte 0x0
.L_61a40a:          .byte 0x0
.L_61a40b:          .byte 0x0
.L_61a40c:          .byte 0x0
.L_61a40d:          .byte 0x0
.L_61a40e:          .byte 0x0
.L_61a40f:          .byte 0x0
.L_61a410:          .byte 0x0
.L_61a411:          .byte 0x0
.L_61a412:          .byte 0x0
.L_61a413:          .byte 0x0
.L_61a414:          .byte 0x0
.L_61a415:          .byte 0x0
.L_61a416:          .byte 0x0
.L_61a417:          .byte 0x0
.L_61a418:


#===================================
.bss
.align 16
#===================================


.L_61a420: .zero 8
.L_61a428: .zero 8
.L_61a430: .zero 8
.L_61a438: .zero 4
.L_61a43c: .zero 4
.L_61a440: .zero 8
completed.7594:
 .zero 1
.L_61a449: .zero 23
re_syntax_options:
 .zero 4
.L_61a464: .zero 4
compile:
 .zero 8
execute:
 .zero 8
prog:
 .zero 8
filename:
 .zero 8
errseen:
 .zero 4
.L_61a48c: .zero 4
buffer:
 .zero 8
bufsalloc:
 .zero 8
bufalloc:
 .zero 8
bufdesc:
 .zero 4
.L_61a4ac: .zero 4
bufbeg:
 .zero 8
buflim:
 .zero 8
bufmapped:
 .zero 4
.L_61a4c4: .zero 28
bufstat:
 .zero 144
bufoffset:
 .zero 8
out_quiet:
 .zero 4
out_invert:
 .zero 4
out_file:
 .zero 4
out_line:
 .zero 4
out_byte:
 .zero 4
out_before:
 .zero 4
out_after:
 .zero 4
.L_61a594: .zero 4
totalcc:
 .zero 8
lastnl:
 .zero 8
lastout:
 .zero 8
totalnl:
 .zero 8
pending:
 .zero 4
.L_61a5bc: .zero 4
re_syntax_table:
 .zero 256
dfa:
 .zero 8
syntax_bits:
 .zero 4
syntax_bits_set:
 .zero 4
case_fold:
 .zero 4
.L_61a6d4: .zero 4
lexstart:
 .zero 8
lexptr:
 .zero 8
lexleft:
 .zero 4
lasttok:
 .zero 4
laststart:
 .zero 4
parens:
 .zero 4
minrep:
 .zero 4
maxrep:
 .zero 4
tok:
 .zero 4
depth:
 .zero 4
.L_61a708: .zero 24
dfa_1:
 .zero 136
.L_61a7a8: .zero 24
regex:
 .zero 64
kwset:
 .zero 8
lastexact:
 .zero 4
initialized.3808:
 .zero 4
pagesize.3817:
 .zero 4
used.3861:
 .zero 4
done.3993:
 .zero 4
initialized.5598:
 .zero 4
letters.5589:
 .zero 32
newline.5590:
 .zero 32
sbit_init.5710:
 .zero 4
.L_61a864: .zero 28
sbit.5709:
 .zero 1024
must0.5855:
 .zero 32
trans.6329:
 .zero 256
regs.6373:
 .zero 24
match_words:
 .zero 4
match_lines:
 .zero 4
match_icase:
 .zero 4
.L_61adc4: .zero 4
matcher:
 .zero 8
.L_61add0:
.L_61add0:
