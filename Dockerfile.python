FROM quay.io/pypa/manylinux_2_24_x86_64

RUN export DEBIAN_FRONTEND=noninteractive
RUN ln -fs /usr/share/zoneinfo/America/New_York /etc/localtime
RUN apt-get -y update && \
    apt-get -y install autoconf build-essential curl git \
    python3 python3-pip python3-setuptools python3-venv \
    libffi-dev software-properties-common

# Build ECL
RUN git clone https://gitlab.com/embeddable-common-lisp/ecl.git /ecl
WORKDIR /ecl
RUN git checkout 21.2.1
RUN ./configure
RUN make
RUN make install

# Install tree-sitter C libraries
WORKDIR /
RUN git clone https://github.com/tree-sitter/tree-sitter
WORKDIR /tree-sitter
RUN PREFIX=/usr make all install
WORKDIR /
RUN for language in agda bash c c-sharp cpp css go html java javascript jsdoc json julia ocaml/ocaml ocaml/interface php python ql regex ruby rust scala typescript/tsx typescript/typescript;do \
        [ -d tree-sitter-${language%/*} ] || git clone --depth=1 https://github.com/tree-sitter/tree-sitter-${language%/*};                                                                      \
        cd /tree-sitter-${language}/src;                                                                                                                                                         \
        if test -f "scanner.cc"; then                                                                                                                                                            \
            g++ -fPIC scanner.cc -c -lstdc++;                                                                                                                                                \
            gcc -std=c99 -fPIC parser.c -c;                                                                                                                                                    \
            g++ -shared scanner.o parser.o -o /usr/lib/tree-sitter-$(echo ${language}|sed 's|/|-|').so;                                                                                      \
        elif test -f "scanner.c"; then                                                                                                                                                           \
            gcc -std=c99 -fPIC scanner.c -c;                                                                                                                                                   \
            gcc -std=c99 -fPIC parser.c -c;                                                                                                                                                    \
            gcc -shared scanner.o parser.o -o /usr/lib/tree-sitter-$(echo ${language}|sed 's|/|-|').so;                                                                                        \
        else                                                                                                                                                                                     \
            gcc -std=c99 -fPIC parser.c -c;                                                                                                                                                    \
            gcc -shared parser.o -o /usr/lib/tree-sitter-$(echo ${language}|sed 's|/|-|').so;                                                                                                  \
        fi;                                                                                                                                                                                      \
        mkdir -p /usr/share/tree-sitter/${language}/;                                                                                                                                            \
        cp grammar.json node-types.json /usr/share/tree-sitter/${language};                                                                                                                      \
        cd -;                                                                                                                                                                                    \
    done

# Install QuickLisp and lisp dependencies
RUN curl -O https://beta.quicklisp.org/quicklisp.lisp
RUN ecl --load quicklisp.lisp \
        --eval '(quicklisp-quickstart:install)' \
        --eval '(let ((ql-util::*do-not-prompt* t)) (ql:add-to-init-file))' \
        --eval '(quit)'
RUN git clone https://github.com/edicl/cl-unicode.git /root/quicklisp/local-projects/cl-unicode
RUN git clone https://github.com/GrammaTech/functional-trees.git /root/quicklisp/local-projects/functional-trees
RUN git clone https://github.com/death/cffi /root/quicklisp/local-projects/cffi
RUN git clone https://github.com/death/cl-tree-sitter /root/quicklisp/local-projects/cl-tree-sitter
RUN git clone https://github.com/ruricolist/serapeum /root/quicklisp/local-projects/serapeum
RUN git clone https://github.com/GrammaTech/cl-utils.git /root/quicklisp/local-projects/gt
RUN git clone https://github.com/GrammaTech/sel.git /root/quicklisp/local-projects/sel
RUN ecl --eval '(ql:quickload :software-evolution-library/software/tree-sitter)' --eval '(quit)'

RUN mkdir -p /root/.config/common-lisp/source-registry.conf.d/
RUN echo '(:tree "/root/quicklisp/local-projects/")' > /root/.config/common-lisp/source-registry.conf.d/quicklisp.conf
RUN echo '(:tree "/root/quicklisp/dists/quicklisp/software/")' >> /root/.config/common-lisp/source-registry.conf.d/quicklisp.conf
RUN ecl --eval '(asdf:load-system :software-evolution-library/software/tree-sitter)' --eval '(quit)'

RUN apt-get -y install python python-pip
